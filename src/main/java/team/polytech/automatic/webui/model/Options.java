/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Options
 */
@JsonPropertyOrder({
  Options.JSON_PROPERTY_SAMPLES_SAVE,
  Options.JSON_PROPERTY_SAMPLES_FORMAT,
  Options.JSON_PROPERTY_SAMPLES_FILENAME_PATTERN,
  Options.JSON_PROPERTY_SAVE_IMAGES_ADD_NUMBER,
  Options.JSON_PROPERTY_GRID_SAVE,
  Options.JSON_PROPERTY_GRID_FORMAT,
  Options.JSON_PROPERTY_GRID_EXTENDED_FILENAME,
  Options.JSON_PROPERTY_GRID_ONLY_IF_MULTIPLE,
  Options.JSON_PROPERTY_GRID_PREVENT_EMPTY_SPOTS,
  Options.JSON_PROPERTY_GRID_ZIP_FILENAME_PATTERN,
  Options.JSON_PROPERTY_N_ROWS,
  Options.JSON_PROPERTY_FONT,
  Options.JSON_PROPERTY_GRID_TEXT_ACTIVE_COLOR,
  Options.JSON_PROPERTY_GRID_TEXT_INACTIVE_COLOR,
  Options.JSON_PROPERTY_GRID_BACKGROUND_COLOR,
  Options.JSON_PROPERTY_ENABLE_PNGINFO,
  Options.JSON_PROPERTY_SAVE_TXT,
  Options.JSON_PROPERTY_SAVE_IMAGES_BEFORE_FACE_RESTORATION,
  Options.JSON_PROPERTY_SAVE_IMAGES_BEFORE_HIGHRES_FIX,
  Options.JSON_PROPERTY_SAVE_IMAGES_BEFORE_COLOR_CORRECTION,
  Options.JSON_PROPERTY_SAVE_MASK,
  Options.JSON_PROPERTY_SAVE_MASK_COMPOSITE,
  Options.JSON_PROPERTY_JPEG_QUALITY,
  Options.JSON_PROPERTY_WEBP_LOSSLESS,
  Options.JSON_PROPERTY_EXPORT_FOR4CHAN,
  Options.JSON_PROPERTY_IMG_DOWNSCALE_THRESHOLD,
  Options.JSON_PROPERTY_TARGET_SIDE_LENGTH,
  Options.JSON_PROPERTY_IMG_MAX_SIZE_MP,
  Options.JSON_PROPERTY_USE_ORIGINAL_NAME_BATCH,
  Options.JSON_PROPERTY_USE_UPSCALER_NAME_AS_SUFFIX,
  Options.JSON_PROPERTY_SAVE_SELECTED_ONLY,
  Options.JSON_PROPERTY_SAVE_INIT_IMG,
  Options.JSON_PROPERTY_TEMP_DIR,
  Options.JSON_PROPERTY_CLEAN_TEMP_DIR_AT_START,
  Options.JSON_PROPERTY_SAVE_INCOMPLETE_IMAGES,
  Options.JSON_PROPERTY_OUTDIR_SAMPLES,
  Options.JSON_PROPERTY_OUTDIR_TXT2IMG_SAMPLES,
  Options.JSON_PROPERTY_OUTDIR_IMG2IMG_SAMPLES,
  Options.JSON_PROPERTY_OUTDIR_EXTRAS_SAMPLES,
  Options.JSON_PROPERTY_OUTDIR_GRIDS,
  Options.JSON_PROPERTY_OUTDIR_TXT2IMG_GRIDS,
  Options.JSON_PROPERTY_OUTDIR_IMG2IMG_GRIDS,
  Options.JSON_PROPERTY_OUTDIR_SAVE,
  Options.JSON_PROPERTY_OUTDIR_INIT_IMAGES,
  Options.JSON_PROPERTY_SAVE_TO_DIRS,
  Options.JSON_PROPERTY_GRID_SAVE_TO_DIRS,
  Options.JSON_PROPERTY_USE_SAVE_TO_DIRS_FOR_UI,
  Options.JSON_PROPERTY_DIRECTORIES_FILENAME_PATTERN,
  Options.JSON_PROPERTY_DIRECTORIES_MAX_PROMPT_WORDS,
  Options.JSON_PROPERTY_ES_R_G_A_N_TILE,
  Options.JSON_PROPERTY_ES_R_G_A_N_TILE_OVERLAP,
  Options.JSON_PROPERTY_REALESRGAN_ENABLED_MODELS,
  Options.JSON_PROPERTY_UPSCALER_FOR_IMG2IMG,
  Options.JSON_PROPERTY_FACE_RESTORATION,
  Options.JSON_PROPERTY_FACE_RESTORATION_MODEL,
  Options.JSON_PROPERTY_CODE_FORMER_WEIGHT,
  Options.JSON_PROPERTY_FACE_RESTORATION_UNLOAD,
  Options.JSON_PROPERTY_AUTO_LAUNCH_BROWSER,
  Options.JSON_PROPERTY_SHOW_WARNINGS,
  Options.JSON_PROPERTY_SHOW_GRADIO_DEPRECATION_WARNINGS,
  Options.JSON_PROPERTY_MEMMON_POLL_RATE,
  Options.JSON_PROPERTY_SAMPLES_LOG_STDOUT,
  Options.JSON_PROPERTY_MULTIPLE_TQDM,
  Options.JSON_PROPERTY_PRINT_HYPERNET_EXTRA,
  Options.JSON_PROPERTY_LIST_HIDDEN_FILES,
  Options.JSON_PROPERTY_DISABLE_MMAP_LOAD_SAFETENSORS,
  Options.JSON_PROPERTY_HIDE_LDM_PRINTS,
  Options.JSON_PROPERTY_API_ENABLE_REQUESTS,
  Options.JSON_PROPERTY_API_FORBID_LOCAL_REQUESTS,
  Options.JSON_PROPERTY_API_USERAGENT,
  Options.JSON_PROPERTY_UNLOAD_MODELS_WHEN_TRAINING,
  Options.JSON_PROPERTY_PIN_MEMORY,
  Options.JSON_PROPERTY_SAVE_OPTIMIZER_STATE,
  Options.JSON_PROPERTY_SAVE_TRAINING_SETTINGS_TO_TXT,
  Options.JSON_PROPERTY_DATASET_FILENAME_WORD_REGEX,
  Options.JSON_PROPERTY_DATASET_FILENAME_JOIN_STRING,
  Options.JSON_PROPERTY_TRAINING_IMAGE_REPEATS_PER_EPOCH,
  Options.JSON_PROPERTY_TRAINING_WRITE_CSV_EVERY,
  Options.JSON_PROPERTY_TRAINING_XATTENTION_OPTIMIZATIONS,
  Options.JSON_PROPERTY_TRAINING_ENABLE_TENSORBOARD,
  Options.JSON_PROPERTY_TRAINING_TENSORBOARD_SAVE_IMAGES,
  Options.JSON_PROPERTY_TRAINING_TENSORBOARD_FLUSH_EVERY,
  Options.JSON_PROPERTY_SD_MODEL_CHECKPOINT,
  Options.JSON_PROPERTY_SD_CHECKPOINTS_LIMIT,
  Options.JSON_PROPERTY_SD_CHECKPOINTS_KEEP_IN_CPU,
  Options.JSON_PROPERTY_SD_CHECKPOINT_CACHE,
  Options.JSON_PROPERTY_SD_UNET,
  Options.JSON_PROPERTY_ENABLE_QUANTIZATION,
  Options.JSON_PROPERTY_ENABLE_EMPHASIS,
  Options.JSON_PROPERTY_ENABLE_BATCH_SEEDS,
  Options.JSON_PROPERTY_COMMA_PADDING_BACKTRACK,
  Options.JSON_PROPERTY_CL_I_P_STOP_AT_LAST_LAYERS,
  Options.JSON_PROPERTY_UPCAST_ATTN,
  Options.JSON_PROPERTY_RANDN_SOURCE,
  Options.JSON_PROPERTY_TILING,
  Options.JSON_PROPERTY_HIRES_FIX_REFINER_PASS,
  Options.JSON_PROPERTY_SDXL_CROP_TOP,
  Options.JSON_PROPERTY_SDXL_CROP_LEFT,
  Options.JSON_PROPERTY_SDXL_REFINER_LOW_AESTHETIC_SCORE,
  Options.JSON_PROPERTY_SDXL_REFINER_HIGH_AESTHETIC_SCORE,
  Options.JSON_PROPERTY_SD_VAE_EXPLANATION,
  Options.JSON_PROPERTY_SD_VAE_CHECKPOINT_CACHE,
  Options.JSON_PROPERTY_SD_VAE,
  Options.JSON_PROPERTY_SD_VAE_OVERRIDES_PER_MODEL_PREFERENCES,
  Options.JSON_PROPERTY_AUTO_VAE_PRECISION,
  Options.JSON_PROPERTY_SD_VAE_ENCODE_METHOD,
  Options.JSON_PROPERTY_SD_VAE_DECODE_METHOD,
  Options.JSON_PROPERTY_INPAINTING_MASK_WEIGHT,
  Options.JSON_PROPERTY_INITIAL_NOISE_MULTIPLIER,
  Options.JSON_PROPERTY_IMG2IMG_EXTRA_NOISE,
  Options.JSON_PROPERTY_IMG2IMG_COLOR_CORRECTION,
  Options.JSON_PROPERTY_IMG2IMG_FIX_STEPS,
  Options.JSON_PROPERTY_IMG2IMG_BACKGROUND_COLOR,
  Options.JSON_PROPERTY_IMG2IMG_EDITOR_HEIGHT,
  Options.JSON_PROPERTY_IMG2IMG_SKETCH_DEFAULT_BRUSH_COLOR,
  Options.JSON_PROPERTY_IMG2IMG_INPAINT_MASK_BRUSH_COLOR,
  Options.JSON_PROPERTY_IMG2IMG_INPAINT_SKETCH_DEFAULT_BRUSH_COLOR,
  Options.JSON_PROPERTY_RETURN_MASK,
  Options.JSON_PROPERTY_RETURN_MASK_COMPOSITE,
  Options.JSON_PROPERTY_CROSS_ATTENTION_OPTIMIZATION,
  Options.JSON_PROPERTY_S_MIN_UNCOND,
  Options.JSON_PROPERTY_TOKEN_MERGING_RATIO,
  Options.JSON_PROPERTY_TOKEN_MERGING_RATIO_IMG2IMG,
  Options.JSON_PROPERTY_TOKEN_MERGING_RATIO_HR,
  Options.JSON_PROPERTY_PAD_COND_UNCOND,
  Options.JSON_PROPERTY_PERSISTENT_COND_CACHE,
  Options.JSON_PROPERTY_BATCH_COND_UNCOND,
  Options.JSON_PROPERTY_USE_OLD_EMPHASIS_IMPLEMENTATION,
  Options.JSON_PROPERTY_USE_OLD_KARRAS_SCHEDULER_SIGMAS,
  Options.JSON_PROPERTY_NO_DPMPP_SDE_BATCH_DETERMINISM,
  Options.JSON_PROPERTY_USE_OLD_HIRES_FIX_WIDTH_HEIGHT,
  Options.JSON_PROPERTY_DONT_FIX_SECOND_ORDER_SAMPLERS_SCHEDULE,
  Options.JSON_PROPERTY_HIRES_FIX_USE_FIRSTPASS_CONDS,
  Options.JSON_PROPERTY_USE_OLD_SCHEDULING,
  Options.JSON_PROPERTY_INTERROGATE_KEEP_MODELS_IN_MEMORY,
  Options.JSON_PROPERTY_INTERROGATE_RETURN_RANKS,
  Options.JSON_PROPERTY_INTERROGATE_CLIP_NUM_BEAMS,
  Options.JSON_PROPERTY_INTERROGATE_CLIP_MIN_LENGTH,
  Options.JSON_PROPERTY_INTERROGATE_CLIP_MAX_LENGTH,
  Options.JSON_PROPERTY_INTERROGATE_CLIP_DICT_LIMIT,
  Options.JSON_PROPERTY_INTERROGATE_CLIP_SKIP_CATEGORIES,
  Options.JSON_PROPERTY_INTERROGATE_DEEPBOORU_SCORE_THRESHOLD,
  Options.JSON_PROPERTY_DEEPBOORU_SORT_ALPHA,
  Options.JSON_PROPERTY_DEEPBOORU_USE_SPACES,
  Options.JSON_PROPERTY_DEEPBOORU_ESCAPE,
  Options.JSON_PROPERTY_DEEPBOORU_FILTER_TAGS,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_SHOW_HIDDEN_DIRECTORIES,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_HIDDEN_MODELS,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_DEFAULT_MULTIPLIER,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_CARD_WIDTH,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_CARD_HEIGHT,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_CARD_TEXT_SCALE,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_CARD_SHOW_DESC,
  Options.JSON_PROPERTY_EXTRA_NETWORKS_ADD_TEXT_SEPARATOR,
  Options.JSON_PROPERTY_UI_EXTRA_NETWORKS_TAB_REORDER,
  Options.JSON_PROPERTY_TEXTUAL_INVERSION_PRINT_AT_LOAD,
  Options.JSON_PROPERTY_TEXTUAL_INVERSION_ADD_HASHES_TO_INFOTEXT,
  Options.JSON_PROPERTY_SD_HYPERNETWORK,
  Options.JSON_PROPERTY_LOCALIZATION,
  Options.JSON_PROPERTY_GRADIO_THEME,
  Options.JSON_PROPERTY_GRADIO_THEMES_CACHE,
  Options.JSON_PROPERTY_GALLERY_HEIGHT,
  Options.JSON_PROPERTY_RETURN_GRID,
  Options.JSON_PROPERTY_DO_NOT_SHOW_IMAGES,
  Options.JSON_PROPERTY_SEND_SEED,
  Options.JSON_PROPERTY_SEND_SIZE,
  Options.JSON_PROPERTY_JS_MODAL_LIGHTBOX,
  Options.JSON_PROPERTY_JS_MODAL_LIGHTBOX_INITIALLY_ZOOMED,
  Options.JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD,
  Options.JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD_REPEAT,
  Options.JSON_PROPERTY_SHOW_PROGRESS_IN_TITLE,
  Options.JSON_PROPERTY_SAMPLERS_IN_DROPDOWN,
  Options.JSON_PROPERTY_DIMENSIONS_AND_BATCH_TOGETHER,
  Options.JSON_PROPERTY_KEYEDIT_PRECISION_ATTENTION,
  Options.JSON_PROPERTY_KEYEDIT_PRECISION_EXTRA,
  Options.JSON_PROPERTY_KEYEDIT_DELIMITERS,
  Options.JSON_PROPERTY_KEYEDIT_MOVE,
  Options.JSON_PROPERTY_QUICKSETTINGS_LIST,
  Options.JSON_PROPERTY_UI_TAB_ORDER,
  Options.JSON_PROPERTY_HIDDEN_TABS,
  Options.JSON_PROPERTY_UI_REORDER_LIST,
  Options.JSON_PROPERTY_HIRES_FIX_SHOW_SAMPLER,
  Options.JSON_PROPERTY_HIRES_FIX_SHOW_PROMPTS,
  Options.JSON_PROPERTY_DISABLE_TOKEN_COUNTERS,
  Options.JSON_PROPERTY_ADD_MODEL_HASH_TO_INFO,
  Options.JSON_PROPERTY_ADD_MODEL_NAME_TO_INFO,
  Options.JSON_PROPERTY_ADD_USER_NAME_TO_INFO,
  Options.JSON_PROPERTY_ADD_VERSION_TO_INFOTEXT,
  Options.JSON_PROPERTY_DISABLE_WEIGHTS_AUTO_SWAP,
  Options.JSON_PROPERTY_INFOTEXT_STYLES,
  Options.JSON_PROPERTY_SHOW_PROGRESSBAR,
  Options.JSON_PROPERTY_LIVE_PREVIEWS_ENABLE,
  Options.JSON_PROPERTY_LIVE_PREVIEWS_IMAGE_FORMAT,
  Options.JSON_PROPERTY_SHOW_PROGRESS_GRID,
  Options.JSON_PROPERTY_SHOW_PROGRESS_EVERY_N_STEPS,
  Options.JSON_PROPERTY_SHOW_PROGRESS_TYPE,
  Options.JSON_PROPERTY_LIVE_PREVIEW_ALLOW_LOWVRAM_FULL,
  Options.JSON_PROPERTY_LIVE_PREVIEW_CONTENT,
  Options.JSON_PROPERTY_LIVE_PREVIEW_REFRESH_PERIOD,
  Options.JSON_PROPERTY_LIVE_PREVIEW_FAST_INTERRUPT,
  Options.JSON_PROPERTY_HIDE_SAMPLERS,
  Options.JSON_PROPERTY_ETA_DDIM,
  Options.JSON_PROPERTY_ETA_ANCESTRAL,
  Options.JSON_PROPERTY_DDIM_DISCRETIZE,
  Options.JSON_PROPERTY_S_CHURN,
  Options.JSON_PROPERTY_S_TMIN,
  Options.JSON_PROPERTY_S_TMAX,
  Options.JSON_PROPERTY_S_NOISE,
  Options.JSON_PROPERTY_K_SCHED_TYPE,
  Options.JSON_PROPERTY_SIGMA_MIN,
  Options.JSON_PROPERTY_SIGMA_MAX,
  Options.JSON_PROPERTY_RHO,
  Options.JSON_PROPERTY_ETA_NOISE_SEED_DELTA,
  Options.JSON_PROPERTY_ALWAYS_DISCARD_NEXT_TO_LAST_SIGMA,
  Options.JSON_PROPERTY_SGM_NOISE_MULTIPLIER,
  Options.JSON_PROPERTY_UNI_PC_VARIANT,
  Options.JSON_PROPERTY_UNI_PC_SKIP_TYPE,
  Options.JSON_PROPERTY_UNI_PC_ORDER,
  Options.JSON_PROPERTY_UNI_PC_LOWER_ORDER_FINAL,
  Options.JSON_PROPERTY_POSTPROCESSING_ENABLE_IN_MAIN_UI,
  Options.JSON_PROPERTY_POSTPROCESSING_OPERATION_ORDER,
  Options.JSON_PROPERTY_UPSCALING_MAX_IMAGES_IN_CACHE,
  Options.JSON_PROPERTY_DISABLED_EXTENSIONS,
  Options.JSON_PROPERTY_DISABLE_ALL_EXTENSIONS,
  Options.JSON_PROPERTY_RESTORE_CONFIG_STATE_FILE,
  Options.JSON_PROPERTY_SD_CHECKPOINT_HASH,
  Options.JSON_PROPERTY_SD_LORA,
  Options.JSON_PROPERTY_LORA_PREFERRED_NAME,
  Options.JSON_PROPERTY_LORA_ADD_HASHES_TO_INFOTEXT,
  Options.JSON_PROPERTY_LORA_SHOW_ALL,
  Options.JSON_PROPERTY_LORA_HIDE_UNKNOWN_FOR_VERSIONS,
  Options.JSON_PROPERTY_LORA_IN_MEMORY_LIMIT,
  Options.JSON_PROPERTY_LORA_FUNCTIONAL,
  Options.JSON_PROPERTY_CANVAS_HOTKEY_ZOOM,
  Options.JSON_PROPERTY_CANVAS_HOTKEY_ADJUST,
  Options.JSON_PROPERTY_CANVAS_HOTKEY_MOVE,
  Options.JSON_PROPERTY_CANVAS_HOTKEY_FULLSCREEN,
  Options.JSON_PROPERTY_CANVAS_HOTKEY_RESET,
  Options.JSON_PROPERTY_CANVAS_HOTKEY_OVERLAP,
  Options.JSON_PROPERTY_CANVAS_SHOW_TOOLTIP,
  Options.JSON_PROPERTY_CANVAS_AUTO_EXPAND,
  Options.JSON_PROPERTY_CANVAS_BLUR_PROMPT,
  Options.JSON_PROPERTY_CANVAS_DISABLED_FUNCTIONS,
  Options.JSON_PROPERTY_EXTRA_OPTIONS_TXT2IMG,
  Options.JSON_PROPERTY_EXTRA_OPTIONS_IMG2IMG,
  Options.JSON_PROPERTY_EXTRA_OPTIONS_COLS,
  Options.JSON_PROPERTY_EXTRA_OPTIONS_ACCORDION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-27T01:31:55.639766089+03:00[Europe/Moscow]")
public class Options {
  public static final String JSON_PROPERTY_SAMPLES_SAVE = "samples_save";
  private Boolean samplesSave = true;

  public static final String JSON_PROPERTY_SAMPLES_FORMAT = "samples_format";
  private String samplesFormat = "png";

  public static final String JSON_PROPERTY_SAMPLES_FILENAME_PATTERN = "samples_filename_pattern";
  private JsonNullable<Object> samplesFilenamePattern = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_SAVE_IMAGES_ADD_NUMBER = "save_images_add_number";
  private Boolean saveImagesAddNumber = true;

  public static final String JSON_PROPERTY_GRID_SAVE = "grid_save";
  private Boolean gridSave = true;

  public static final String JSON_PROPERTY_GRID_FORMAT = "grid_format";
  private String gridFormat = "png";

  public static final String JSON_PROPERTY_GRID_EXTENDED_FILENAME = "grid_extended_filename";
  private JsonNullable<Object> gridExtendedFilename = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_GRID_ONLY_IF_MULTIPLE = "grid_only_if_multiple";
  private Boolean gridOnlyIfMultiple = true;

  public static final String JSON_PROPERTY_GRID_PREVENT_EMPTY_SPOTS = "grid_prevent_empty_spots";
  private JsonNullable<Object> gridPreventEmptySpots = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_GRID_ZIP_FILENAME_PATTERN = "grid_zip_filename_pattern";
  private JsonNullable<Object> gridZipFilenamePattern = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_N_ROWS = "n_rows";
  private BigDecimal nRows = new BigDecimal("-1");

  public static final String JSON_PROPERTY_FONT = "font";
  private JsonNullable<Object> font = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_GRID_TEXT_ACTIVE_COLOR = "grid_text_active_color";
  private String gridTextActiveColor = "#000000";

  public static final String JSON_PROPERTY_GRID_TEXT_INACTIVE_COLOR = "grid_text_inactive_color";
  private String gridTextInactiveColor = "#999999";

  public static final String JSON_PROPERTY_GRID_BACKGROUND_COLOR = "grid_background_color";
  private String gridBackgroundColor = "#ffffff";

  public static final String JSON_PROPERTY_ENABLE_PNGINFO = "enable_pnginfo";
  private Boolean enablePnginfo = true;

  public static final String JSON_PROPERTY_SAVE_TXT = "save_txt";
  private JsonNullable<Object> saveTxt = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_IMAGES_BEFORE_FACE_RESTORATION = "save_images_before_face_restoration";
  private JsonNullable<Object> saveImagesBeforeFaceRestoration = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_IMAGES_BEFORE_HIGHRES_FIX = "save_images_before_highres_fix";
  private JsonNullable<Object> saveImagesBeforeHighresFix = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_IMAGES_BEFORE_COLOR_CORRECTION = "save_images_before_color_correction";
  private JsonNullable<Object> saveImagesBeforeColorCorrection = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_MASK = "save_mask";
  private JsonNullable<Object> saveMask = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_MASK_COMPOSITE = "save_mask_composite";
  private JsonNullable<Object> saveMaskComposite = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_JPEG_QUALITY = "jpeg_quality";
  private BigDecimal jpegQuality = new BigDecimal("80");

  public static final String JSON_PROPERTY_WEBP_LOSSLESS = "webp_lossless";
  private JsonNullable<Object> webpLossless = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_EXPORT_FOR4CHAN = "export_for_4chan";
  private Boolean exportFor4chan = true;

  public static final String JSON_PROPERTY_IMG_DOWNSCALE_THRESHOLD = "img_downscale_threshold";
  private BigDecimal imgDownscaleThreshold = new BigDecimal("4.0");

  public static final String JSON_PROPERTY_TARGET_SIDE_LENGTH = "target_side_length";
  private BigDecimal targetSideLength = new BigDecimal("4000");

  public static final String JSON_PROPERTY_IMG_MAX_SIZE_MP = "img_max_size_mp";
  private BigDecimal imgMaxSizeMp = new BigDecimal("200");

  public static final String JSON_PROPERTY_USE_ORIGINAL_NAME_BATCH = "use_original_name_batch";
  private Boolean useOriginalNameBatch = true;

  public static final String JSON_PROPERTY_USE_UPSCALER_NAME_AS_SUFFIX = "use_upscaler_name_as_suffix";
  private JsonNullable<Object> useUpscalerNameAsSuffix = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_SELECTED_ONLY = "save_selected_only";
  private Boolean saveSelectedOnly = true;

  public static final String JSON_PROPERTY_SAVE_INIT_IMG = "save_init_img";
  private JsonNullable<Object> saveInitImg = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_TEMP_DIR = "temp_dir";
  private JsonNullable<Object> tempDir = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_CLEAN_TEMP_DIR_AT_START = "clean_temp_dir_at_start";
  private JsonNullable<Object> cleanTempDirAtStart = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_INCOMPLETE_IMAGES = "save_incomplete_images";
  private JsonNullable<Object> saveIncompleteImages = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_OUTDIR_SAMPLES = "outdir_samples";
  private JsonNullable<Object> outdirSamples = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_OUTDIR_TXT2IMG_SAMPLES = "outdir_txt2img_samples";
  private String outdirTxt2imgSamples = "outputs/txt2img-images";

  public static final String JSON_PROPERTY_OUTDIR_IMG2IMG_SAMPLES = "outdir_img2img_samples";
  private String outdirImg2imgSamples = "outputs/img2img-images";

  public static final String JSON_PROPERTY_OUTDIR_EXTRAS_SAMPLES = "outdir_extras_samples";
  private String outdirExtrasSamples = "outputs/extras-images";

  public static final String JSON_PROPERTY_OUTDIR_GRIDS = "outdir_grids";
  private JsonNullable<Object> outdirGrids = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_OUTDIR_TXT2IMG_GRIDS = "outdir_txt2img_grids";
  private String outdirTxt2imgGrids = "outputs/txt2img-grids";

  public static final String JSON_PROPERTY_OUTDIR_IMG2IMG_GRIDS = "outdir_img2img_grids";
  private String outdirImg2imgGrids = "outputs/img2img-grids";

  public static final String JSON_PROPERTY_OUTDIR_SAVE = "outdir_save";
  private String outdirSave = "log/images";

  public static final String JSON_PROPERTY_OUTDIR_INIT_IMAGES = "outdir_init_images";
  private String outdirInitImages = "outputs/init-images";

  public static final String JSON_PROPERTY_SAVE_TO_DIRS = "save_to_dirs";
  private Boolean saveToDirs = true;

  public static final String JSON_PROPERTY_GRID_SAVE_TO_DIRS = "grid_save_to_dirs";
  private Boolean gridSaveToDirs = true;

  public static final String JSON_PROPERTY_USE_SAVE_TO_DIRS_FOR_UI = "use_save_to_dirs_for_ui";
  private JsonNullable<Object> useSaveToDirsForUi = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_DIRECTORIES_FILENAME_PATTERN = "directories_filename_pattern";
  private String directoriesFilenamePattern = "[date]";

  public static final String JSON_PROPERTY_DIRECTORIES_MAX_PROMPT_WORDS = "directories_max_prompt_words";
  private BigDecimal directoriesMaxPromptWords = new BigDecimal("8");

  public static final String JSON_PROPERTY_ES_R_G_A_N_TILE = "ESRGAN_tile";
  private BigDecimal esRGANTile = new BigDecimal("192");

  public static final String JSON_PROPERTY_ES_R_G_A_N_TILE_OVERLAP = "ESRGAN_tile_overlap";
  private BigDecimal esRGANTileOverlap = new BigDecimal("8");

  public static final String JSON_PROPERTY_REALESRGAN_ENABLED_MODELS = "realesrgan_enabled_models";
  private List<Object> realesrganEnabledModels = new ArrayList<>(Arrays.asList(R-ESRGAN 4x+, R-ESRGAN 4x+ Anime6B));

  public static final String JSON_PROPERTY_UPSCALER_FOR_IMG2IMG = "upscaler_for_img2img";
  private JsonNullable<Object> upscalerForImg2img = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FACE_RESTORATION = "face_restoration";
  private JsonNullable<Object> faceRestoration = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_FACE_RESTORATION_MODEL = "face_restoration_model";
  private String faceRestorationModel = "CodeFormer";

  public static final String JSON_PROPERTY_CODE_FORMER_WEIGHT = "code_former_weight";
  private BigDecimal codeFormerWeight = new BigDecimal("0.5");

  public static final String JSON_PROPERTY_FACE_RESTORATION_UNLOAD = "face_restoration_unload";
  private JsonNullable<Object> faceRestorationUnload = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_AUTO_LAUNCH_BROWSER = "auto_launch_browser";
  private String autoLaunchBrowser = "Local";

  public static final String JSON_PROPERTY_SHOW_WARNINGS = "show_warnings";
  private JsonNullable<Object> showWarnings = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SHOW_GRADIO_DEPRECATION_WARNINGS = "show_gradio_deprecation_warnings";
  private Boolean showGradioDeprecationWarnings = true;

  public static final String JSON_PROPERTY_MEMMON_POLL_RATE = "memmon_poll_rate";
  private BigDecimal memmonPollRate = new BigDecimal("8");

  public static final String JSON_PROPERTY_SAMPLES_LOG_STDOUT = "samples_log_stdout";
  private JsonNullable<Object> samplesLogStdout = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_MULTIPLE_TQDM = "multiple_tqdm";
  private Boolean multipleTqdm = true;

  public static final String JSON_PROPERTY_PRINT_HYPERNET_EXTRA = "print_hypernet_extra";
  private JsonNullable<Object> printHypernetExtra = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_LIST_HIDDEN_FILES = "list_hidden_files";
  private Boolean listHiddenFiles = true;

  public static final String JSON_PROPERTY_DISABLE_MMAP_LOAD_SAFETENSORS = "disable_mmap_load_safetensors";
  private JsonNullable<Object> disableMmapLoadSafetensors = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_HIDE_LDM_PRINTS = "hide_ldm_prints";
  private Boolean hideLdmPrints = true;

  public static final String JSON_PROPERTY_API_ENABLE_REQUESTS = "api_enable_requests";
  private Boolean apiEnableRequests = true;

  public static final String JSON_PROPERTY_API_FORBID_LOCAL_REQUESTS = "api_forbid_local_requests";
  private Boolean apiForbidLocalRequests = true;

  public static final String JSON_PROPERTY_API_USERAGENT = "api_useragent";
  private JsonNullable<Object> apiUseragent = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_UNLOAD_MODELS_WHEN_TRAINING = "unload_models_when_training";
  private JsonNullable<Object> unloadModelsWhenTraining = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_PIN_MEMORY = "pin_memory";
  private JsonNullable<Object> pinMemory = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_OPTIMIZER_STATE = "save_optimizer_state";
  private JsonNullable<Object> saveOptimizerState = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SAVE_TRAINING_SETTINGS_TO_TXT = "save_training_settings_to_txt";
  private Boolean saveTrainingSettingsToTxt = true;

  public static final String JSON_PROPERTY_DATASET_FILENAME_WORD_REGEX = "dataset_filename_word_regex";
  private JsonNullable<Object> datasetFilenameWordRegex = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_DATASET_FILENAME_JOIN_STRING = "dataset_filename_join_string";
  private String datasetFilenameJoinString = " ";

  public static final String JSON_PROPERTY_TRAINING_IMAGE_REPEATS_PER_EPOCH = "training_image_repeats_per_epoch";
  private BigDecimal trainingImageRepeatsPerEpoch = new BigDecimal("1");

  public static final String JSON_PROPERTY_TRAINING_WRITE_CSV_EVERY = "training_write_csv_every";
  private BigDecimal trainingWriteCsvEvery = new BigDecimal("500");

  public static final String JSON_PROPERTY_TRAINING_XATTENTION_OPTIMIZATIONS = "training_xattention_optimizations";
  private JsonNullable<Object> trainingXattentionOptimizations = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_TRAINING_ENABLE_TENSORBOARD = "training_enable_tensorboard";
  private JsonNullable<Object> trainingEnableTensorboard = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_TRAINING_TENSORBOARD_SAVE_IMAGES = "training_tensorboard_save_images";
  private JsonNullable<Object> trainingTensorboardSaveImages = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_TRAINING_TENSORBOARD_FLUSH_EVERY = "training_tensorboard_flush_every";
  private BigDecimal trainingTensorboardFlushEvery = new BigDecimal("120");

  public static final String JSON_PROPERTY_SD_MODEL_CHECKPOINT = "sd_model_checkpoint";
  private JsonNullable<Object> sdModelCheckpoint = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_SD_CHECKPOINTS_LIMIT = "sd_checkpoints_limit";
  private BigDecimal sdCheckpointsLimit = new BigDecimal("1");

  public static final String JSON_PROPERTY_SD_CHECKPOINTS_KEEP_IN_CPU = "sd_checkpoints_keep_in_cpu";
  private Boolean sdCheckpointsKeepInCpu = true;

  public static final String JSON_PROPERTY_SD_CHECKPOINT_CACHE = "sd_checkpoint_cache";
  private JsonNullable<Object> sdCheckpointCache = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_SD_UNET = "sd_unet";
  private String sdUnet = "Automatic";

  public static final String JSON_PROPERTY_ENABLE_QUANTIZATION = "enable_quantization";
  private JsonNullable<Object> enableQuantization = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_ENABLE_EMPHASIS = "enable_emphasis";
  private Boolean enableEmphasis = true;

  public static final String JSON_PROPERTY_ENABLE_BATCH_SEEDS = "enable_batch_seeds";
  private Boolean enableBatchSeeds = true;

  public static final String JSON_PROPERTY_COMMA_PADDING_BACKTRACK = "comma_padding_backtrack";
  private BigDecimal commaPaddingBacktrack = new BigDecimal("20");

  public static final String JSON_PROPERTY_CL_I_P_STOP_AT_LAST_LAYERS = "CLIP_stop_at_last_layers";
  private BigDecimal clIPStopAtLastLayers = new BigDecimal("1");

  public static final String JSON_PROPERTY_UPCAST_ATTN = "upcast_attn";
  private JsonNullable<Object> upcastAttn = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_RANDN_SOURCE = "randn_source";
  private String randnSource = "GPU";

  public static final String JSON_PROPERTY_TILING = "tiling";
  private JsonNullable<Object> tiling = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_HIRES_FIX_REFINER_PASS = "hires_fix_refiner_pass";
  private String hiresFixRefinerPass = "second pass";

  public static final String JSON_PROPERTY_SDXL_CROP_TOP = "sdxl_crop_top";
  private JsonNullable<Object> sdxlCropTop = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_SDXL_CROP_LEFT = "sdxl_crop_left";
  private JsonNullable<Object> sdxlCropLeft = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_SDXL_REFINER_LOW_AESTHETIC_SCORE = "sdxl_refiner_low_aesthetic_score";
  private BigDecimal sdxlRefinerLowAestheticScore = new BigDecimal("2.5");

  public static final String JSON_PROPERTY_SDXL_REFINER_HIGH_AESTHETIC_SCORE = "sdxl_refiner_high_aesthetic_score";
  private BigDecimal sdxlRefinerHighAestheticScore = new BigDecimal("6.0");

  public static final String JSON_PROPERTY_SD_VAE_EXPLANATION = "sd_vae_explanation";
  private String sdVaeExplanation = "<abbr title='Variational autoencoder'>VAE</abbr> is a neural network that transforms a standard <abbr title='red/green/blue'>RGB</abbr> image into latent space representation and back. Latent space representation is what stable diffusion is working on during sampling (i.e. when the progress bar is between empty and full). For txt2img, VAE is used to create a resulting image after the sampling is finished. For img2img, VAE is used to process user's input image before the sampling, and to create an image after sampling.";

  public static final String JSON_PROPERTY_SD_VAE_CHECKPOINT_CACHE = "sd_vae_checkpoint_cache";
  private JsonNullable<Object> sdVaeCheckpointCache = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_SD_VAE = "sd_vae";
  private String sdVae = "Automatic";

  public static final String JSON_PROPERTY_SD_VAE_OVERRIDES_PER_MODEL_PREFERENCES = "sd_vae_overrides_per_model_preferences";
  private Boolean sdVaeOverridesPerModelPreferences = true;

  public static final String JSON_PROPERTY_AUTO_VAE_PRECISION = "auto_vae_precision";
  private Boolean autoVaePrecision = true;

  public static final String JSON_PROPERTY_SD_VAE_ENCODE_METHOD = "sd_vae_encode_method";
  private String sdVaeEncodeMethod = "Full";

  public static final String JSON_PROPERTY_SD_VAE_DECODE_METHOD = "sd_vae_decode_method";
  private String sdVaeDecodeMethod = "Full";

  public static final String JSON_PROPERTY_INPAINTING_MASK_WEIGHT = "inpainting_mask_weight";
  private BigDecimal inpaintingMaskWeight = new BigDecimal("1.0");

  public static final String JSON_PROPERTY_INITIAL_NOISE_MULTIPLIER = "initial_noise_multiplier";
  private BigDecimal initialNoiseMultiplier = new BigDecimal("1.0");

  public static final String JSON_PROPERTY_IMG2IMG_EXTRA_NOISE = "img2img_extra_noise";
  private JsonNullable<Object> img2imgExtraNoise = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_IMG2IMG_COLOR_CORRECTION = "img2img_color_correction";
  private JsonNullable<Object> img2imgColorCorrection = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_IMG2IMG_FIX_STEPS = "img2img_fix_steps";
  private JsonNullable<Object> img2imgFixSteps = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_IMG2IMG_BACKGROUND_COLOR = "img2img_background_color";
  private String img2imgBackgroundColor = "#ffffff";

  public static final String JSON_PROPERTY_IMG2IMG_EDITOR_HEIGHT = "img2img_editor_height";
  private BigDecimal img2imgEditorHeight = new BigDecimal("720");

  public static final String JSON_PROPERTY_IMG2IMG_SKETCH_DEFAULT_BRUSH_COLOR = "img2img_sketch_default_brush_color";
  private String img2imgSketchDefaultBrushColor = "#ffffff";

  public static final String JSON_PROPERTY_IMG2IMG_INPAINT_MASK_BRUSH_COLOR = "img2img_inpaint_mask_brush_color";
  private String img2imgInpaintMaskBrushColor = "#ffffff";

  public static final String JSON_PROPERTY_IMG2IMG_INPAINT_SKETCH_DEFAULT_BRUSH_COLOR = "img2img_inpaint_sketch_default_brush_color";
  private String img2imgInpaintSketchDefaultBrushColor = "#ffffff";

  public static final String JSON_PROPERTY_RETURN_MASK = "return_mask";
  private JsonNullable<Object> returnMask = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_RETURN_MASK_COMPOSITE = "return_mask_composite";
  private JsonNullable<Object> returnMaskComposite = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_CROSS_ATTENTION_OPTIMIZATION = "cross_attention_optimization";
  private String crossAttentionOptimization = "Automatic";

  public static final String JSON_PROPERTY_S_MIN_UNCOND = "s_min_uncond";
  private JsonNullable<Object> sMinUncond = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_TOKEN_MERGING_RATIO = "token_merging_ratio";
  private JsonNullable<Object> tokenMergingRatio = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_TOKEN_MERGING_RATIO_IMG2IMG = "token_merging_ratio_img2img";
  private JsonNullable<Object> tokenMergingRatioImg2img = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_TOKEN_MERGING_RATIO_HR = "token_merging_ratio_hr";
  private JsonNullable<Object> tokenMergingRatioHr = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_PAD_COND_UNCOND = "pad_cond_uncond";
  private JsonNullable<Object> padCondUncond = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_PERSISTENT_COND_CACHE = "persistent_cond_cache";
  private Boolean persistentCondCache = true;

  public static final String JSON_PROPERTY_BATCH_COND_UNCOND = "batch_cond_uncond";
  private Boolean batchCondUncond = true;

  public static final String JSON_PROPERTY_USE_OLD_EMPHASIS_IMPLEMENTATION = "use_old_emphasis_implementation";
  private JsonNullable<Object> useOldEmphasisImplementation = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_USE_OLD_KARRAS_SCHEDULER_SIGMAS = "use_old_karras_scheduler_sigmas";
  private JsonNullable<Object> useOldKarrasSchedulerSigmas = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_NO_DPMPP_SDE_BATCH_DETERMINISM = "no_dpmpp_sde_batch_determinism";
  private JsonNullable<Object> noDpmppSdeBatchDeterminism = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_USE_OLD_HIRES_FIX_WIDTH_HEIGHT = "use_old_hires_fix_width_height";
  private JsonNullable<Object> useOldHiresFixWidthHeight = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_DONT_FIX_SECOND_ORDER_SAMPLERS_SCHEDULE = "dont_fix_second_order_samplers_schedule";
  private JsonNullable<Object> dontFixSecondOrderSamplersSchedule = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_HIRES_FIX_USE_FIRSTPASS_CONDS = "hires_fix_use_firstpass_conds";
  private JsonNullable<Object> hiresFixUseFirstpassConds = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_USE_OLD_SCHEDULING = "use_old_scheduling";
  private JsonNullable<Object> useOldScheduling = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_INTERROGATE_KEEP_MODELS_IN_MEMORY = "interrogate_keep_models_in_memory";
  private JsonNullable<Object> interrogateKeepModelsInMemory = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_INTERROGATE_RETURN_RANKS = "interrogate_return_ranks";
  private JsonNullable<Object> interrogateReturnRanks = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_INTERROGATE_CLIP_NUM_BEAMS = "interrogate_clip_num_beams";
  private BigDecimal interrogateClipNumBeams = new BigDecimal("1");

  public static final String JSON_PROPERTY_INTERROGATE_CLIP_MIN_LENGTH = "interrogate_clip_min_length";
  private BigDecimal interrogateClipMinLength = new BigDecimal("24");

  public static final String JSON_PROPERTY_INTERROGATE_CLIP_MAX_LENGTH = "interrogate_clip_max_length";
  private BigDecimal interrogateClipMaxLength = new BigDecimal("48");

  public static final String JSON_PROPERTY_INTERROGATE_CLIP_DICT_LIMIT = "interrogate_clip_dict_limit";
  private BigDecimal interrogateClipDictLimit = new BigDecimal("1500");

  public static final String JSON_PROPERTY_INTERROGATE_CLIP_SKIP_CATEGORIES = "interrogate_clip_skip_categories";
  private JsonNullable<Object> interrogateClipSkipCategories = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_INTERROGATE_DEEPBOORU_SCORE_THRESHOLD = "interrogate_deepbooru_score_threshold";
  private BigDecimal interrogateDeepbooruScoreThreshold = new BigDecimal("0.5");

  public static final String JSON_PROPERTY_DEEPBOORU_SORT_ALPHA = "deepbooru_sort_alpha";
  private Boolean deepbooruSortAlpha = true;

  public static final String JSON_PROPERTY_DEEPBOORU_USE_SPACES = "deepbooru_use_spaces";
  private Boolean deepbooruUseSpaces = true;

  public static final String JSON_PROPERTY_DEEPBOORU_ESCAPE = "deepbooru_escape";
  private Boolean deepbooruEscape = true;

  public static final String JSON_PROPERTY_DEEPBOORU_FILTER_TAGS = "deepbooru_filter_tags";
  private JsonNullable<Object> deepbooruFilterTags = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_SHOW_HIDDEN_DIRECTORIES = "extra_networks_show_hidden_directories";
  private Boolean extraNetworksShowHiddenDirectories = true;

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_HIDDEN_MODELS = "extra_networks_hidden_models";
  private String extraNetworksHiddenModels = "When searched";

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_DEFAULT_MULTIPLIER = "extra_networks_default_multiplier";
  private BigDecimal extraNetworksDefaultMultiplier = new BigDecimal("1.0");

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_CARD_WIDTH = "extra_networks_card_width";
  private JsonNullable<Object> extraNetworksCardWidth = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_CARD_HEIGHT = "extra_networks_card_height";
  private JsonNullable<Object> extraNetworksCardHeight = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_CARD_TEXT_SCALE = "extra_networks_card_text_scale";
  private BigDecimal extraNetworksCardTextScale = new BigDecimal("1.0");

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_CARD_SHOW_DESC = "extra_networks_card_show_desc";
  private Boolean extraNetworksCardShowDesc = true;

  public static final String JSON_PROPERTY_EXTRA_NETWORKS_ADD_TEXT_SEPARATOR = "extra_networks_add_text_separator";
  private String extraNetworksAddTextSeparator = " ";

  public static final String JSON_PROPERTY_UI_EXTRA_NETWORKS_TAB_REORDER = "ui_extra_networks_tab_reorder";
  private JsonNullable<Object> uiExtraNetworksTabReorder = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_TEXTUAL_INVERSION_PRINT_AT_LOAD = "textual_inversion_print_at_load";
  private JsonNullable<Object> textualInversionPrintAtLoad = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_TEXTUAL_INVERSION_ADD_HASHES_TO_INFOTEXT = "textual_inversion_add_hashes_to_infotext";
  private Boolean textualInversionAddHashesToInfotext = true;

  public static final String JSON_PROPERTY_SD_HYPERNETWORK = "sd_hypernetwork";
  private String sdHypernetwork = "None";

  public static final String JSON_PROPERTY_LOCALIZATION = "localization";
  private String localization = "None";

  public static final String JSON_PROPERTY_GRADIO_THEME = "gradio_theme";
  private String gradioTheme = "Default";

  public static final String JSON_PROPERTY_GRADIO_THEMES_CACHE = "gradio_themes_cache";
  private Boolean gradioThemesCache = true;

  public static final String JSON_PROPERTY_GALLERY_HEIGHT = "gallery_height";
  private JsonNullable<Object> galleryHeight = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_RETURN_GRID = "return_grid";
  private Boolean returnGrid = true;

  public static final String JSON_PROPERTY_DO_NOT_SHOW_IMAGES = "do_not_show_images";
  private JsonNullable<Object> doNotShowImages = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SEND_SEED = "send_seed";
  private Boolean sendSeed = true;

  public static final String JSON_PROPERTY_SEND_SIZE = "send_size";
  private Boolean sendSize = true;

  public static final String JSON_PROPERTY_JS_MODAL_LIGHTBOX = "js_modal_lightbox";
  private Boolean jsModalLightbox = true;

  public static final String JSON_PROPERTY_JS_MODAL_LIGHTBOX_INITIALLY_ZOOMED = "js_modal_lightbox_initially_zoomed";
  private Boolean jsModalLightboxInitiallyZoomed = true;

  public static final String JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD = "js_modal_lightbox_gamepad";
  private JsonNullable<Object> jsModalLightboxGamepad = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD_REPEAT = "js_modal_lightbox_gamepad_repeat";
  private BigDecimal jsModalLightboxGamepadRepeat = new BigDecimal("250");

  public static final String JSON_PROPERTY_SHOW_PROGRESS_IN_TITLE = "show_progress_in_title";
  private Boolean showProgressInTitle = true;

  public static final String JSON_PROPERTY_SAMPLERS_IN_DROPDOWN = "samplers_in_dropdown";
  private Boolean samplersInDropdown = true;

  public static final String JSON_PROPERTY_DIMENSIONS_AND_BATCH_TOGETHER = "dimensions_and_batch_together";
  private Boolean dimensionsAndBatchTogether = true;

  public static final String JSON_PROPERTY_KEYEDIT_PRECISION_ATTENTION = "keyedit_precision_attention";
  private BigDecimal keyeditPrecisionAttention = new BigDecimal("0.1");

  public static final String JSON_PROPERTY_KEYEDIT_PRECISION_EXTRA = "keyedit_precision_extra";
  private BigDecimal keyeditPrecisionExtra = new BigDecimal("0.05");

  public static final String JSON_PROPERTY_KEYEDIT_DELIMITERS = "keyedit_delimiters";
  private String keyeditDelimiters = ".,/!?%^*;:{}=`~()";

  public static final String JSON_PROPERTY_KEYEDIT_MOVE = "keyedit_move";
  private Boolean keyeditMove = true;

  public static final String JSON_PROPERTY_QUICKSETTINGS_LIST = "quicksettings_list";
  private List<Object> quicksettingsList = new ArrayList<>(Arrays.asList(sd_model_checkpoint));

  public static final String JSON_PROPERTY_UI_TAB_ORDER = "ui_tab_order";
  private JsonNullable<Object> uiTabOrder = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_HIDDEN_TABS = "hidden_tabs";
  private JsonNullable<Object> hiddenTabs = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_UI_REORDER_LIST = "ui_reorder_list";
  private JsonNullable<Object> uiReorderList = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_HIRES_FIX_SHOW_SAMPLER = "hires_fix_show_sampler";
  private JsonNullable<Object> hiresFixShowSampler = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_HIRES_FIX_SHOW_PROMPTS = "hires_fix_show_prompts";
  private JsonNullable<Object> hiresFixShowPrompts = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_DISABLE_TOKEN_COUNTERS = "disable_token_counters";
  private JsonNullable<Object> disableTokenCounters = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_ADD_MODEL_HASH_TO_INFO = "add_model_hash_to_info";
  private Boolean addModelHashToInfo = true;

  public static final String JSON_PROPERTY_ADD_MODEL_NAME_TO_INFO = "add_model_name_to_info";
  private Boolean addModelNameToInfo = true;

  public static final String JSON_PROPERTY_ADD_USER_NAME_TO_INFO = "add_user_name_to_info";
  private JsonNullable<Object> addUserNameToInfo = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_ADD_VERSION_TO_INFOTEXT = "add_version_to_infotext";
  private Boolean addVersionToInfotext = true;

  public static final String JSON_PROPERTY_DISABLE_WEIGHTS_AUTO_SWAP = "disable_weights_auto_swap";
  private Boolean disableWeightsAutoSwap = true;

  public static final String JSON_PROPERTY_INFOTEXT_STYLES = "infotext_styles";
  private String infotextStyles = "Apply if any";

  public static final String JSON_PROPERTY_SHOW_PROGRESSBAR = "show_progressbar";
  private Boolean showProgressbar = true;

  public static final String JSON_PROPERTY_LIVE_PREVIEWS_ENABLE = "live_previews_enable";
  private Boolean livePreviewsEnable = true;

  public static final String JSON_PROPERTY_LIVE_PREVIEWS_IMAGE_FORMAT = "live_previews_image_format";
  private String livePreviewsImageFormat = "png";

  public static final String JSON_PROPERTY_SHOW_PROGRESS_GRID = "show_progress_grid";
  private Boolean showProgressGrid = true;

  public static final String JSON_PROPERTY_SHOW_PROGRESS_EVERY_N_STEPS = "show_progress_every_n_steps";
  private BigDecimal showProgressEveryNSteps = new BigDecimal("10");

  public static final String JSON_PROPERTY_SHOW_PROGRESS_TYPE = "show_progress_type";
  private String showProgressType = "Approx NN";

  public static final String JSON_PROPERTY_LIVE_PREVIEW_ALLOW_LOWVRAM_FULL = "live_preview_allow_lowvram_full";
  private JsonNullable<Object> livePreviewAllowLowvramFull = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_LIVE_PREVIEW_CONTENT = "live_preview_content";
  private String livePreviewContent = "Prompt";

  public static final String JSON_PROPERTY_LIVE_PREVIEW_REFRESH_PERIOD = "live_preview_refresh_period";
  private BigDecimal livePreviewRefreshPeriod = new BigDecimal("1000");

  public static final String JSON_PROPERTY_LIVE_PREVIEW_FAST_INTERRUPT = "live_preview_fast_interrupt";
  private JsonNullable<Object> livePreviewFastInterrupt = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_HIDE_SAMPLERS = "hide_samplers";
  private JsonNullable<Object> hideSamplers = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_ETA_DDIM = "eta_ddim";
  private JsonNullable<Object> etaDdim = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_ETA_ANCESTRAL = "eta_ancestral";
  private BigDecimal etaAncestral = new BigDecimal("1.0");

  public static final String JSON_PROPERTY_DDIM_DISCRETIZE = "ddim_discretize";
  private String ddimDiscretize = "uniform";

  public static final String JSON_PROPERTY_S_CHURN = "s_churn";
  private JsonNullable<Object> sChurn = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_S_TMIN = "s_tmin";
  private JsonNullable<Object> sTmin = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_S_TMAX = "s_tmax";
  private JsonNullable<Object> sTmax = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_S_NOISE = "s_noise";
  private BigDecimal sNoise = new BigDecimal("1.0");

  public static final String JSON_PROPERTY_K_SCHED_TYPE = "k_sched_type";
  private String kSchedType = "Automatic";

  public static final String JSON_PROPERTY_SIGMA_MIN = "sigma_min";
  private JsonNullable<Object> sigmaMin = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_SIGMA_MAX = "sigma_max";
  private JsonNullable<Object> sigmaMax = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_RHO = "rho";
  private JsonNullable<Object> rho = JsonNullable.<Object>of(0.0);

  public static final String JSON_PROPERTY_ETA_NOISE_SEED_DELTA = "eta_noise_seed_delta";
  private JsonNullable<Object> etaNoiseSeedDelta = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_ALWAYS_DISCARD_NEXT_TO_LAST_SIGMA = "always_discard_next_to_last_sigma";
  private JsonNullable<Object> alwaysDiscardNextToLastSigma = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_SGM_NOISE_MULTIPLIER = "sgm_noise_multiplier";
  private JsonNullable<Object> sgmNoiseMultiplier = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_UNI_PC_VARIANT = "uni_pc_variant";
  private String uniPcVariant = "bh1";

  public static final String JSON_PROPERTY_UNI_PC_SKIP_TYPE = "uni_pc_skip_type";
  private String uniPcSkipType = "time_uniform";

  public static final String JSON_PROPERTY_UNI_PC_ORDER = "uni_pc_order";
  private BigDecimal uniPcOrder = new BigDecimal("3");

  public static final String JSON_PROPERTY_UNI_PC_LOWER_ORDER_FINAL = "uni_pc_lower_order_final";
  private Boolean uniPcLowerOrderFinal = true;

  public static final String JSON_PROPERTY_POSTPROCESSING_ENABLE_IN_MAIN_UI = "postprocessing_enable_in_main_ui";
  private JsonNullable<Object> postprocessingEnableInMainUi = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_POSTPROCESSING_OPERATION_ORDER = "postprocessing_operation_order";
  private JsonNullable<Object> postprocessingOperationOrder = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_UPSCALING_MAX_IMAGES_IN_CACHE = "upscaling_max_images_in_cache";
  private BigDecimal upscalingMaxImagesInCache = new BigDecimal("5");

  public static final String JSON_PROPERTY_DISABLED_EXTENSIONS = "disabled_extensions";
  private JsonNullable<Object> disabledExtensions = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_DISABLE_ALL_EXTENSIONS = "disable_all_extensions";
  private String disableAllExtensions = "none";

  public static final String JSON_PROPERTY_RESTORE_CONFIG_STATE_FILE = "restore_config_state_file";
  private JsonNullable<Object> restoreConfigStateFile = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_SD_CHECKPOINT_HASH = "sd_checkpoint_hash";
  private JsonNullable<Object> sdCheckpointHash = JsonNullable.<Object>of();

  public static final String JSON_PROPERTY_SD_LORA = "sd_lora";
  private String sdLora = "None";

  public static final String JSON_PROPERTY_LORA_PREFERRED_NAME = "lora_preferred_name";
  private String loraPreferredName = "Alias from file";

  public static final String JSON_PROPERTY_LORA_ADD_HASHES_TO_INFOTEXT = "lora_add_hashes_to_infotext";
  private Boolean loraAddHashesToInfotext = true;

  public static final String JSON_PROPERTY_LORA_SHOW_ALL = "lora_show_all";
  private JsonNullable<Object> loraShowAll = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_LORA_HIDE_UNKNOWN_FOR_VERSIONS = "lora_hide_unknown_for_versions";
  private JsonNullable<Object> loraHideUnknownForVersions = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_LORA_IN_MEMORY_LIMIT = "lora_in_memory_limit";
  private JsonNullable<Object> loraInMemoryLimit = JsonNullable.<Object>of(0);

  public static final String JSON_PROPERTY_LORA_FUNCTIONAL = "lora_functional";
  private JsonNullable<Object> loraFunctional = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_CANVAS_HOTKEY_ZOOM = "canvas_hotkey_zoom";
  private String canvasHotkeyZoom = "Alt";

  public static final String JSON_PROPERTY_CANVAS_HOTKEY_ADJUST = "canvas_hotkey_adjust";
  private String canvasHotkeyAdjust = "Ctrl";

  public static final String JSON_PROPERTY_CANVAS_HOTKEY_MOVE = "canvas_hotkey_move";
  private String canvasHotkeyMove = "F";

  public static final String JSON_PROPERTY_CANVAS_HOTKEY_FULLSCREEN = "canvas_hotkey_fullscreen";
  private String canvasHotkeyFullscreen = "S";

  public static final String JSON_PROPERTY_CANVAS_HOTKEY_RESET = "canvas_hotkey_reset";
  private String canvasHotkeyReset = "R";

  public static final String JSON_PROPERTY_CANVAS_HOTKEY_OVERLAP = "canvas_hotkey_overlap";
  private String canvasHotkeyOverlap = "O";

  public static final String JSON_PROPERTY_CANVAS_SHOW_TOOLTIP = "canvas_show_tooltip";
  private Boolean canvasShowTooltip = true;

  public static final String JSON_PROPERTY_CANVAS_AUTO_EXPAND = "canvas_auto_expand";
  private Boolean canvasAutoExpand = true;

  public static final String JSON_PROPERTY_CANVAS_BLUR_PROMPT = "canvas_blur_prompt";
  private JsonNullable<Object> canvasBlurPrompt = JsonNullable.<Object>of(false);

  public static final String JSON_PROPERTY_CANVAS_DISABLED_FUNCTIONS = "canvas_disabled_functions";
  private List<Object> canvasDisabledFunctions = new ArrayList<>(Arrays.asList(Overlap));

  public static final String JSON_PROPERTY_EXTRA_OPTIONS_TXT2IMG = "extra_options_txt2img";
  private JsonNullable<Object> extraOptionsTxt2img = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_EXTRA_OPTIONS_IMG2IMG = "extra_options_img2img";
  private JsonNullable<Object> extraOptionsImg2img = JsonNullable.<Object>of([]);

  public static final String JSON_PROPERTY_EXTRA_OPTIONS_COLS = "extra_options_cols";
  private BigDecimal extraOptionsCols = new BigDecimal("1");

  public static final String JSON_PROPERTY_EXTRA_OPTIONS_ACCORDION = "extra_options_accordion";
  private JsonNullable<Object> extraOptionsAccordion = JsonNullable.<Object>of(false);

  public Options() {
  }

  public Options samplesSave(Boolean samplesSave) {
    
    this.samplesSave = samplesSave;
    return this;
  }

   /**
   * Always save all generated images
   * @return samplesSave
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAMPLES_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSamplesSave() {
    return samplesSave;
  }


  @JsonProperty(JSON_PROPERTY_SAMPLES_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSamplesSave(Boolean samplesSave) {
    this.samplesSave = samplesSave;
  }


  public Options samplesFormat(String samplesFormat) {
    
    this.samplesFormat = samplesFormat;
    return this;
  }

   /**
   * File format for images
   * @return samplesFormat
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAMPLES_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSamplesFormat() {
    return samplesFormat;
  }


  @JsonProperty(JSON_PROPERTY_SAMPLES_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSamplesFormat(String samplesFormat) {
    this.samplesFormat = samplesFormat;
  }


  public Options samplesFilenamePattern(Object samplesFilenamePattern) {
    this.samplesFilenamePattern = JsonNullable.<Object>of(samplesFilenamePattern);
    
    return this;
  }

   /**
   * Images filename pattern
   * @return samplesFilenamePattern
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSamplesFilenamePattern() {
        return samplesFilenamePattern.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAMPLES_FILENAME_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSamplesFilenamePattern_JsonNullable() {
    return samplesFilenamePattern;
  }
  
  @JsonProperty(JSON_PROPERTY_SAMPLES_FILENAME_PATTERN)
  public void setSamplesFilenamePattern_JsonNullable(JsonNullable<Object> samplesFilenamePattern) {
    this.samplesFilenamePattern = samplesFilenamePattern;
  }

  public void setSamplesFilenamePattern(Object samplesFilenamePattern) {
    this.samplesFilenamePattern = JsonNullable.<Object>of(samplesFilenamePattern);
  }


  public Options saveImagesAddNumber(Boolean saveImagesAddNumber) {
    
    this.saveImagesAddNumber = saveImagesAddNumber;
    return this;
  }

   /**
   * Add number to filename when saving
   * @return saveImagesAddNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_ADD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSaveImagesAddNumber() {
    return saveImagesAddNumber;
  }


  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_ADD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaveImagesAddNumber(Boolean saveImagesAddNumber) {
    this.saveImagesAddNumber = saveImagesAddNumber;
  }


  public Options gridSave(Boolean gridSave) {
    
    this.gridSave = gridSave;
    return this;
  }

   /**
   * Always save all generated image grids
   * @return gridSave
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGridSave() {
    return gridSave;
  }


  @JsonProperty(JSON_PROPERTY_GRID_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridSave(Boolean gridSave) {
    this.gridSave = gridSave;
  }


  public Options gridFormat(String gridFormat) {
    
    this.gridFormat = gridFormat;
    return this;
  }

   /**
   * File format for grids
   * @return gridFormat
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGridFormat() {
    return gridFormat;
  }


  @JsonProperty(JSON_PROPERTY_GRID_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridFormat(String gridFormat) {
    this.gridFormat = gridFormat;
  }


  public Options gridExtendedFilename(Object gridExtendedFilename) {
    this.gridExtendedFilename = JsonNullable.<Object>of(gridExtendedFilename);
    
    return this;
  }

   /**
   * Add extended info (seed, prompt) to filename when saving grid
   * @return gridExtendedFilename
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getGridExtendedFilename() {
        return gridExtendedFilename.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRID_EXTENDED_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getGridExtendedFilename_JsonNullable() {
    return gridExtendedFilename;
  }
  
  @JsonProperty(JSON_PROPERTY_GRID_EXTENDED_FILENAME)
  public void setGridExtendedFilename_JsonNullable(JsonNullable<Object> gridExtendedFilename) {
    this.gridExtendedFilename = gridExtendedFilename;
  }

  public void setGridExtendedFilename(Object gridExtendedFilename) {
    this.gridExtendedFilename = JsonNullable.<Object>of(gridExtendedFilename);
  }


  public Options gridOnlyIfMultiple(Boolean gridOnlyIfMultiple) {
    
    this.gridOnlyIfMultiple = gridOnlyIfMultiple;
    return this;
  }

   /**
   * Do not save grids consisting of one picture
   * @return gridOnlyIfMultiple
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID_ONLY_IF_MULTIPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGridOnlyIfMultiple() {
    return gridOnlyIfMultiple;
  }


  @JsonProperty(JSON_PROPERTY_GRID_ONLY_IF_MULTIPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridOnlyIfMultiple(Boolean gridOnlyIfMultiple) {
    this.gridOnlyIfMultiple = gridOnlyIfMultiple;
  }


  public Options gridPreventEmptySpots(Object gridPreventEmptySpots) {
    this.gridPreventEmptySpots = JsonNullable.<Object>of(gridPreventEmptySpots);
    
    return this;
  }

   /**
   * Prevent empty spots in grid (when set to autodetect)
   * @return gridPreventEmptySpots
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getGridPreventEmptySpots() {
        return gridPreventEmptySpots.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRID_PREVENT_EMPTY_SPOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getGridPreventEmptySpots_JsonNullable() {
    return gridPreventEmptySpots;
  }
  
  @JsonProperty(JSON_PROPERTY_GRID_PREVENT_EMPTY_SPOTS)
  public void setGridPreventEmptySpots_JsonNullable(JsonNullable<Object> gridPreventEmptySpots) {
    this.gridPreventEmptySpots = gridPreventEmptySpots;
  }

  public void setGridPreventEmptySpots(Object gridPreventEmptySpots) {
    this.gridPreventEmptySpots = JsonNullable.<Object>of(gridPreventEmptySpots);
  }


  public Options gridZipFilenamePattern(Object gridZipFilenamePattern) {
    this.gridZipFilenamePattern = JsonNullable.<Object>of(gridZipFilenamePattern);
    
    return this;
  }

   /**
   * Archive filename pattern
   * @return gridZipFilenamePattern
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getGridZipFilenamePattern() {
        return gridZipFilenamePattern.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRID_ZIP_FILENAME_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getGridZipFilenamePattern_JsonNullable() {
    return gridZipFilenamePattern;
  }
  
  @JsonProperty(JSON_PROPERTY_GRID_ZIP_FILENAME_PATTERN)
  public void setGridZipFilenamePattern_JsonNullable(JsonNullable<Object> gridZipFilenamePattern) {
    this.gridZipFilenamePattern = gridZipFilenamePattern;
  }

  public void setGridZipFilenamePattern(Object gridZipFilenamePattern) {
    this.gridZipFilenamePattern = JsonNullable.<Object>of(gridZipFilenamePattern);
  }


  public Options nRows(BigDecimal nRows) {
    
    this.nRows = nRows;
    return this;
  }

   /**
   * Grid row count; use -1 for autodetect and 0 for it to be same as batch size
   * @return nRows
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_N_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getnRows() {
    return nRows;
  }


  @JsonProperty(JSON_PROPERTY_N_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setnRows(BigDecimal nRows) {
    this.nRows = nRows;
  }


  public Options font(Object font) {
    this.font = JsonNullable.<Object>of(font);
    
    return this;
  }

   /**
   * Font for image grids that have text
   * @return font
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFont() {
        return font.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FONT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFont_JsonNullable() {
    return font;
  }
  
  @JsonProperty(JSON_PROPERTY_FONT)
  public void setFont_JsonNullable(JsonNullable<Object> font) {
    this.font = font;
  }

  public void setFont(Object font) {
    this.font = JsonNullable.<Object>of(font);
  }


  public Options gridTextActiveColor(String gridTextActiveColor) {
    
    this.gridTextActiveColor = gridTextActiveColor;
    return this;
  }

   /**
   * Text color for image grids
   * @return gridTextActiveColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID_TEXT_ACTIVE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGridTextActiveColor() {
    return gridTextActiveColor;
  }


  @JsonProperty(JSON_PROPERTY_GRID_TEXT_ACTIVE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridTextActiveColor(String gridTextActiveColor) {
    this.gridTextActiveColor = gridTextActiveColor;
  }


  public Options gridTextInactiveColor(String gridTextInactiveColor) {
    
    this.gridTextInactiveColor = gridTextInactiveColor;
    return this;
  }

   /**
   * Inactive text color for image grids
   * @return gridTextInactiveColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID_TEXT_INACTIVE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGridTextInactiveColor() {
    return gridTextInactiveColor;
  }


  @JsonProperty(JSON_PROPERTY_GRID_TEXT_INACTIVE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridTextInactiveColor(String gridTextInactiveColor) {
    this.gridTextInactiveColor = gridTextInactiveColor;
  }


  public Options gridBackgroundColor(String gridBackgroundColor) {
    
    this.gridBackgroundColor = gridBackgroundColor;
    return this;
  }

   /**
   * Background color for image grids
   * @return gridBackgroundColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGridBackgroundColor() {
    return gridBackgroundColor;
  }


  @JsonProperty(JSON_PROPERTY_GRID_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridBackgroundColor(String gridBackgroundColor) {
    this.gridBackgroundColor = gridBackgroundColor;
  }


  public Options enablePnginfo(Boolean enablePnginfo) {
    
    this.enablePnginfo = enablePnginfo;
    return this;
  }

   /**
   * Save text information about generation parameters as chunks to png files
   * @return enablePnginfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_PNGINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnablePnginfo() {
    return enablePnginfo;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PNGINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnablePnginfo(Boolean enablePnginfo) {
    this.enablePnginfo = enablePnginfo;
  }


  public Options saveTxt(Object saveTxt) {
    this.saveTxt = JsonNullable.<Object>of(saveTxt);
    
    return this;
  }

   /**
   * Create a text file next to every image with generation parameters.
   * @return saveTxt
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveTxt() {
        return saveTxt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_TXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveTxt_JsonNullable() {
    return saveTxt;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_TXT)
  public void setSaveTxt_JsonNullable(JsonNullable<Object> saveTxt) {
    this.saveTxt = saveTxt;
  }

  public void setSaveTxt(Object saveTxt) {
    this.saveTxt = JsonNullable.<Object>of(saveTxt);
  }


  public Options saveImagesBeforeFaceRestoration(Object saveImagesBeforeFaceRestoration) {
    this.saveImagesBeforeFaceRestoration = JsonNullable.<Object>of(saveImagesBeforeFaceRestoration);
    
    return this;
  }

   /**
   * Save a copy of image before doing face restoration.
   * @return saveImagesBeforeFaceRestoration
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveImagesBeforeFaceRestoration() {
        return saveImagesBeforeFaceRestoration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_BEFORE_FACE_RESTORATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveImagesBeforeFaceRestoration_JsonNullable() {
    return saveImagesBeforeFaceRestoration;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_BEFORE_FACE_RESTORATION)
  public void setSaveImagesBeforeFaceRestoration_JsonNullable(JsonNullable<Object> saveImagesBeforeFaceRestoration) {
    this.saveImagesBeforeFaceRestoration = saveImagesBeforeFaceRestoration;
  }

  public void setSaveImagesBeforeFaceRestoration(Object saveImagesBeforeFaceRestoration) {
    this.saveImagesBeforeFaceRestoration = JsonNullable.<Object>of(saveImagesBeforeFaceRestoration);
  }


  public Options saveImagesBeforeHighresFix(Object saveImagesBeforeHighresFix) {
    this.saveImagesBeforeHighresFix = JsonNullable.<Object>of(saveImagesBeforeHighresFix);
    
    return this;
  }

   /**
   * Save a copy of image before applying highres fix.
   * @return saveImagesBeforeHighresFix
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveImagesBeforeHighresFix() {
        return saveImagesBeforeHighresFix.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_BEFORE_HIGHRES_FIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveImagesBeforeHighresFix_JsonNullable() {
    return saveImagesBeforeHighresFix;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_BEFORE_HIGHRES_FIX)
  public void setSaveImagesBeforeHighresFix_JsonNullable(JsonNullable<Object> saveImagesBeforeHighresFix) {
    this.saveImagesBeforeHighresFix = saveImagesBeforeHighresFix;
  }

  public void setSaveImagesBeforeHighresFix(Object saveImagesBeforeHighresFix) {
    this.saveImagesBeforeHighresFix = JsonNullable.<Object>of(saveImagesBeforeHighresFix);
  }


  public Options saveImagesBeforeColorCorrection(Object saveImagesBeforeColorCorrection) {
    this.saveImagesBeforeColorCorrection = JsonNullable.<Object>of(saveImagesBeforeColorCorrection);
    
    return this;
  }

   /**
   * Save a copy of image before applying color correction to img2img results
   * @return saveImagesBeforeColorCorrection
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveImagesBeforeColorCorrection() {
        return saveImagesBeforeColorCorrection.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_BEFORE_COLOR_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveImagesBeforeColorCorrection_JsonNullable() {
    return saveImagesBeforeColorCorrection;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_IMAGES_BEFORE_COLOR_CORRECTION)
  public void setSaveImagesBeforeColorCorrection_JsonNullable(JsonNullable<Object> saveImagesBeforeColorCorrection) {
    this.saveImagesBeforeColorCorrection = saveImagesBeforeColorCorrection;
  }

  public void setSaveImagesBeforeColorCorrection(Object saveImagesBeforeColorCorrection) {
    this.saveImagesBeforeColorCorrection = JsonNullable.<Object>of(saveImagesBeforeColorCorrection);
  }


  public Options saveMask(Object saveMask) {
    this.saveMask = JsonNullable.<Object>of(saveMask);
    
    return this;
  }

   /**
   * For inpainting, save a copy of the greyscale mask
   * @return saveMask
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveMask() {
        return saveMask.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveMask_JsonNullable() {
    return saveMask;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_MASK)
  public void setSaveMask_JsonNullable(JsonNullable<Object> saveMask) {
    this.saveMask = saveMask;
  }

  public void setSaveMask(Object saveMask) {
    this.saveMask = JsonNullable.<Object>of(saveMask);
  }


  public Options saveMaskComposite(Object saveMaskComposite) {
    this.saveMaskComposite = JsonNullable.<Object>of(saveMaskComposite);
    
    return this;
  }

   /**
   * For inpainting, save a masked composite
   * @return saveMaskComposite
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveMaskComposite() {
        return saveMaskComposite.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_MASK_COMPOSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveMaskComposite_JsonNullable() {
    return saveMaskComposite;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_MASK_COMPOSITE)
  public void setSaveMaskComposite_JsonNullable(JsonNullable<Object> saveMaskComposite) {
    this.saveMaskComposite = saveMaskComposite;
  }

  public void setSaveMaskComposite(Object saveMaskComposite) {
    this.saveMaskComposite = JsonNullable.<Object>of(saveMaskComposite);
  }


  public Options jpegQuality(BigDecimal jpegQuality) {
    
    this.jpegQuality = jpegQuality;
    return this;
  }

   /**
   * Quality for saved jpeg images
   * @return jpegQuality
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JPEG_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getJpegQuality() {
    return jpegQuality;
  }


  @JsonProperty(JSON_PROPERTY_JPEG_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJpegQuality(BigDecimal jpegQuality) {
    this.jpegQuality = jpegQuality;
  }


  public Options webpLossless(Object webpLossless) {
    this.webpLossless = JsonNullable.<Object>of(webpLossless);
    
    return this;
  }

   /**
   * Use lossless compression for webp images
   * @return webpLossless
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getWebpLossless() {
        return webpLossless.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBP_LOSSLESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getWebpLossless_JsonNullable() {
    return webpLossless;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBP_LOSSLESS)
  public void setWebpLossless_JsonNullable(JsonNullable<Object> webpLossless) {
    this.webpLossless = webpLossless;
  }

  public void setWebpLossless(Object webpLossless) {
    this.webpLossless = JsonNullable.<Object>of(webpLossless);
  }


  public Options exportFor4chan(Boolean exportFor4chan) {
    
    this.exportFor4chan = exportFor4chan;
    return this;
  }

   /**
   * Save copy of large images as JPG
   * @return exportFor4chan
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPORT_FOR4CHAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExportFor4chan() {
    return exportFor4chan;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_FOR4CHAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExportFor4chan(Boolean exportFor4chan) {
    this.exportFor4chan = exportFor4chan;
  }


  public Options imgDownscaleThreshold(BigDecimal imgDownscaleThreshold) {
    
    this.imgDownscaleThreshold = imgDownscaleThreshold;
    return this;
  }

   /**
   * File size limit for the above option, MB
   * @return imgDownscaleThreshold
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMG_DOWNSCALE_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getImgDownscaleThreshold() {
    return imgDownscaleThreshold;
  }


  @JsonProperty(JSON_PROPERTY_IMG_DOWNSCALE_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImgDownscaleThreshold(BigDecimal imgDownscaleThreshold) {
    this.imgDownscaleThreshold = imgDownscaleThreshold;
  }


  public Options targetSideLength(BigDecimal targetSideLength) {
    
    this.targetSideLength = targetSideLength;
    return this;
  }

   /**
   * Width/height limit for the above option, in pixels
   * @return targetSideLength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_SIDE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTargetSideLength() {
    return targetSideLength;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_SIDE_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetSideLength(BigDecimal targetSideLength) {
    this.targetSideLength = targetSideLength;
  }


  public Options imgMaxSizeMp(BigDecimal imgMaxSizeMp) {
    
    this.imgMaxSizeMp = imgMaxSizeMp;
    return this;
  }

   /**
   * Maximum image size
   * @return imgMaxSizeMp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMG_MAX_SIZE_MP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getImgMaxSizeMp() {
    return imgMaxSizeMp;
  }


  @JsonProperty(JSON_PROPERTY_IMG_MAX_SIZE_MP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImgMaxSizeMp(BigDecimal imgMaxSizeMp) {
    this.imgMaxSizeMp = imgMaxSizeMp;
  }


  public Options useOriginalNameBatch(Boolean useOriginalNameBatch) {
    
    this.useOriginalNameBatch = useOriginalNameBatch;
    return this;
  }

   /**
   * Use original name for output filename during batch process in extras tab
   * @return useOriginalNameBatch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_ORIGINAL_NAME_BATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseOriginalNameBatch() {
    return useOriginalNameBatch;
  }


  @JsonProperty(JSON_PROPERTY_USE_ORIGINAL_NAME_BATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseOriginalNameBatch(Boolean useOriginalNameBatch) {
    this.useOriginalNameBatch = useOriginalNameBatch;
  }


  public Options useUpscalerNameAsSuffix(Object useUpscalerNameAsSuffix) {
    this.useUpscalerNameAsSuffix = JsonNullable.<Object>of(useUpscalerNameAsSuffix);
    
    return this;
  }

   /**
   * Use upscaler name as filename suffix in the extras tab
   * @return useUpscalerNameAsSuffix
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUseUpscalerNameAsSuffix() {
        return useUpscalerNameAsSuffix.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_UPSCALER_NAME_AS_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUseUpscalerNameAsSuffix_JsonNullable() {
    return useUpscalerNameAsSuffix;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_UPSCALER_NAME_AS_SUFFIX)
  public void setUseUpscalerNameAsSuffix_JsonNullable(JsonNullable<Object> useUpscalerNameAsSuffix) {
    this.useUpscalerNameAsSuffix = useUpscalerNameAsSuffix;
  }

  public void setUseUpscalerNameAsSuffix(Object useUpscalerNameAsSuffix) {
    this.useUpscalerNameAsSuffix = JsonNullable.<Object>of(useUpscalerNameAsSuffix);
  }


  public Options saveSelectedOnly(Boolean saveSelectedOnly) {
    
    this.saveSelectedOnly = saveSelectedOnly;
    return this;
  }

   /**
   * When using &#39;Save&#39; button, only save a single selected image
   * @return saveSelectedOnly
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAVE_SELECTED_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSaveSelectedOnly() {
    return saveSelectedOnly;
  }


  @JsonProperty(JSON_PROPERTY_SAVE_SELECTED_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaveSelectedOnly(Boolean saveSelectedOnly) {
    this.saveSelectedOnly = saveSelectedOnly;
  }


  public Options saveInitImg(Object saveInitImg) {
    this.saveInitImg = JsonNullable.<Object>of(saveInitImg);
    
    return this;
  }

   /**
   * Save init images when using img2img
   * @return saveInitImg
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveInitImg() {
        return saveInitImg.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_INIT_IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveInitImg_JsonNullable() {
    return saveInitImg;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_INIT_IMG)
  public void setSaveInitImg_JsonNullable(JsonNullable<Object> saveInitImg) {
    this.saveInitImg = saveInitImg;
  }

  public void setSaveInitImg(Object saveInitImg) {
    this.saveInitImg = JsonNullable.<Object>of(saveInitImg);
  }


  public Options tempDir(Object tempDir) {
    this.tempDir = JsonNullable.<Object>of(tempDir);
    
    return this;
  }

   /**
   * Directory for temporary images; leave empty for default
   * @return tempDir
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTempDir() {
        return tempDir.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEMP_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTempDir_JsonNullable() {
    return tempDir;
  }
  
  @JsonProperty(JSON_PROPERTY_TEMP_DIR)
  public void setTempDir_JsonNullable(JsonNullable<Object> tempDir) {
    this.tempDir = tempDir;
  }

  public void setTempDir(Object tempDir) {
    this.tempDir = JsonNullable.<Object>of(tempDir);
  }


  public Options cleanTempDirAtStart(Object cleanTempDirAtStart) {
    this.cleanTempDirAtStart = JsonNullable.<Object>of(cleanTempDirAtStart);
    
    return this;
  }

   /**
   * Cleanup non-default temporary directory when starting webui
   * @return cleanTempDirAtStart
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getCleanTempDirAtStart() {
        return cleanTempDirAtStart.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLEAN_TEMP_DIR_AT_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getCleanTempDirAtStart_JsonNullable() {
    return cleanTempDirAtStart;
  }
  
  @JsonProperty(JSON_PROPERTY_CLEAN_TEMP_DIR_AT_START)
  public void setCleanTempDirAtStart_JsonNullable(JsonNullable<Object> cleanTempDirAtStart) {
    this.cleanTempDirAtStart = cleanTempDirAtStart;
  }

  public void setCleanTempDirAtStart(Object cleanTempDirAtStart) {
    this.cleanTempDirAtStart = JsonNullable.<Object>of(cleanTempDirAtStart);
  }


  public Options saveIncompleteImages(Object saveIncompleteImages) {
    this.saveIncompleteImages = JsonNullable.<Object>of(saveIncompleteImages);
    
    return this;
  }

   /**
   * Save incomplete images
   * @return saveIncompleteImages
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveIncompleteImages() {
        return saveIncompleteImages.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_INCOMPLETE_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveIncompleteImages_JsonNullable() {
    return saveIncompleteImages;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_INCOMPLETE_IMAGES)
  public void setSaveIncompleteImages_JsonNullable(JsonNullable<Object> saveIncompleteImages) {
    this.saveIncompleteImages = saveIncompleteImages;
  }

  public void setSaveIncompleteImages(Object saveIncompleteImages) {
    this.saveIncompleteImages = JsonNullable.<Object>of(saveIncompleteImages);
  }


  public Options outdirSamples(Object outdirSamples) {
    this.outdirSamples = JsonNullable.<Object>of(outdirSamples);
    
    return this;
  }

   /**
   * Output directory for images; if empty, defaults to three directories below
   * @return outdirSamples
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getOutdirSamples() {
        return outdirSamples.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTDIR_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutdirSamples_JsonNullable() {
    return outdirSamples;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTDIR_SAMPLES)
  public void setOutdirSamples_JsonNullable(JsonNullable<Object> outdirSamples) {
    this.outdirSamples = outdirSamples;
  }

  public void setOutdirSamples(Object outdirSamples) {
    this.outdirSamples = JsonNullable.<Object>of(outdirSamples);
  }


  public Options outdirTxt2imgSamples(String outdirTxt2imgSamples) {
    
    this.outdirTxt2imgSamples = outdirTxt2imgSamples;
    return this;
  }

   /**
   * Output directory for txt2img images
   * @return outdirTxt2imgSamples
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTDIR_TXT2IMG_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutdirTxt2imgSamples() {
    return outdirTxt2imgSamples;
  }


  @JsonProperty(JSON_PROPERTY_OUTDIR_TXT2IMG_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutdirTxt2imgSamples(String outdirTxt2imgSamples) {
    this.outdirTxt2imgSamples = outdirTxt2imgSamples;
  }


  public Options outdirImg2imgSamples(String outdirImg2imgSamples) {
    
    this.outdirImg2imgSamples = outdirImg2imgSamples;
    return this;
  }

   /**
   * Output directory for img2img images
   * @return outdirImg2imgSamples
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTDIR_IMG2IMG_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutdirImg2imgSamples() {
    return outdirImg2imgSamples;
  }


  @JsonProperty(JSON_PROPERTY_OUTDIR_IMG2IMG_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutdirImg2imgSamples(String outdirImg2imgSamples) {
    this.outdirImg2imgSamples = outdirImg2imgSamples;
  }


  public Options outdirExtrasSamples(String outdirExtrasSamples) {
    
    this.outdirExtrasSamples = outdirExtrasSamples;
    return this;
  }

   /**
   * Output directory for images from extras tab
   * @return outdirExtrasSamples
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTDIR_EXTRAS_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutdirExtrasSamples() {
    return outdirExtrasSamples;
  }


  @JsonProperty(JSON_PROPERTY_OUTDIR_EXTRAS_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutdirExtrasSamples(String outdirExtrasSamples) {
    this.outdirExtrasSamples = outdirExtrasSamples;
  }


  public Options outdirGrids(Object outdirGrids) {
    this.outdirGrids = JsonNullable.<Object>of(outdirGrids);
    
    return this;
  }

   /**
   * Output directory for grids; if empty, defaults to two directories below
   * @return outdirGrids
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getOutdirGrids() {
        return outdirGrids.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTDIR_GRIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutdirGrids_JsonNullable() {
    return outdirGrids;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTDIR_GRIDS)
  public void setOutdirGrids_JsonNullable(JsonNullable<Object> outdirGrids) {
    this.outdirGrids = outdirGrids;
  }

  public void setOutdirGrids(Object outdirGrids) {
    this.outdirGrids = JsonNullable.<Object>of(outdirGrids);
  }


  public Options outdirTxt2imgGrids(String outdirTxt2imgGrids) {
    
    this.outdirTxt2imgGrids = outdirTxt2imgGrids;
    return this;
  }

   /**
   * Output directory for txt2img grids
   * @return outdirTxt2imgGrids
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTDIR_TXT2IMG_GRIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutdirTxt2imgGrids() {
    return outdirTxt2imgGrids;
  }


  @JsonProperty(JSON_PROPERTY_OUTDIR_TXT2IMG_GRIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutdirTxt2imgGrids(String outdirTxt2imgGrids) {
    this.outdirTxt2imgGrids = outdirTxt2imgGrids;
  }


  public Options outdirImg2imgGrids(String outdirImg2imgGrids) {
    
    this.outdirImg2imgGrids = outdirImg2imgGrids;
    return this;
  }

   /**
   * Output directory for img2img grids
   * @return outdirImg2imgGrids
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTDIR_IMG2IMG_GRIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutdirImg2imgGrids() {
    return outdirImg2imgGrids;
  }


  @JsonProperty(JSON_PROPERTY_OUTDIR_IMG2IMG_GRIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutdirImg2imgGrids(String outdirImg2imgGrids) {
    this.outdirImg2imgGrids = outdirImg2imgGrids;
  }


  public Options outdirSave(String outdirSave) {
    
    this.outdirSave = outdirSave;
    return this;
  }

   /**
   * Directory for saving images using the Save button
   * @return outdirSave
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTDIR_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutdirSave() {
    return outdirSave;
  }


  @JsonProperty(JSON_PROPERTY_OUTDIR_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutdirSave(String outdirSave) {
    this.outdirSave = outdirSave;
  }


  public Options outdirInitImages(String outdirInitImages) {
    
    this.outdirInitImages = outdirInitImages;
    return this;
  }

   /**
   * Directory for saving init images when using img2img
   * @return outdirInitImages
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTDIR_INIT_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutdirInitImages() {
    return outdirInitImages;
  }


  @JsonProperty(JSON_PROPERTY_OUTDIR_INIT_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutdirInitImages(String outdirInitImages) {
    this.outdirInitImages = outdirInitImages;
  }


  public Options saveToDirs(Boolean saveToDirs) {
    
    this.saveToDirs = saveToDirs;
    return this;
  }

   /**
   * Save images to a subdirectory
   * @return saveToDirs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAVE_TO_DIRS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSaveToDirs() {
    return saveToDirs;
  }


  @JsonProperty(JSON_PROPERTY_SAVE_TO_DIRS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaveToDirs(Boolean saveToDirs) {
    this.saveToDirs = saveToDirs;
  }


  public Options gridSaveToDirs(Boolean gridSaveToDirs) {
    
    this.gridSaveToDirs = gridSaveToDirs;
    return this;
  }

   /**
   * Save grids to a subdirectory
   * @return gridSaveToDirs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRID_SAVE_TO_DIRS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGridSaveToDirs() {
    return gridSaveToDirs;
  }


  @JsonProperty(JSON_PROPERTY_GRID_SAVE_TO_DIRS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridSaveToDirs(Boolean gridSaveToDirs) {
    this.gridSaveToDirs = gridSaveToDirs;
  }


  public Options useSaveToDirsForUi(Object useSaveToDirsForUi) {
    this.useSaveToDirsForUi = JsonNullable.<Object>of(useSaveToDirsForUi);
    
    return this;
  }

   /**
   * When using \&quot;Save\&quot; button, save images to a subdirectory
   * @return useSaveToDirsForUi
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUseSaveToDirsForUi() {
        return useSaveToDirsForUi.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_SAVE_TO_DIRS_FOR_UI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUseSaveToDirsForUi_JsonNullable() {
    return useSaveToDirsForUi;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_SAVE_TO_DIRS_FOR_UI)
  public void setUseSaveToDirsForUi_JsonNullable(JsonNullable<Object> useSaveToDirsForUi) {
    this.useSaveToDirsForUi = useSaveToDirsForUi;
  }

  public void setUseSaveToDirsForUi(Object useSaveToDirsForUi) {
    this.useSaveToDirsForUi = JsonNullable.<Object>of(useSaveToDirsForUi);
  }


  public Options directoriesFilenamePattern(String directoriesFilenamePattern) {
    
    this.directoriesFilenamePattern = directoriesFilenamePattern;
    return this;
  }

   /**
   * Directory name pattern
   * @return directoriesFilenamePattern
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTORIES_FILENAME_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDirectoriesFilenamePattern() {
    return directoriesFilenamePattern;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTORIES_FILENAME_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectoriesFilenamePattern(String directoriesFilenamePattern) {
    this.directoriesFilenamePattern = directoriesFilenamePattern;
  }


  public Options directoriesMaxPromptWords(BigDecimal directoriesMaxPromptWords) {
    
    this.directoriesMaxPromptWords = directoriesMaxPromptWords;
    return this;
  }

   /**
   * Max prompt words for [prompt_words] pattern
   * @return directoriesMaxPromptWords
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTORIES_MAX_PROMPT_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDirectoriesMaxPromptWords() {
    return directoriesMaxPromptWords;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTORIES_MAX_PROMPT_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectoriesMaxPromptWords(BigDecimal directoriesMaxPromptWords) {
    this.directoriesMaxPromptWords = directoriesMaxPromptWords;
  }


  public Options esRGANTile(BigDecimal esRGANTile) {
    
    this.esRGANTile = esRGANTile;
    return this;
  }

   /**
   * Tile size for ESRGAN upscalers.
   * @return esRGANTile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ES_R_G_A_N_TILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEsRGANTile() {
    return esRGANTile;
  }


  @JsonProperty(JSON_PROPERTY_ES_R_G_A_N_TILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEsRGANTile(BigDecimal esRGANTile) {
    this.esRGANTile = esRGANTile;
  }


  public Options esRGANTileOverlap(BigDecimal esRGANTileOverlap) {
    
    this.esRGANTileOverlap = esRGANTileOverlap;
    return this;
  }

   /**
   * Tile overlap for ESRGAN upscalers.
   * @return esRGANTileOverlap
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ES_R_G_A_N_TILE_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEsRGANTileOverlap() {
    return esRGANTileOverlap;
  }


  @JsonProperty(JSON_PROPERTY_ES_R_G_A_N_TILE_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEsRGANTileOverlap(BigDecimal esRGANTileOverlap) {
    this.esRGANTileOverlap = esRGANTileOverlap;
  }


  public Options realesrganEnabledModels(List<Object> realesrganEnabledModels) {
    
    this.realesrganEnabledModels = realesrganEnabledModels;
    return this;
  }

  public Options addRealesrganEnabledModelsItem(Object realesrganEnabledModelsItem) {
    if (this.realesrganEnabledModels == null) {
      this.realesrganEnabledModels = new ArrayList<>(Arrays.asList(R-ESRGAN 4x+, R-ESRGAN 4x+ Anime6B));
    }
    this.realesrganEnabledModels.add(realesrganEnabledModelsItem);
    return this;
  }

   /**
   * Select which Real-ESRGAN models to show in the web UI.
   * @return realesrganEnabledModels
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REALESRGAN_ENABLED_MODELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getRealesrganEnabledModels() {
    return realesrganEnabledModels;
  }


  @JsonProperty(JSON_PROPERTY_REALESRGAN_ENABLED_MODELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealesrganEnabledModels(List<Object> realesrganEnabledModels) {
    this.realesrganEnabledModels = realesrganEnabledModels;
  }


  public Options upscalerForImg2img(Object upscalerForImg2img) {
    this.upscalerForImg2img = JsonNullable.<Object>of(upscalerForImg2img);
    
    return this;
  }

   /**
   * Upscaler for img2img
   * @return upscalerForImg2img
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUpscalerForImg2img() {
        return upscalerForImg2img.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPSCALER_FOR_IMG2IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUpscalerForImg2img_JsonNullable() {
    return upscalerForImg2img;
  }
  
  @JsonProperty(JSON_PROPERTY_UPSCALER_FOR_IMG2IMG)
  public void setUpscalerForImg2img_JsonNullable(JsonNullable<Object> upscalerForImg2img) {
    this.upscalerForImg2img = upscalerForImg2img;
  }

  public void setUpscalerForImg2img(Object upscalerForImg2img) {
    this.upscalerForImg2img = JsonNullable.<Object>of(upscalerForImg2img);
  }


  public Options faceRestoration(Object faceRestoration) {
    this.faceRestoration = JsonNullable.<Object>of(faceRestoration);
    
    return this;
  }

   /**
   * Restore faces
   * @return faceRestoration
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFaceRestoration() {
        return faceRestoration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FACE_RESTORATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFaceRestoration_JsonNullable() {
    return faceRestoration;
  }
  
  @JsonProperty(JSON_PROPERTY_FACE_RESTORATION)
  public void setFaceRestoration_JsonNullable(JsonNullable<Object> faceRestoration) {
    this.faceRestoration = faceRestoration;
  }

  public void setFaceRestoration(Object faceRestoration) {
    this.faceRestoration = JsonNullable.<Object>of(faceRestoration);
  }


  public Options faceRestorationModel(String faceRestorationModel) {
    
    this.faceRestorationModel = faceRestorationModel;
    return this;
  }

   /**
   * Face restoration model
   * @return faceRestorationModel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FACE_RESTORATION_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFaceRestorationModel() {
    return faceRestorationModel;
  }


  @JsonProperty(JSON_PROPERTY_FACE_RESTORATION_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFaceRestorationModel(String faceRestorationModel) {
    this.faceRestorationModel = faceRestorationModel;
  }


  public Options codeFormerWeight(BigDecimal codeFormerWeight) {
    
    this.codeFormerWeight = codeFormerWeight;
    return this;
  }

   /**
   * CodeFormer weight
   * @return codeFormerWeight
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_FORMER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCodeFormerWeight() {
    return codeFormerWeight;
  }


  @JsonProperty(JSON_PROPERTY_CODE_FORMER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeFormerWeight(BigDecimal codeFormerWeight) {
    this.codeFormerWeight = codeFormerWeight;
  }


  public Options faceRestorationUnload(Object faceRestorationUnload) {
    this.faceRestorationUnload = JsonNullable.<Object>of(faceRestorationUnload);
    
    return this;
  }

   /**
   * Move face restoration model from VRAM into RAM after processing
   * @return faceRestorationUnload
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFaceRestorationUnload() {
        return faceRestorationUnload.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FACE_RESTORATION_UNLOAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFaceRestorationUnload_JsonNullable() {
    return faceRestorationUnload;
  }
  
  @JsonProperty(JSON_PROPERTY_FACE_RESTORATION_UNLOAD)
  public void setFaceRestorationUnload_JsonNullable(JsonNullable<Object> faceRestorationUnload) {
    this.faceRestorationUnload = faceRestorationUnload;
  }

  public void setFaceRestorationUnload(Object faceRestorationUnload) {
    this.faceRestorationUnload = JsonNullable.<Object>of(faceRestorationUnload);
  }


  public Options autoLaunchBrowser(String autoLaunchBrowser) {
    
    this.autoLaunchBrowser = autoLaunchBrowser;
    return this;
  }

   /**
   * Automatically open webui in browser on startup
   * @return autoLaunchBrowser
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_LAUNCH_BROWSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAutoLaunchBrowser() {
    return autoLaunchBrowser;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_LAUNCH_BROWSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoLaunchBrowser(String autoLaunchBrowser) {
    this.autoLaunchBrowser = autoLaunchBrowser;
  }


  public Options showWarnings(Object showWarnings) {
    this.showWarnings = JsonNullable.<Object>of(showWarnings);
    
    return this;
  }

   /**
   * Show warnings in console.
   * @return showWarnings
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getShowWarnings() {
        return showWarnings.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHOW_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getShowWarnings_JsonNullable() {
    return showWarnings;
  }
  
  @JsonProperty(JSON_PROPERTY_SHOW_WARNINGS)
  public void setShowWarnings_JsonNullable(JsonNullable<Object> showWarnings) {
    this.showWarnings = showWarnings;
  }

  public void setShowWarnings(Object showWarnings) {
    this.showWarnings = JsonNullable.<Object>of(showWarnings);
  }


  public Options showGradioDeprecationWarnings(Boolean showGradioDeprecationWarnings) {
    
    this.showGradioDeprecationWarnings = showGradioDeprecationWarnings;
    return this;
  }

   /**
   * Show gradio deprecation warnings in console.
   * @return showGradioDeprecationWarnings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_GRADIO_DEPRECATION_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowGradioDeprecationWarnings() {
    return showGradioDeprecationWarnings;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_GRADIO_DEPRECATION_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowGradioDeprecationWarnings(Boolean showGradioDeprecationWarnings) {
    this.showGradioDeprecationWarnings = showGradioDeprecationWarnings;
  }


  public Options memmonPollRate(BigDecimal memmonPollRate) {
    
    this.memmonPollRate = memmonPollRate;
    return this;
  }

   /**
   * VRAM usage polls per second during generation.
   * @return memmonPollRate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMMON_POLL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMemmonPollRate() {
    return memmonPollRate;
  }


  @JsonProperty(JSON_PROPERTY_MEMMON_POLL_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemmonPollRate(BigDecimal memmonPollRate) {
    this.memmonPollRate = memmonPollRate;
  }


  public Options samplesLogStdout(Object samplesLogStdout) {
    this.samplesLogStdout = JsonNullable.<Object>of(samplesLogStdout);
    
    return this;
  }

   /**
   * Always print all generation info to standard output
   * @return samplesLogStdout
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSamplesLogStdout() {
        return samplesLogStdout.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAMPLES_LOG_STDOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSamplesLogStdout_JsonNullable() {
    return samplesLogStdout;
  }
  
  @JsonProperty(JSON_PROPERTY_SAMPLES_LOG_STDOUT)
  public void setSamplesLogStdout_JsonNullable(JsonNullable<Object> samplesLogStdout) {
    this.samplesLogStdout = samplesLogStdout;
  }

  public void setSamplesLogStdout(Object samplesLogStdout) {
    this.samplesLogStdout = JsonNullable.<Object>of(samplesLogStdout);
  }


  public Options multipleTqdm(Boolean multipleTqdm) {
    
    this.multipleTqdm = multipleTqdm;
    return this;
  }

   /**
   * Add a second progress bar to the console that shows progress for an entire job.
   * @return multipleTqdm
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTIPLE_TQDM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMultipleTqdm() {
    return multipleTqdm;
  }


  @JsonProperty(JSON_PROPERTY_MULTIPLE_TQDM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultipleTqdm(Boolean multipleTqdm) {
    this.multipleTqdm = multipleTqdm;
  }


  public Options printHypernetExtra(Object printHypernetExtra) {
    this.printHypernetExtra = JsonNullable.<Object>of(printHypernetExtra);
    
    return this;
  }

   /**
   * Print extra hypernetwork information to console.
   * @return printHypernetExtra
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPrintHypernetExtra() {
        return printHypernetExtra.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRINT_HYPERNET_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPrintHypernetExtra_JsonNullable() {
    return printHypernetExtra;
  }
  
  @JsonProperty(JSON_PROPERTY_PRINT_HYPERNET_EXTRA)
  public void setPrintHypernetExtra_JsonNullable(JsonNullable<Object> printHypernetExtra) {
    this.printHypernetExtra = printHypernetExtra;
  }

  public void setPrintHypernetExtra(Object printHypernetExtra) {
    this.printHypernetExtra = JsonNullable.<Object>of(printHypernetExtra);
  }


  public Options listHiddenFiles(Boolean listHiddenFiles) {
    
    this.listHiddenFiles = listHiddenFiles;
    return this;
  }

   /**
   * Load models/files in hidden directories
   * @return listHiddenFiles
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIST_HIDDEN_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getListHiddenFiles() {
    return listHiddenFiles;
  }


  @JsonProperty(JSON_PROPERTY_LIST_HIDDEN_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListHiddenFiles(Boolean listHiddenFiles) {
    this.listHiddenFiles = listHiddenFiles;
  }


  public Options disableMmapLoadSafetensors(Object disableMmapLoadSafetensors) {
    this.disableMmapLoadSafetensors = JsonNullable.<Object>of(disableMmapLoadSafetensors);
    
    return this;
  }

   /**
   * Disable memmapping for loading .safetensors files.
   * @return disableMmapLoadSafetensors
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDisableMmapLoadSafetensors() {
        return disableMmapLoadSafetensors.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLE_MMAP_LOAD_SAFETENSORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDisableMmapLoadSafetensors_JsonNullable() {
    return disableMmapLoadSafetensors;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLE_MMAP_LOAD_SAFETENSORS)
  public void setDisableMmapLoadSafetensors_JsonNullable(JsonNullable<Object> disableMmapLoadSafetensors) {
    this.disableMmapLoadSafetensors = disableMmapLoadSafetensors;
  }

  public void setDisableMmapLoadSafetensors(Object disableMmapLoadSafetensors) {
    this.disableMmapLoadSafetensors = JsonNullable.<Object>of(disableMmapLoadSafetensors);
  }


  public Options hideLdmPrints(Boolean hideLdmPrints) {
    
    this.hideLdmPrints = hideLdmPrints;
    return this;
  }

   /**
   * Prevent Stability-AI&#39;s ldm/sgm modules from printing noise to console.
   * @return hideLdmPrints
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIDE_LDM_PRINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHideLdmPrints() {
    return hideLdmPrints;
  }


  @JsonProperty(JSON_PROPERTY_HIDE_LDM_PRINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHideLdmPrints(Boolean hideLdmPrints) {
    this.hideLdmPrints = hideLdmPrints;
  }


  public Options apiEnableRequests(Boolean apiEnableRequests) {
    
    this.apiEnableRequests = apiEnableRequests;
    return this;
  }

   /**
   * Allow http:// and https:// URLs for input images in API
   * @return apiEnableRequests
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_ENABLE_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApiEnableRequests() {
    return apiEnableRequests;
  }


  @JsonProperty(JSON_PROPERTY_API_ENABLE_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiEnableRequests(Boolean apiEnableRequests) {
    this.apiEnableRequests = apiEnableRequests;
  }


  public Options apiForbidLocalRequests(Boolean apiForbidLocalRequests) {
    
    this.apiForbidLocalRequests = apiForbidLocalRequests;
    return this;
  }

   /**
   * Forbid URLs to local resources
   * @return apiForbidLocalRequests
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_FORBID_LOCAL_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApiForbidLocalRequests() {
    return apiForbidLocalRequests;
  }


  @JsonProperty(JSON_PROPERTY_API_FORBID_LOCAL_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiForbidLocalRequests(Boolean apiForbidLocalRequests) {
    this.apiForbidLocalRequests = apiForbidLocalRequests;
  }


  public Options apiUseragent(Object apiUseragent) {
    this.apiUseragent = JsonNullable.<Object>of(apiUseragent);
    
    return this;
  }

   /**
   * User agent for requests
   * @return apiUseragent
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getApiUseragent() {
        return apiUseragent.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_API_USERAGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getApiUseragent_JsonNullable() {
    return apiUseragent;
  }
  
  @JsonProperty(JSON_PROPERTY_API_USERAGENT)
  public void setApiUseragent_JsonNullable(JsonNullable<Object> apiUseragent) {
    this.apiUseragent = apiUseragent;
  }

  public void setApiUseragent(Object apiUseragent) {
    this.apiUseragent = JsonNullable.<Object>of(apiUseragent);
  }


  public Options unloadModelsWhenTraining(Object unloadModelsWhenTraining) {
    this.unloadModelsWhenTraining = JsonNullable.<Object>of(unloadModelsWhenTraining);
    
    return this;
  }

   /**
   * Move VAE and CLIP to RAM when training if possible. Saves VRAM.
   * @return unloadModelsWhenTraining
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUnloadModelsWhenTraining() {
        return unloadModelsWhenTraining.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNLOAD_MODELS_WHEN_TRAINING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUnloadModelsWhenTraining_JsonNullable() {
    return unloadModelsWhenTraining;
  }
  
  @JsonProperty(JSON_PROPERTY_UNLOAD_MODELS_WHEN_TRAINING)
  public void setUnloadModelsWhenTraining_JsonNullable(JsonNullable<Object> unloadModelsWhenTraining) {
    this.unloadModelsWhenTraining = unloadModelsWhenTraining;
  }

  public void setUnloadModelsWhenTraining(Object unloadModelsWhenTraining) {
    this.unloadModelsWhenTraining = JsonNullable.<Object>of(unloadModelsWhenTraining);
  }


  public Options pinMemory(Object pinMemory) {
    this.pinMemory = JsonNullable.<Object>of(pinMemory);
    
    return this;
  }

   /**
   * Turn on pin_memory for DataLoader. Makes training slightly faster but can increase memory usage.
   * @return pinMemory
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPinMemory() {
        return pinMemory.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PIN_MEMORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPinMemory_JsonNullable() {
    return pinMemory;
  }
  
  @JsonProperty(JSON_PROPERTY_PIN_MEMORY)
  public void setPinMemory_JsonNullable(JsonNullable<Object> pinMemory) {
    this.pinMemory = pinMemory;
  }

  public void setPinMemory(Object pinMemory) {
    this.pinMemory = JsonNullable.<Object>of(pinMemory);
  }


  public Options saveOptimizerState(Object saveOptimizerState) {
    this.saveOptimizerState = JsonNullable.<Object>of(saveOptimizerState);
    
    return this;
  }

   /**
   * Saves Optimizer state as separate *.optim file. Training of embedding or HN can be resumed with the matching optim file.
   * @return saveOptimizerState
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSaveOptimizerState() {
        return saveOptimizerState.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SAVE_OPTIMIZER_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSaveOptimizerState_JsonNullable() {
    return saveOptimizerState;
  }
  
  @JsonProperty(JSON_PROPERTY_SAVE_OPTIMIZER_STATE)
  public void setSaveOptimizerState_JsonNullable(JsonNullable<Object> saveOptimizerState) {
    this.saveOptimizerState = saveOptimizerState;
  }

  public void setSaveOptimizerState(Object saveOptimizerState) {
    this.saveOptimizerState = JsonNullable.<Object>of(saveOptimizerState);
  }


  public Options saveTrainingSettingsToTxt(Boolean saveTrainingSettingsToTxt) {
    
    this.saveTrainingSettingsToTxt = saveTrainingSettingsToTxt;
    return this;
  }

   /**
   * Save textual inversion and hypernet settings to a text file whenever training starts.
   * @return saveTrainingSettingsToTxt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAVE_TRAINING_SETTINGS_TO_TXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSaveTrainingSettingsToTxt() {
    return saveTrainingSettingsToTxt;
  }


  @JsonProperty(JSON_PROPERTY_SAVE_TRAINING_SETTINGS_TO_TXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaveTrainingSettingsToTxt(Boolean saveTrainingSettingsToTxt) {
    this.saveTrainingSettingsToTxt = saveTrainingSettingsToTxt;
  }


  public Options datasetFilenameWordRegex(Object datasetFilenameWordRegex) {
    this.datasetFilenameWordRegex = JsonNullable.<Object>of(datasetFilenameWordRegex);
    
    return this;
  }

   /**
   * Filename word regex
   * @return datasetFilenameWordRegex
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDatasetFilenameWordRegex() {
        return datasetFilenameWordRegex.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATASET_FILENAME_WORD_REGEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDatasetFilenameWordRegex_JsonNullable() {
    return datasetFilenameWordRegex;
  }
  
  @JsonProperty(JSON_PROPERTY_DATASET_FILENAME_WORD_REGEX)
  public void setDatasetFilenameWordRegex_JsonNullable(JsonNullable<Object> datasetFilenameWordRegex) {
    this.datasetFilenameWordRegex = datasetFilenameWordRegex;
  }

  public void setDatasetFilenameWordRegex(Object datasetFilenameWordRegex) {
    this.datasetFilenameWordRegex = JsonNullable.<Object>of(datasetFilenameWordRegex);
  }


  public Options datasetFilenameJoinString(String datasetFilenameJoinString) {
    
    this.datasetFilenameJoinString = datasetFilenameJoinString;
    return this;
  }

   /**
   * Filename join string
   * @return datasetFilenameJoinString
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASET_FILENAME_JOIN_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatasetFilenameJoinString() {
    return datasetFilenameJoinString;
  }


  @JsonProperty(JSON_PROPERTY_DATASET_FILENAME_JOIN_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasetFilenameJoinString(String datasetFilenameJoinString) {
    this.datasetFilenameJoinString = datasetFilenameJoinString;
  }


  public Options trainingImageRepeatsPerEpoch(BigDecimal trainingImageRepeatsPerEpoch) {
    
    this.trainingImageRepeatsPerEpoch = trainingImageRepeatsPerEpoch;
    return this;
  }

   /**
   * Number of repeats for a single input image per epoch; used only for displaying epoch number
   * @return trainingImageRepeatsPerEpoch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRAINING_IMAGE_REPEATS_PER_EPOCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTrainingImageRepeatsPerEpoch() {
    return trainingImageRepeatsPerEpoch;
  }


  @JsonProperty(JSON_PROPERTY_TRAINING_IMAGE_REPEATS_PER_EPOCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrainingImageRepeatsPerEpoch(BigDecimal trainingImageRepeatsPerEpoch) {
    this.trainingImageRepeatsPerEpoch = trainingImageRepeatsPerEpoch;
  }


  public Options trainingWriteCsvEvery(BigDecimal trainingWriteCsvEvery) {
    
    this.trainingWriteCsvEvery = trainingWriteCsvEvery;
    return this;
  }

   /**
   * Save an csv containing the loss to log directory every N steps, 0 to disable
   * @return trainingWriteCsvEvery
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRAINING_WRITE_CSV_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTrainingWriteCsvEvery() {
    return trainingWriteCsvEvery;
  }


  @JsonProperty(JSON_PROPERTY_TRAINING_WRITE_CSV_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrainingWriteCsvEvery(BigDecimal trainingWriteCsvEvery) {
    this.trainingWriteCsvEvery = trainingWriteCsvEvery;
  }


  public Options trainingXattentionOptimizations(Object trainingXattentionOptimizations) {
    this.trainingXattentionOptimizations = JsonNullable.<Object>of(trainingXattentionOptimizations);
    
    return this;
  }

   /**
   * Use cross attention optimizations while training
   * @return trainingXattentionOptimizations
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTrainingXattentionOptimizations() {
        return trainingXattentionOptimizations.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRAINING_XATTENTION_OPTIMIZATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTrainingXattentionOptimizations_JsonNullable() {
    return trainingXattentionOptimizations;
  }
  
  @JsonProperty(JSON_PROPERTY_TRAINING_XATTENTION_OPTIMIZATIONS)
  public void setTrainingXattentionOptimizations_JsonNullable(JsonNullable<Object> trainingXattentionOptimizations) {
    this.trainingXattentionOptimizations = trainingXattentionOptimizations;
  }

  public void setTrainingXattentionOptimizations(Object trainingXattentionOptimizations) {
    this.trainingXattentionOptimizations = JsonNullable.<Object>of(trainingXattentionOptimizations);
  }


  public Options trainingEnableTensorboard(Object trainingEnableTensorboard) {
    this.trainingEnableTensorboard = JsonNullable.<Object>of(trainingEnableTensorboard);
    
    return this;
  }

   /**
   * Enable tensorboard logging.
   * @return trainingEnableTensorboard
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTrainingEnableTensorboard() {
        return trainingEnableTensorboard.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRAINING_ENABLE_TENSORBOARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTrainingEnableTensorboard_JsonNullable() {
    return trainingEnableTensorboard;
  }
  
  @JsonProperty(JSON_PROPERTY_TRAINING_ENABLE_TENSORBOARD)
  public void setTrainingEnableTensorboard_JsonNullable(JsonNullable<Object> trainingEnableTensorboard) {
    this.trainingEnableTensorboard = trainingEnableTensorboard;
  }

  public void setTrainingEnableTensorboard(Object trainingEnableTensorboard) {
    this.trainingEnableTensorboard = JsonNullable.<Object>of(trainingEnableTensorboard);
  }


  public Options trainingTensorboardSaveImages(Object trainingTensorboardSaveImages) {
    this.trainingTensorboardSaveImages = JsonNullable.<Object>of(trainingTensorboardSaveImages);
    
    return this;
  }

   /**
   * Save generated images within tensorboard.
   * @return trainingTensorboardSaveImages
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTrainingTensorboardSaveImages() {
        return trainingTensorboardSaveImages.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRAINING_TENSORBOARD_SAVE_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTrainingTensorboardSaveImages_JsonNullable() {
    return trainingTensorboardSaveImages;
  }
  
  @JsonProperty(JSON_PROPERTY_TRAINING_TENSORBOARD_SAVE_IMAGES)
  public void setTrainingTensorboardSaveImages_JsonNullable(JsonNullable<Object> trainingTensorboardSaveImages) {
    this.trainingTensorboardSaveImages = trainingTensorboardSaveImages;
  }

  public void setTrainingTensorboardSaveImages(Object trainingTensorboardSaveImages) {
    this.trainingTensorboardSaveImages = JsonNullable.<Object>of(trainingTensorboardSaveImages);
  }


  public Options trainingTensorboardFlushEvery(BigDecimal trainingTensorboardFlushEvery) {
    
    this.trainingTensorboardFlushEvery = trainingTensorboardFlushEvery;
    return this;
  }

   /**
   * How often, in seconds, to flush the pending tensorboard events and summaries to disk.
   * @return trainingTensorboardFlushEvery
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRAINING_TENSORBOARD_FLUSH_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTrainingTensorboardFlushEvery() {
    return trainingTensorboardFlushEvery;
  }


  @JsonProperty(JSON_PROPERTY_TRAINING_TENSORBOARD_FLUSH_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrainingTensorboardFlushEvery(BigDecimal trainingTensorboardFlushEvery) {
    this.trainingTensorboardFlushEvery = trainingTensorboardFlushEvery;
  }


  public Options sdModelCheckpoint(Object sdModelCheckpoint) {
    this.sdModelCheckpoint = JsonNullable.<Object>of(sdModelCheckpoint);
    
    return this;
  }

   /**
   * Stable Diffusion checkpoint
   * @return sdModelCheckpoint
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSdModelCheckpoint() {
        return sdModelCheckpoint.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SD_MODEL_CHECKPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSdModelCheckpoint_JsonNullable() {
    return sdModelCheckpoint;
  }
  
  @JsonProperty(JSON_PROPERTY_SD_MODEL_CHECKPOINT)
  public void setSdModelCheckpoint_JsonNullable(JsonNullable<Object> sdModelCheckpoint) {
    this.sdModelCheckpoint = sdModelCheckpoint;
  }

  public void setSdModelCheckpoint(Object sdModelCheckpoint) {
    this.sdModelCheckpoint = JsonNullable.<Object>of(sdModelCheckpoint);
  }


  public Options sdCheckpointsLimit(BigDecimal sdCheckpointsLimit) {
    
    this.sdCheckpointsLimit = sdCheckpointsLimit;
    return this;
  }

   /**
   * Maximum number of checkpoints loaded at the same time
   * @return sdCheckpointsLimit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINTS_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSdCheckpointsLimit() {
    return sdCheckpointsLimit;
  }


  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINTS_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdCheckpointsLimit(BigDecimal sdCheckpointsLimit) {
    this.sdCheckpointsLimit = sdCheckpointsLimit;
  }


  public Options sdCheckpointsKeepInCpu(Boolean sdCheckpointsKeepInCpu) {
    
    this.sdCheckpointsKeepInCpu = sdCheckpointsKeepInCpu;
    return this;
  }

   /**
   * Only keep one model on device
   * @return sdCheckpointsKeepInCpu
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINTS_KEEP_IN_CPU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSdCheckpointsKeepInCpu() {
    return sdCheckpointsKeepInCpu;
  }


  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINTS_KEEP_IN_CPU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdCheckpointsKeepInCpu(Boolean sdCheckpointsKeepInCpu) {
    this.sdCheckpointsKeepInCpu = sdCheckpointsKeepInCpu;
  }


  public Options sdCheckpointCache(Object sdCheckpointCache) {
    this.sdCheckpointCache = JsonNullable.<Object>of(sdCheckpointCache);
    
    return this;
  }

   /**
   * Checkpoints to cache in RAM
   * @return sdCheckpointCache
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSdCheckpointCache() {
        return sdCheckpointCache.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINT_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSdCheckpointCache_JsonNullable() {
    return sdCheckpointCache;
  }
  
  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINT_CACHE)
  public void setSdCheckpointCache_JsonNullable(JsonNullable<Object> sdCheckpointCache) {
    this.sdCheckpointCache = sdCheckpointCache;
  }

  public void setSdCheckpointCache(Object sdCheckpointCache) {
    this.sdCheckpointCache = JsonNullable.<Object>of(sdCheckpointCache);
  }


  public Options sdUnet(String sdUnet) {
    
    this.sdUnet = sdUnet;
    return this;
  }

   /**
   * SD Unet
   * @return sdUnet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_UNET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdUnet() {
    return sdUnet;
  }


  @JsonProperty(JSON_PROPERTY_SD_UNET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdUnet(String sdUnet) {
    this.sdUnet = sdUnet;
  }


  public Options enableQuantization(Object enableQuantization) {
    this.enableQuantization = JsonNullable.<Object>of(enableQuantization);
    
    return this;
  }

   /**
   * Enable quantization in K samplers for sharper and cleaner results. This may change existing seeds
   * @return enableQuantization
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getEnableQuantization() {
        return enableQuantization.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_QUANTIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEnableQuantization_JsonNullable() {
    return enableQuantization;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLE_QUANTIZATION)
  public void setEnableQuantization_JsonNullable(JsonNullable<Object> enableQuantization) {
    this.enableQuantization = enableQuantization;
  }

  public void setEnableQuantization(Object enableQuantization) {
    this.enableQuantization = JsonNullable.<Object>of(enableQuantization);
  }


  public Options enableEmphasis(Boolean enableEmphasis) {
    
    this.enableEmphasis = enableEmphasis;
    return this;
  }

   /**
   * Enable emphasis
   * @return enableEmphasis
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_EMPHASIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableEmphasis() {
    return enableEmphasis;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_EMPHASIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableEmphasis(Boolean enableEmphasis) {
    this.enableEmphasis = enableEmphasis;
  }


  public Options enableBatchSeeds(Boolean enableBatchSeeds) {
    
    this.enableBatchSeeds = enableBatchSeeds;
    return this;
  }

   /**
   * Make K-diffusion samplers produce same images in a batch as when making a single image
   * @return enableBatchSeeds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_BATCH_SEEDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableBatchSeeds() {
    return enableBatchSeeds;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_BATCH_SEEDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableBatchSeeds(Boolean enableBatchSeeds) {
    this.enableBatchSeeds = enableBatchSeeds;
  }


  public Options commaPaddingBacktrack(BigDecimal commaPaddingBacktrack) {
    
    this.commaPaddingBacktrack = commaPaddingBacktrack;
    return this;
  }

   /**
   * Prompt word wrap length limit
   * @return commaPaddingBacktrack
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMA_PADDING_BACKTRACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCommaPaddingBacktrack() {
    return commaPaddingBacktrack;
  }


  @JsonProperty(JSON_PROPERTY_COMMA_PADDING_BACKTRACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommaPaddingBacktrack(BigDecimal commaPaddingBacktrack) {
    this.commaPaddingBacktrack = commaPaddingBacktrack;
  }


  public Options clIPStopAtLastLayers(BigDecimal clIPStopAtLastLayers) {
    
    this.clIPStopAtLastLayers = clIPStopAtLastLayers;
    return this;
  }

   /**
   * Clip skip
   * @return clIPStopAtLastLayers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CL_I_P_STOP_AT_LAST_LAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getClIPStopAtLastLayers() {
    return clIPStopAtLastLayers;
  }


  @JsonProperty(JSON_PROPERTY_CL_I_P_STOP_AT_LAST_LAYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClIPStopAtLastLayers(BigDecimal clIPStopAtLastLayers) {
    this.clIPStopAtLastLayers = clIPStopAtLastLayers;
  }


  public Options upcastAttn(Object upcastAttn) {
    this.upcastAttn = JsonNullable.<Object>of(upcastAttn);
    
    return this;
  }

   /**
   * Upcast cross attention layer to float32
   * @return upcastAttn
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUpcastAttn() {
        return upcastAttn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPCAST_ATTN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUpcastAttn_JsonNullable() {
    return upcastAttn;
  }
  
  @JsonProperty(JSON_PROPERTY_UPCAST_ATTN)
  public void setUpcastAttn_JsonNullable(JsonNullable<Object> upcastAttn) {
    this.upcastAttn = upcastAttn;
  }

  public void setUpcastAttn(Object upcastAttn) {
    this.upcastAttn = JsonNullable.<Object>of(upcastAttn);
  }


  public Options randnSource(String randnSource) {
    
    this.randnSource = randnSource;
    return this;
  }

   /**
   * Random number generator source.
   * @return randnSource
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RANDN_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRandnSource() {
    return randnSource;
  }


  @JsonProperty(JSON_PROPERTY_RANDN_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRandnSource(String randnSource) {
    this.randnSource = randnSource;
  }


  public Options tiling(Object tiling) {
    this.tiling = JsonNullable.<Object>of(tiling);
    
    return this;
  }

   /**
   * Tiling
   * @return tiling
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTiling() {
        return tiling.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TILING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTiling_JsonNullable() {
    return tiling;
  }
  
  @JsonProperty(JSON_PROPERTY_TILING)
  public void setTiling_JsonNullable(JsonNullable<Object> tiling) {
    this.tiling = tiling;
  }

  public void setTiling(Object tiling) {
    this.tiling = JsonNullable.<Object>of(tiling);
  }


  public Options hiresFixRefinerPass(String hiresFixRefinerPass) {
    
    this.hiresFixRefinerPass = hiresFixRefinerPass;
    return this;
  }

   /**
   * Hires fix: which pass to enable refiner for
   * @return hiresFixRefinerPass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIRES_FIX_REFINER_PASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHiresFixRefinerPass() {
    return hiresFixRefinerPass;
  }


  @JsonProperty(JSON_PROPERTY_HIRES_FIX_REFINER_PASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHiresFixRefinerPass(String hiresFixRefinerPass) {
    this.hiresFixRefinerPass = hiresFixRefinerPass;
  }


  public Options sdxlCropTop(Object sdxlCropTop) {
    this.sdxlCropTop = JsonNullable.<Object>of(sdxlCropTop);
    
    return this;
  }

   /**
   * crop top coordinate
   * @return sdxlCropTop
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSdxlCropTop() {
        return sdxlCropTop.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SDXL_CROP_TOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSdxlCropTop_JsonNullable() {
    return sdxlCropTop;
  }
  
  @JsonProperty(JSON_PROPERTY_SDXL_CROP_TOP)
  public void setSdxlCropTop_JsonNullable(JsonNullable<Object> sdxlCropTop) {
    this.sdxlCropTop = sdxlCropTop;
  }

  public void setSdxlCropTop(Object sdxlCropTop) {
    this.sdxlCropTop = JsonNullable.<Object>of(sdxlCropTop);
  }


  public Options sdxlCropLeft(Object sdxlCropLeft) {
    this.sdxlCropLeft = JsonNullable.<Object>of(sdxlCropLeft);
    
    return this;
  }

   /**
   * crop left coordinate
   * @return sdxlCropLeft
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSdxlCropLeft() {
        return sdxlCropLeft.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SDXL_CROP_LEFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSdxlCropLeft_JsonNullable() {
    return sdxlCropLeft;
  }
  
  @JsonProperty(JSON_PROPERTY_SDXL_CROP_LEFT)
  public void setSdxlCropLeft_JsonNullable(JsonNullable<Object> sdxlCropLeft) {
    this.sdxlCropLeft = sdxlCropLeft;
  }

  public void setSdxlCropLeft(Object sdxlCropLeft) {
    this.sdxlCropLeft = JsonNullable.<Object>of(sdxlCropLeft);
  }


  public Options sdxlRefinerLowAestheticScore(BigDecimal sdxlRefinerLowAestheticScore) {
    
    this.sdxlRefinerLowAestheticScore = sdxlRefinerLowAestheticScore;
    return this;
  }

   /**
   * SDXL low aesthetic score
   * @return sdxlRefinerLowAestheticScore
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SDXL_REFINER_LOW_AESTHETIC_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSdxlRefinerLowAestheticScore() {
    return sdxlRefinerLowAestheticScore;
  }


  @JsonProperty(JSON_PROPERTY_SDXL_REFINER_LOW_AESTHETIC_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdxlRefinerLowAestheticScore(BigDecimal sdxlRefinerLowAestheticScore) {
    this.sdxlRefinerLowAestheticScore = sdxlRefinerLowAestheticScore;
  }


  public Options sdxlRefinerHighAestheticScore(BigDecimal sdxlRefinerHighAestheticScore) {
    
    this.sdxlRefinerHighAestheticScore = sdxlRefinerHighAestheticScore;
    return this;
  }

   /**
   * SDXL high aesthetic score
   * @return sdxlRefinerHighAestheticScore
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SDXL_REFINER_HIGH_AESTHETIC_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSdxlRefinerHighAestheticScore() {
    return sdxlRefinerHighAestheticScore;
  }


  @JsonProperty(JSON_PROPERTY_SDXL_REFINER_HIGH_AESTHETIC_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdxlRefinerHighAestheticScore(BigDecimal sdxlRefinerHighAestheticScore) {
    this.sdxlRefinerHighAestheticScore = sdxlRefinerHighAestheticScore;
  }


  public Options sdVaeExplanation(String sdVaeExplanation) {
    
    this.sdVaeExplanation = sdVaeExplanation;
    return this;
  }

   /**
   * Get sdVaeExplanation
   * @return sdVaeExplanation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_VAE_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdVaeExplanation() {
    return sdVaeExplanation;
  }


  @JsonProperty(JSON_PROPERTY_SD_VAE_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdVaeExplanation(String sdVaeExplanation) {
    this.sdVaeExplanation = sdVaeExplanation;
  }


  public Options sdVaeCheckpointCache(Object sdVaeCheckpointCache) {
    this.sdVaeCheckpointCache = JsonNullable.<Object>of(sdVaeCheckpointCache);
    
    return this;
  }

   /**
   * VAE Checkpoints to cache in RAM
   * @return sdVaeCheckpointCache
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSdVaeCheckpointCache() {
        return sdVaeCheckpointCache.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SD_VAE_CHECKPOINT_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSdVaeCheckpointCache_JsonNullable() {
    return sdVaeCheckpointCache;
  }
  
  @JsonProperty(JSON_PROPERTY_SD_VAE_CHECKPOINT_CACHE)
  public void setSdVaeCheckpointCache_JsonNullable(JsonNullable<Object> sdVaeCheckpointCache) {
    this.sdVaeCheckpointCache = sdVaeCheckpointCache;
  }

  public void setSdVaeCheckpointCache(Object sdVaeCheckpointCache) {
    this.sdVaeCheckpointCache = JsonNullable.<Object>of(sdVaeCheckpointCache);
  }


  public Options sdVae(String sdVae) {
    
    this.sdVae = sdVae;
    return this;
  }

   /**
   * SD VAE
   * @return sdVae
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_VAE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdVae() {
    return sdVae;
  }


  @JsonProperty(JSON_PROPERTY_SD_VAE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdVae(String sdVae) {
    this.sdVae = sdVae;
  }


  public Options sdVaeOverridesPerModelPreferences(Boolean sdVaeOverridesPerModelPreferences) {
    
    this.sdVaeOverridesPerModelPreferences = sdVaeOverridesPerModelPreferences;
    return this;
  }

   /**
   * Selected VAE overrides per-model preferences
   * @return sdVaeOverridesPerModelPreferences
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_VAE_OVERRIDES_PER_MODEL_PREFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSdVaeOverridesPerModelPreferences() {
    return sdVaeOverridesPerModelPreferences;
  }


  @JsonProperty(JSON_PROPERTY_SD_VAE_OVERRIDES_PER_MODEL_PREFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdVaeOverridesPerModelPreferences(Boolean sdVaeOverridesPerModelPreferences) {
    this.sdVaeOverridesPerModelPreferences = sdVaeOverridesPerModelPreferences;
  }


  public Options autoVaePrecision(Boolean autoVaePrecision) {
    
    this.autoVaePrecision = autoVaePrecision;
    return this;
  }

   /**
   * Automatically revert VAE to 32-bit floats
   * @return autoVaePrecision
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_VAE_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoVaePrecision() {
    return autoVaePrecision;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_VAE_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoVaePrecision(Boolean autoVaePrecision) {
    this.autoVaePrecision = autoVaePrecision;
  }


  public Options sdVaeEncodeMethod(String sdVaeEncodeMethod) {
    
    this.sdVaeEncodeMethod = sdVaeEncodeMethod;
    return this;
  }

   /**
   * VAE type for encode
   * @return sdVaeEncodeMethod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_VAE_ENCODE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdVaeEncodeMethod() {
    return sdVaeEncodeMethod;
  }


  @JsonProperty(JSON_PROPERTY_SD_VAE_ENCODE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdVaeEncodeMethod(String sdVaeEncodeMethod) {
    this.sdVaeEncodeMethod = sdVaeEncodeMethod;
  }


  public Options sdVaeDecodeMethod(String sdVaeDecodeMethod) {
    
    this.sdVaeDecodeMethod = sdVaeDecodeMethod;
    return this;
  }

   /**
   * VAE type for decode
   * @return sdVaeDecodeMethod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_VAE_DECODE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdVaeDecodeMethod() {
    return sdVaeDecodeMethod;
  }


  @JsonProperty(JSON_PROPERTY_SD_VAE_DECODE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdVaeDecodeMethod(String sdVaeDecodeMethod) {
    this.sdVaeDecodeMethod = sdVaeDecodeMethod;
  }


  public Options inpaintingMaskWeight(BigDecimal inpaintingMaskWeight) {
    
    this.inpaintingMaskWeight = inpaintingMaskWeight;
    return this;
  }

   /**
   * Inpainting conditioning mask strength
   * @return inpaintingMaskWeight
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPAINTING_MASK_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInpaintingMaskWeight() {
    return inpaintingMaskWeight;
  }


  @JsonProperty(JSON_PROPERTY_INPAINTING_MASK_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInpaintingMaskWeight(BigDecimal inpaintingMaskWeight) {
    this.inpaintingMaskWeight = inpaintingMaskWeight;
  }


  public Options initialNoiseMultiplier(BigDecimal initialNoiseMultiplier) {
    
    this.initialNoiseMultiplier = initialNoiseMultiplier;
    return this;
  }

   /**
   * Noise multiplier for img2img
   * @return initialNoiseMultiplier
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_NOISE_MULTIPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInitialNoiseMultiplier() {
    return initialNoiseMultiplier;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_NOISE_MULTIPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialNoiseMultiplier(BigDecimal initialNoiseMultiplier) {
    this.initialNoiseMultiplier = initialNoiseMultiplier;
  }


  public Options img2imgExtraNoise(Object img2imgExtraNoise) {
    this.img2imgExtraNoise = JsonNullable.<Object>of(img2imgExtraNoise);
    
    return this;
  }

   /**
   * Extra noise multiplier for img2img and hires fix
   * @return img2imgExtraNoise
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getImg2imgExtraNoise() {
        return img2imgExtraNoise.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMG2IMG_EXTRA_NOISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getImg2imgExtraNoise_JsonNullable() {
    return img2imgExtraNoise;
  }
  
  @JsonProperty(JSON_PROPERTY_IMG2IMG_EXTRA_NOISE)
  public void setImg2imgExtraNoise_JsonNullable(JsonNullable<Object> img2imgExtraNoise) {
    this.img2imgExtraNoise = img2imgExtraNoise;
  }

  public void setImg2imgExtraNoise(Object img2imgExtraNoise) {
    this.img2imgExtraNoise = JsonNullable.<Object>of(img2imgExtraNoise);
  }


  public Options img2imgColorCorrection(Object img2imgColorCorrection) {
    this.img2imgColorCorrection = JsonNullable.<Object>of(img2imgColorCorrection);
    
    return this;
  }

   /**
   * Apply color correction to img2img results to match original colors.
   * @return img2imgColorCorrection
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getImg2imgColorCorrection() {
        return img2imgColorCorrection.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMG2IMG_COLOR_CORRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getImg2imgColorCorrection_JsonNullable() {
    return img2imgColorCorrection;
  }
  
  @JsonProperty(JSON_PROPERTY_IMG2IMG_COLOR_CORRECTION)
  public void setImg2imgColorCorrection_JsonNullable(JsonNullable<Object> img2imgColorCorrection) {
    this.img2imgColorCorrection = img2imgColorCorrection;
  }

  public void setImg2imgColorCorrection(Object img2imgColorCorrection) {
    this.img2imgColorCorrection = JsonNullable.<Object>of(img2imgColorCorrection);
  }


  public Options img2imgFixSteps(Object img2imgFixSteps) {
    this.img2imgFixSteps = JsonNullable.<Object>of(img2imgFixSteps);
    
    return this;
  }

   /**
   * With img2img, do exactly the amount of steps the slider specifies.
   * @return img2imgFixSteps
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getImg2imgFixSteps() {
        return img2imgFixSteps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMG2IMG_FIX_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getImg2imgFixSteps_JsonNullable() {
    return img2imgFixSteps;
  }
  
  @JsonProperty(JSON_PROPERTY_IMG2IMG_FIX_STEPS)
  public void setImg2imgFixSteps_JsonNullable(JsonNullable<Object> img2imgFixSteps) {
    this.img2imgFixSteps = img2imgFixSteps;
  }

  public void setImg2imgFixSteps(Object img2imgFixSteps) {
    this.img2imgFixSteps = JsonNullable.<Object>of(img2imgFixSteps);
  }


  public Options img2imgBackgroundColor(String img2imgBackgroundColor) {
    
    this.img2imgBackgroundColor = img2imgBackgroundColor;
    return this;
  }

   /**
   * With img2img, fill transparent parts of the input image with this color.
   * @return img2imgBackgroundColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMG2IMG_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImg2imgBackgroundColor() {
    return img2imgBackgroundColor;
  }


  @JsonProperty(JSON_PROPERTY_IMG2IMG_BACKGROUND_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImg2imgBackgroundColor(String img2imgBackgroundColor) {
    this.img2imgBackgroundColor = img2imgBackgroundColor;
  }


  public Options img2imgEditorHeight(BigDecimal img2imgEditorHeight) {
    
    this.img2imgEditorHeight = img2imgEditorHeight;
    return this;
  }

   /**
   * Height of the image editor
   * @return img2imgEditorHeight
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMG2IMG_EDITOR_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getImg2imgEditorHeight() {
    return img2imgEditorHeight;
  }


  @JsonProperty(JSON_PROPERTY_IMG2IMG_EDITOR_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImg2imgEditorHeight(BigDecimal img2imgEditorHeight) {
    this.img2imgEditorHeight = img2imgEditorHeight;
  }


  public Options img2imgSketchDefaultBrushColor(String img2imgSketchDefaultBrushColor) {
    
    this.img2imgSketchDefaultBrushColor = img2imgSketchDefaultBrushColor;
    return this;
  }

   /**
   * Sketch initial brush color
   * @return img2imgSketchDefaultBrushColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMG2IMG_SKETCH_DEFAULT_BRUSH_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImg2imgSketchDefaultBrushColor() {
    return img2imgSketchDefaultBrushColor;
  }


  @JsonProperty(JSON_PROPERTY_IMG2IMG_SKETCH_DEFAULT_BRUSH_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImg2imgSketchDefaultBrushColor(String img2imgSketchDefaultBrushColor) {
    this.img2imgSketchDefaultBrushColor = img2imgSketchDefaultBrushColor;
  }


  public Options img2imgInpaintMaskBrushColor(String img2imgInpaintMaskBrushColor) {
    
    this.img2imgInpaintMaskBrushColor = img2imgInpaintMaskBrushColor;
    return this;
  }

   /**
   * Inpaint mask brush color
   * @return img2imgInpaintMaskBrushColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMG2IMG_INPAINT_MASK_BRUSH_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImg2imgInpaintMaskBrushColor() {
    return img2imgInpaintMaskBrushColor;
  }


  @JsonProperty(JSON_PROPERTY_IMG2IMG_INPAINT_MASK_BRUSH_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImg2imgInpaintMaskBrushColor(String img2imgInpaintMaskBrushColor) {
    this.img2imgInpaintMaskBrushColor = img2imgInpaintMaskBrushColor;
  }


  public Options img2imgInpaintSketchDefaultBrushColor(String img2imgInpaintSketchDefaultBrushColor) {
    
    this.img2imgInpaintSketchDefaultBrushColor = img2imgInpaintSketchDefaultBrushColor;
    return this;
  }

   /**
   * Inpaint sketch initial brush color
   * @return img2imgInpaintSketchDefaultBrushColor
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMG2IMG_INPAINT_SKETCH_DEFAULT_BRUSH_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImg2imgInpaintSketchDefaultBrushColor() {
    return img2imgInpaintSketchDefaultBrushColor;
  }


  @JsonProperty(JSON_PROPERTY_IMG2IMG_INPAINT_SKETCH_DEFAULT_BRUSH_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImg2imgInpaintSketchDefaultBrushColor(String img2imgInpaintSketchDefaultBrushColor) {
    this.img2imgInpaintSketchDefaultBrushColor = img2imgInpaintSketchDefaultBrushColor;
  }


  public Options returnMask(Object returnMask) {
    this.returnMask = JsonNullable.<Object>of(returnMask);
    
    return this;
  }

   /**
   * For inpainting, include the greyscale mask in results for web
   * @return returnMask
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getReturnMask() {
        return returnMask.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getReturnMask_JsonNullable() {
    return returnMask;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_MASK)
  public void setReturnMask_JsonNullable(JsonNullable<Object> returnMask) {
    this.returnMask = returnMask;
  }

  public void setReturnMask(Object returnMask) {
    this.returnMask = JsonNullable.<Object>of(returnMask);
  }


  public Options returnMaskComposite(Object returnMaskComposite) {
    this.returnMaskComposite = JsonNullable.<Object>of(returnMaskComposite);
    
    return this;
  }

   /**
   * For inpainting, include masked composite in results for web
   * @return returnMaskComposite
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getReturnMaskComposite() {
        return returnMaskComposite.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_MASK_COMPOSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getReturnMaskComposite_JsonNullable() {
    return returnMaskComposite;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_MASK_COMPOSITE)
  public void setReturnMaskComposite_JsonNullable(JsonNullable<Object> returnMaskComposite) {
    this.returnMaskComposite = returnMaskComposite;
  }

  public void setReturnMaskComposite(Object returnMaskComposite) {
    this.returnMaskComposite = JsonNullable.<Object>of(returnMaskComposite);
  }


  public Options crossAttentionOptimization(String crossAttentionOptimization) {
    
    this.crossAttentionOptimization = crossAttentionOptimization;
    return this;
  }

   /**
   * Cross attention optimization
   * @return crossAttentionOptimization
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CROSS_ATTENTION_OPTIMIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCrossAttentionOptimization() {
    return crossAttentionOptimization;
  }


  @JsonProperty(JSON_PROPERTY_CROSS_ATTENTION_OPTIMIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCrossAttentionOptimization(String crossAttentionOptimization) {
    this.crossAttentionOptimization = crossAttentionOptimization;
  }


  public Options sMinUncond(Object sMinUncond) {
    this.sMinUncond = JsonNullable.<Object>of(sMinUncond);
    
    return this;
  }

   /**
   * Negative Guidance minimum sigma
   * @return sMinUncond
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getsMinUncond() {
        return sMinUncond.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_S_MIN_UNCOND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getsMinUncond_JsonNullable() {
    return sMinUncond;
  }
  
  @JsonProperty(JSON_PROPERTY_S_MIN_UNCOND)
  public void setsMinUncond_JsonNullable(JsonNullable<Object> sMinUncond) {
    this.sMinUncond = sMinUncond;
  }

  public void setsMinUncond(Object sMinUncond) {
    this.sMinUncond = JsonNullable.<Object>of(sMinUncond);
  }


  public Options tokenMergingRatio(Object tokenMergingRatio) {
    this.tokenMergingRatio = JsonNullable.<Object>of(tokenMergingRatio);
    
    return this;
  }

   /**
   * Token merging ratio
   * @return tokenMergingRatio
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTokenMergingRatio() {
        return tokenMergingRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOKEN_MERGING_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTokenMergingRatio_JsonNullable() {
    return tokenMergingRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_TOKEN_MERGING_RATIO)
  public void setTokenMergingRatio_JsonNullable(JsonNullable<Object> tokenMergingRatio) {
    this.tokenMergingRatio = tokenMergingRatio;
  }

  public void setTokenMergingRatio(Object tokenMergingRatio) {
    this.tokenMergingRatio = JsonNullable.<Object>of(tokenMergingRatio);
  }


  public Options tokenMergingRatioImg2img(Object tokenMergingRatioImg2img) {
    this.tokenMergingRatioImg2img = JsonNullable.<Object>of(tokenMergingRatioImg2img);
    
    return this;
  }

   /**
   * Token merging ratio for img2img
   * @return tokenMergingRatioImg2img
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTokenMergingRatioImg2img() {
        return tokenMergingRatioImg2img.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOKEN_MERGING_RATIO_IMG2IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTokenMergingRatioImg2img_JsonNullable() {
    return tokenMergingRatioImg2img;
  }
  
  @JsonProperty(JSON_PROPERTY_TOKEN_MERGING_RATIO_IMG2IMG)
  public void setTokenMergingRatioImg2img_JsonNullable(JsonNullable<Object> tokenMergingRatioImg2img) {
    this.tokenMergingRatioImg2img = tokenMergingRatioImg2img;
  }

  public void setTokenMergingRatioImg2img(Object tokenMergingRatioImg2img) {
    this.tokenMergingRatioImg2img = JsonNullable.<Object>of(tokenMergingRatioImg2img);
  }


  public Options tokenMergingRatioHr(Object tokenMergingRatioHr) {
    this.tokenMergingRatioHr = JsonNullable.<Object>of(tokenMergingRatioHr);
    
    return this;
  }

   /**
   * Token merging ratio for high-res pass
   * @return tokenMergingRatioHr
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTokenMergingRatioHr() {
        return tokenMergingRatioHr.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOKEN_MERGING_RATIO_HR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTokenMergingRatioHr_JsonNullable() {
    return tokenMergingRatioHr;
  }
  
  @JsonProperty(JSON_PROPERTY_TOKEN_MERGING_RATIO_HR)
  public void setTokenMergingRatioHr_JsonNullable(JsonNullable<Object> tokenMergingRatioHr) {
    this.tokenMergingRatioHr = tokenMergingRatioHr;
  }

  public void setTokenMergingRatioHr(Object tokenMergingRatioHr) {
    this.tokenMergingRatioHr = JsonNullable.<Object>of(tokenMergingRatioHr);
  }


  public Options padCondUncond(Object padCondUncond) {
    this.padCondUncond = JsonNullable.<Object>of(padCondUncond);
    
    return this;
  }

   /**
   * Pad prompt/negative prompt to be same length
   * @return padCondUncond
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPadCondUncond() {
        return padCondUncond.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAD_COND_UNCOND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPadCondUncond_JsonNullable() {
    return padCondUncond;
  }
  
  @JsonProperty(JSON_PROPERTY_PAD_COND_UNCOND)
  public void setPadCondUncond_JsonNullable(JsonNullable<Object> padCondUncond) {
    this.padCondUncond = padCondUncond;
  }

  public void setPadCondUncond(Object padCondUncond) {
    this.padCondUncond = JsonNullable.<Object>of(padCondUncond);
  }


  public Options persistentCondCache(Boolean persistentCondCache) {
    
    this.persistentCondCache = persistentCondCache;
    return this;
  }

   /**
   * Persistent cond cache
   * @return persistentCondCache
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSISTENT_COND_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPersistentCondCache() {
    return persistentCondCache;
  }


  @JsonProperty(JSON_PROPERTY_PERSISTENT_COND_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersistentCondCache(Boolean persistentCondCache) {
    this.persistentCondCache = persistentCondCache;
  }


  public Options batchCondUncond(Boolean batchCondUncond) {
    
    this.batchCondUncond = batchCondUncond;
    return this;
  }

   /**
   * Batch cond/uncond
   * @return batchCondUncond
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BATCH_COND_UNCOND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBatchCondUncond() {
    return batchCondUncond;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_COND_UNCOND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBatchCondUncond(Boolean batchCondUncond) {
    this.batchCondUncond = batchCondUncond;
  }


  public Options useOldEmphasisImplementation(Object useOldEmphasisImplementation) {
    this.useOldEmphasisImplementation = JsonNullable.<Object>of(useOldEmphasisImplementation);
    
    return this;
  }

   /**
   * Use old emphasis implementation. Can be useful to reproduce old seeds.
   * @return useOldEmphasisImplementation
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUseOldEmphasisImplementation() {
        return useOldEmphasisImplementation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_OLD_EMPHASIS_IMPLEMENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUseOldEmphasisImplementation_JsonNullable() {
    return useOldEmphasisImplementation;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_OLD_EMPHASIS_IMPLEMENTATION)
  public void setUseOldEmphasisImplementation_JsonNullable(JsonNullable<Object> useOldEmphasisImplementation) {
    this.useOldEmphasisImplementation = useOldEmphasisImplementation;
  }

  public void setUseOldEmphasisImplementation(Object useOldEmphasisImplementation) {
    this.useOldEmphasisImplementation = JsonNullable.<Object>of(useOldEmphasisImplementation);
  }


  public Options useOldKarrasSchedulerSigmas(Object useOldKarrasSchedulerSigmas) {
    this.useOldKarrasSchedulerSigmas = JsonNullable.<Object>of(useOldKarrasSchedulerSigmas);
    
    return this;
  }

   /**
   * Use old karras scheduler sigmas (0.1 to 10).
   * @return useOldKarrasSchedulerSigmas
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUseOldKarrasSchedulerSigmas() {
        return useOldKarrasSchedulerSigmas.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_OLD_KARRAS_SCHEDULER_SIGMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUseOldKarrasSchedulerSigmas_JsonNullable() {
    return useOldKarrasSchedulerSigmas;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_OLD_KARRAS_SCHEDULER_SIGMAS)
  public void setUseOldKarrasSchedulerSigmas_JsonNullable(JsonNullable<Object> useOldKarrasSchedulerSigmas) {
    this.useOldKarrasSchedulerSigmas = useOldKarrasSchedulerSigmas;
  }

  public void setUseOldKarrasSchedulerSigmas(Object useOldKarrasSchedulerSigmas) {
    this.useOldKarrasSchedulerSigmas = JsonNullable.<Object>of(useOldKarrasSchedulerSigmas);
  }


  public Options noDpmppSdeBatchDeterminism(Object noDpmppSdeBatchDeterminism) {
    this.noDpmppSdeBatchDeterminism = JsonNullable.<Object>of(noDpmppSdeBatchDeterminism);
    
    return this;
  }

   /**
   * Do not make DPM++ SDE deterministic across different batch sizes.
   * @return noDpmppSdeBatchDeterminism
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getNoDpmppSdeBatchDeterminism() {
        return noDpmppSdeBatchDeterminism.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NO_DPMPP_SDE_BATCH_DETERMINISM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getNoDpmppSdeBatchDeterminism_JsonNullable() {
    return noDpmppSdeBatchDeterminism;
  }
  
  @JsonProperty(JSON_PROPERTY_NO_DPMPP_SDE_BATCH_DETERMINISM)
  public void setNoDpmppSdeBatchDeterminism_JsonNullable(JsonNullable<Object> noDpmppSdeBatchDeterminism) {
    this.noDpmppSdeBatchDeterminism = noDpmppSdeBatchDeterminism;
  }

  public void setNoDpmppSdeBatchDeterminism(Object noDpmppSdeBatchDeterminism) {
    this.noDpmppSdeBatchDeterminism = JsonNullable.<Object>of(noDpmppSdeBatchDeterminism);
  }


  public Options useOldHiresFixWidthHeight(Object useOldHiresFixWidthHeight) {
    this.useOldHiresFixWidthHeight = JsonNullable.<Object>of(useOldHiresFixWidthHeight);
    
    return this;
  }

   /**
   * For hires fix, use width/height sliders to set final resolution rather than first pass (disables Upscale by, Resize width/height to).
   * @return useOldHiresFixWidthHeight
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUseOldHiresFixWidthHeight() {
        return useOldHiresFixWidthHeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_OLD_HIRES_FIX_WIDTH_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUseOldHiresFixWidthHeight_JsonNullable() {
    return useOldHiresFixWidthHeight;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_OLD_HIRES_FIX_WIDTH_HEIGHT)
  public void setUseOldHiresFixWidthHeight_JsonNullable(JsonNullable<Object> useOldHiresFixWidthHeight) {
    this.useOldHiresFixWidthHeight = useOldHiresFixWidthHeight;
  }

  public void setUseOldHiresFixWidthHeight(Object useOldHiresFixWidthHeight) {
    this.useOldHiresFixWidthHeight = JsonNullable.<Object>of(useOldHiresFixWidthHeight);
  }


  public Options dontFixSecondOrderSamplersSchedule(Object dontFixSecondOrderSamplersSchedule) {
    this.dontFixSecondOrderSamplersSchedule = JsonNullable.<Object>of(dontFixSecondOrderSamplersSchedule);
    
    return this;
  }

   /**
   * Do not fix prompt schedule for second order samplers.
   * @return dontFixSecondOrderSamplersSchedule
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDontFixSecondOrderSamplersSchedule() {
        return dontFixSecondOrderSamplersSchedule.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DONT_FIX_SECOND_ORDER_SAMPLERS_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDontFixSecondOrderSamplersSchedule_JsonNullable() {
    return dontFixSecondOrderSamplersSchedule;
  }
  
  @JsonProperty(JSON_PROPERTY_DONT_FIX_SECOND_ORDER_SAMPLERS_SCHEDULE)
  public void setDontFixSecondOrderSamplersSchedule_JsonNullable(JsonNullable<Object> dontFixSecondOrderSamplersSchedule) {
    this.dontFixSecondOrderSamplersSchedule = dontFixSecondOrderSamplersSchedule;
  }

  public void setDontFixSecondOrderSamplersSchedule(Object dontFixSecondOrderSamplersSchedule) {
    this.dontFixSecondOrderSamplersSchedule = JsonNullable.<Object>of(dontFixSecondOrderSamplersSchedule);
  }


  public Options hiresFixUseFirstpassConds(Object hiresFixUseFirstpassConds) {
    this.hiresFixUseFirstpassConds = JsonNullable.<Object>of(hiresFixUseFirstpassConds);
    
    return this;
  }

   /**
   * For hires fix, calculate conds of second pass using extra networks of first pass.
   * @return hiresFixUseFirstpassConds
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getHiresFixUseFirstpassConds() {
        return hiresFixUseFirstpassConds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIRES_FIX_USE_FIRSTPASS_CONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHiresFixUseFirstpassConds_JsonNullable() {
    return hiresFixUseFirstpassConds;
  }
  
  @JsonProperty(JSON_PROPERTY_HIRES_FIX_USE_FIRSTPASS_CONDS)
  public void setHiresFixUseFirstpassConds_JsonNullable(JsonNullable<Object> hiresFixUseFirstpassConds) {
    this.hiresFixUseFirstpassConds = hiresFixUseFirstpassConds;
  }

  public void setHiresFixUseFirstpassConds(Object hiresFixUseFirstpassConds) {
    this.hiresFixUseFirstpassConds = JsonNullable.<Object>of(hiresFixUseFirstpassConds);
  }


  public Options useOldScheduling(Object useOldScheduling) {
    this.useOldScheduling = JsonNullable.<Object>of(useOldScheduling);
    
    return this;
  }

   /**
   * Use old prompt editing timelines.
   * @return useOldScheduling
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUseOldScheduling() {
        return useOldScheduling.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_OLD_SCHEDULING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUseOldScheduling_JsonNullable() {
    return useOldScheduling;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_OLD_SCHEDULING)
  public void setUseOldScheduling_JsonNullable(JsonNullable<Object> useOldScheduling) {
    this.useOldScheduling = useOldScheduling;
  }

  public void setUseOldScheduling(Object useOldScheduling) {
    this.useOldScheduling = JsonNullable.<Object>of(useOldScheduling);
  }


  public Options interrogateKeepModelsInMemory(Object interrogateKeepModelsInMemory) {
    this.interrogateKeepModelsInMemory = JsonNullable.<Object>of(interrogateKeepModelsInMemory);
    
    return this;
  }

   /**
   * Keep models in VRAM
   * @return interrogateKeepModelsInMemory
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getInterrogateKeepModelsInMemory() {
        return interrogateKeepModelsInMemory.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERROGATE_KEEP_MODELS_IN_MEMORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInterrogateKeepModelsInMemory_JsonNullable() {
    return interrogateKeepModelsInMemory;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERROGATE_KEEP_MODELS_IN_MEMORY)
  public void setInterrogateKeepModelsInMemory_JsonNullable(JsonNullable<Object> interrogateKeepModelsInMemory) {
    this.interrogateKeepModelsInMemory = interrogateKeepModelsInMemory;
  }

  public void setInterrogateKeepModelsInMemory(Object interrogateKeepModelsInMemory) {
    this.interrogateKeepModelsInMemory = JsonNullable.<Object>of(interrogateKeepModelsInMemory);
  }


  public Options interrogateReturnRanks(Object interrogateReturnRanks) {
    this.interrogateReturnRanks = JsonNullable.<Object>of(interrogateReturnRanks);
    
    return this;
  }

   /**
   * Include ranks of model tags matches in results.
   * @return interrogateReturnRanks
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getInterrogateReturnRanks() {
        return interrogateReturnRanks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERROGATE_RETURN_RANKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInterrogateReturnRanks_JsonNullable() {
    return interrogateReturnRanks;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERROGATE_RETURN_RANKS)
  public void setInterrogateReturnRanks_JsonNullable(JsonNullable<Object> interrogateReturnRanks) {
    this.interrogateReturnRanks = interrogateReturnRanks;
  }

  public void setInterrogateReturnRanks(Object interrogateReturnRanks) {
    this.interrogateReturnRanks = JsonNullable.<Object>of(interrogateReturnRanks);
  }


  public Options interrogateClipNumBeams(BigDecimal interrogateClipNumBeams) {
    
    this.interrogateClipNumBeams = interrogateClipNumBeams;
    return this;
  }

   /**
   * BLIP: num_beams
   * @return interrogateClipNumBeams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_NUM_BEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterrogateClipNumBeams() {
    return interrogateClipNumBeams;
  }


  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_NUM_BEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterrogateClipNumBeams(BigDecimal interrogateClipNumBeams) {
    this.interrogateClipNumBeams = interrogateClipNumBeams;
  }


  public Options interrogateClipMinLength(BigDecimal interrogateClipMinLength) {
    
    this.interrogateClipMinLength = interrogateClipMinLength;
    return this;
  }

   /**
   * BLIP: minimum description length
   * @return interrogateClipMinLength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_MIN_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterrogateClipMinLength() {
    return interrogateClipMinLength;
  }


  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_MIN_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterrogateClipMinLength(BigDecimal interrogateClipMinLength) {
    this.interrogateClipMinLength = interrogateClipMinLength;
  }


  public Options interrogateClipMaxLength(BigDecimal interrogateClipMaxLength) {
    
    this.interrogateClipMaxLength = interrogateClipMaxLength;
    return this;
  }

   /**
   * BLIP: maximum description length
   * @return interrogateClipMaxLength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_MAX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterrogateClipMaxLength() {
    return interrogateClipMaxLength;
  }


  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_MAX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterrogateClipMaxLength(BigDecimal interrogateClipMaxLength) {
    this.interrogateClipMaxLength = interrogateClipMaxLength;
  }


  public Options interrogateClipDictLimit(BigDecimal interrogateClipDictLimit) {
    
    this.interrogateClipDictLimit = interrogateClipDictLimit;
    return this;
  }

   /**
   * CLIP: maximum number of lines in text file
   * @return interrogateClipDictLimit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_DICT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterrogateClipDictLimit() {
    return interrogateClipDictLimit;
  }


  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_DICT_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterrogateClipDictLimit(BigDecimal interrogateClipDictLimit) {
    this.interrogateClipDictLimit = interrogateClipDictLimit;
  }


  public Options interrogateClipSkipCategories(Object interrogateClipSkipCategories) {
    this.interrogateClipSkipCategories = JsonNullable.<Object>of(interrogateClipSkipCategories);
    
    return this;
  }

   /**
   * CLIP: skip inquire categories
   * @return interrogateClipSkipCategories
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getInterrogateClipSkipCategories() {
        return interrogateClipSkipCategories.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_SKIP_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInterrogateClipSkipCategories_JsonNullable() {
    return interrogateClipSkipCategories;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERROGATE_CLIP_SKIP_CATEGORIES)
  public void setInterrogateClipSkipCategories_JsonNullable(JsonNullable<Object> interrogateClipSkipCategories) {
    this.interrogateClipSkipCategories = interrogateClipSkipCategories;
  }

  public void setInterrogateClipSkipCategories(Object interrogateClipSkipCategories) {
    this.interrogateClipSkipCategories = JsonNullable.<Object>of(interrogateClipSkipCategories);
  }


  public Options interrogateDeepbooruScoreThreshold(BigDecimal interrogateDeepbooruScoreThreshold) {
    
    this.interrogateDeepbooruScoreThreshold = interrogateDeepbooruScoreThreshold;
    return this;
  }

   /**
   * deepbooru: score threshold
   * @return interrogateDeepbooruScoreThreshold
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERROGATE_DEEPBOORU_SCORE_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterrogateDeepbooruScoreThreshold() {
    return interrogateDeepbooruScoreThreshold;
  }


  @JsonProperty(JSON_PROPERTY_INTERROGATE_DEEPBOORU_SCORE_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterrogateDeepbooruScoreThreshold(BigDecimal interrogateDeepbooruScoreThreshold) {
    this.interrogateDeepbooruScoreThreshold = interrogateDeepbooruScoreThreshold;
  }


  public Options deepbooruSortAlpha(Boolean deepbooruSortAlpha) {
    
    this.deepbooruSortAlpha = deepbooruSortAlpha;
    return this;
  }

   /**
   * deepbooru: sort tags alphabetically
   * @return deepbooruSortAlpha
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEEPBOORU_SORT_ALPHA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeepbooruSortAlpha() {
    return deepbooruSortAlpha;
  }


  @JsonProperty(JSON_PROPERTY_DEEPBOORU_SORT_ALPHA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeepbooruSortAlpha(Boolean deepbooruSortAlpha) {
    this.deepbooruSortAlpha = deepbooruSortAlpha;
  }


  public Options deepbooruUseSpaces(Boolean deepbooruUseSpaces) {
    
    this.deepbooruUseSpaces = deepbooruUseSpaces;
    return this;
  }

   /**
   * deepbooru: use spaces in tags
   * @return deepbooruUseSpaces
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEEPBOORU_USE_SPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeepbooruUseSpaces() {
    return deepbooruUseSpaces;
  }


  @JsonProperty(JSON_PROPERTY_DEEPBOORU_USE_SPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeepbooruUseSpaces(Boolean deepbooruUseSpaces) {
    this.deepbooruUseSpaces = deepbooruUseSpaces;
  }


  public Options deepbooruEscape(Boolean deepbooruEscape) {
    
    this.deepbooruEscape = deepbooruEscape;
    return this;
  }

   /**
   * deepbooru: escape (\\) brackets
   * @return deepbooruEscape
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEEPBOORU_ESCAPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeepbooruEscape() {
    return deepbooruEscape;
  }


  @JsonProperty(JSON_PROPERTY_DEEPBOORU_ESCAPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeepbooruEscape(Boolean deepbooruEscape) {
    this.deepbooruEscape = deepbooruEscape;
  }


  public Options deepbooruFilterTags(Object deepbooruFilterTags) {
    this.deepbooruFilterTags = JsonNullable.<Object>of(deepbooruFilterTags);
    
    return this;
  }

   /**
   * deepbooru: filter out those tags
   * @return deepbooruFilterTags
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDeepbooruFilterTags() {
        return deepbooruFilterTags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEEPBOORU_FILTER_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDeepbooruFilterTags_JsonNullable() {
    return deepbooruFilterTags;
  }
  
  @JsonProperty(JSON_PROPERTY_DEEPBOORU_FILTER_TAGS)
  public void setDeepbooruFilterTags_JsonNullable(JsonNullable<Object> deepbooruFilterTags) {
    this.deepbooruFilterTags = deepbooruFilterTags;
  }

  public void setDeepbooruFilterTags(Object deepbooruFilterTags) {
    this.deepbooruFilterTags = JsonNullable.<Object>of(deepbooruFilterTags);
  }


  public Options extraNetworksShowHiddenDirectories(Boolean extraNetworksShowHiddenDirectories) {
    
    this.extraNetworksShowHiddenDirectories = extraNetworksShowHiddenDirectories;
    return this;
  }

   /**
   * Show hidden directories
   * @return extraNetworksShowHiddenDirectories
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_SHOW_HIDDEN_DIRECTORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExtraNetworksShowHiddenDirectories() {
    return extraNetworksShowHiddenDirectories;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_SHOW_HIDDEN_DIRECTORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraNetworksShowHiddenDirectories(Boolean extraNetworksShowHiddenDirectories) {
    this.extraNetworksShowHiddenDirectories = extraNetworksShowHiddenDirectories;
  }


  public Options extraNetworksHiddenModels(String extraNetworksHiddenModels) {
    
    this.extraNetworksHiddenModels = extraNetworksHiddenModels;
    return this;
  }

   /**
   * Show cards for models in hidden directories
   * @return extraNetworksHiddenModels
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_HIDDEN_MODELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtraNetworksHiddenModels() {
    return extraNetworksHiddenModels;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_HIDDEN_MODELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraNetworksHiddenModels(String extraNetworksHiddenModels) {
    this.extraNetworksHiddenModels = extraNetworksHiddenModels;
  }


  public Options extraNetworksDefaultMultiplier(BigDecimal extraNetworksDefaultMultiplier) {
    
    this.extraNetworksDefaultMultiplier = extraNetworksDefaultMultiplier;
    return this;
  }

   /**
   * Default multiplier for extra networks
   * @return extraNetworksDefaultMultiplier
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_DEFAULT_MULTIPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getExtraNetworksDefaultMultiplier() {
    return extraNetworksDefaultMultiplier;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_DEFAULT_MULTIPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraNetworksDefaultMultiplier(BigDecimal extraNetworksDefaultMultiplier) {
    this.extraNetworksDefaultMultiplier = extraNetworksDefaultMultiplier;
  }


  public Options extraNetworksCardWidth(Object extraNetworksCardWidth) {
    this.extraNetworksCardWidth = JsonNullable.<Object>of(extraNetworksCardWidth);
    
    return this;
  }

   /**
   * Card width for Extra Networks
   * @return extraNetworksCardWidth
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getExtraNetworksCardWidth() {
        return extraNetworksCardWidth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtraNetworksCardWidth_JsonNullable() {
    return extraNetworksCardWidth;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_WIDTH)
  public void setExtraNetworksCardWidth_JsonNullable(JsonNullable<Object> extraNetworksCardWidth) {
    this.extraNetworksCardWidth = extraNetworksCardWidth;
  }

  public void setExtraNetworksCardWidth(Object extraNetworksCardWidth) {
    this.extraNetworksCardWidth = JsonNullable.<Object>of(extraNetworksCardWidth);
  }


  public Options extraNetworksCardHeight(Object extraNetworksCardHeight) {
    this.extraNetworksCardHeight = JsonNullable.<Object>of(extraNetworksCardHeight);
    
    return this;
  }

   /**
   * Card height for Extra Networks
   * @return extraNetworksCardHeight
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getExtraNetworksCardHeight() {
        return extraNetworksCardHeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtraNetworksCardHeight_JsonNullable() {
    return extraNetworksCardHeight;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_HEIGHT)
  public void setExtraNetworksCardHeight_JsonNullable(JsonNullable<Object> extraNetworksCardHeight) {
    this.extraNetworksCardHeight = extraNetworksCardHeight;
  }

  public void setExtraNetworksCardHeight(Object extraNetworksCardHeight) {
    this.extraNetworksCardHeight = JsonNullable.<Object>of(extraNetworksCardHeight);
  }


  public Options extraNetworksCardTextScale(BigDecimal extraNetworksCardTextScale) {
    
    this.extraNetworksCardTextScale = extraNetworksCardTextScale;
    return this;
  }

   /**
   * Card text scale
   * @return extraNetworksCardTextScale
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_TEXT_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getExtraNetworksCardTextScale() {
    return extraNetworksCardTextScale;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_TEXT_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraNetworksCardTextScale(BigDecimal extraNetworksCardTextScale) {
    this.extraNetworksCardTextScale = extraNetworksCardTextScale;
  }


  public Options extraNetworksCardShowDesc(Boolean extraNetworksCardShowDesc) {
    
    this.extraNetworksCardShowDesc = extraNetworksCardShowDesc;
    return this;
  }

   /**
   * Show description on card
   * @return extraNetworksCardShowDesc
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_SHOW_DESC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExtraNetworksCardShowDesc() {
    return extraNetworksCardShowDesc;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_CARD_SHOW_DESC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraNetworksCardShowDesc(Boolean extraNetworksCardShowDesc) {
    this.extraNetworksCardShowDesc = extraNetworksCardShowDesc;
  }


  public Options extraNetworksAddTextSeparator(String extraNetworksAddTextSeparator) {
    
    this.extraNetworksAddTextSeparator = extraNetworksAddTextSeparator;
    return this;
  }

   /**
   * Extra networks separator
   * @return extraNetworksAddTextSeparator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_ADD_TEXT_SEPARATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtraNetworksAddTextSeparator() {
    return extraNetworksAddTextSeparator;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_NETWORKS_ADD_TEXT_SEPARATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraNetworksAddTextSeparator(String extraNetworksAddTextSeparator) {
    this.extraNetworksAddTextSeparator = extraNetworksAddTextSeparator;
  }


  public Options uiExtraNetworksTabReorder(Object uiExtraNetworksTabReorder) {
    this.uiExtraNetworksTabReorder = JsonNullable.<Object>of(uiExtraNetworksTabReorder);
    
    return this;
  }

   /**
   * Extra networks tab order
   * @return uiExtraNetworksTabReorder
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUiExtraNetworksTabReorder() {
        return uiExtraNetworksTabReorder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UI_EXTRA_NETWORKS_TAB_REORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUiExtraNetworksTabReorder_JsonNullable() {
    return uiExtraNetworksTabReorder;
  }
  
  @JsonProperty(JSON_PROPERTY_UI_EXTRA_NETWORKS_TAB_REORDER)
  public void setUiExtraNetworksTabReorder_JsonNullable(JsonNullable<Object> uiExtraNetworksTabReorder) {
    this.uiExtraNetworksTabReorder = uiExtraNetworksTabReorder;
  }

  public void setUiExtraNetworksTabReorder(Object uiExtraNetworksTabReorder) {
    this.uiExtraNetworksTabReorder = JsonNullable.<Object>of(uiExtraNetworksTabReorder);
  }


  public Options textualInversionPrintAtLoad(Object textualInversionPrintAtLoad) {
    this.textualInversionPrintAtLoad = JsonNullable.<Object>of(textualInversionPrintAtLoad);
    
    return this;
  }

   /**
   * Print a list of Textual Inversion embeddings when loading model
   * @return textualInversionPrintAtLoad
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getTextualInversionPrintAtLoad() {
        return textualInversionPrintAtLoad.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEXTUAL_INVERSION_PRINT_AT_LOAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTextualInversionPrintAtLoad_JsonNullable() {
    return textualInversionPrintAtLoad;
  }
  
  @JsonProperty(JSON_PROPERTY_TEXTUAL_INVERSION_PRINT_AT_LOAD)
  public void setTextualInversionPrintAtLoad_JsonNullable(JsonNullable<Object> textualInversionPrintAtLoad) {
    this.textualInversionPrintAtLoad = textualInversionPrintAtLoad;
  }

  public void setTextualInversionPrintAtLoad(Object textualInversionPrintAtLoad) {
    this.textualInversionPrintAtLoad = JsonNullable.<Object>of(textualInversionPrintAtLoad);
  }


  public Options textualInversionAddHashesToInfotext(Boolean textualInversionAddHashesToInfotext) {
    
    this.textualInversionAddHashesToInfotext = textualInversionAddHashesToInfotext;
    return this;
  }

   /**
   * Add Textual Inversion hashes to infotext
   * @return textualInversionAddHashesToInfotext
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXTUAL_INVERSION_ADD_HASHES_TO_INFOTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTextualInversionAddHashesToInfotext() {
    return textualInversionAddHashesToInfotext;
  }


  @JsonProperty(JSON_PROPERTY_TEXTUAL_INVERSION_ADD_HASHES_TO_INFOTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextualInversionAddHashesToInfotext(Boolean textualInversionAddHashesToInfotext) {
    this.textualInversionAddHashesToInfotext = textualInversionAddHashesToInfotext;
  }


  public Options sdHypernetwork(String sdHypernetwork) {
    
    this.sdHypernetwork = sdHypernetwork;
    return this;
  }

   /**
   * Add hypernetwork to prompt
   * @return sdHypernetwork
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_HYPERNETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdHypernetwork() {
    return sdHypernetwork;
  }


  @JsonProperty(JSON_PROPERTY_SD_HYPERNETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdHypernetwork(String sdHypernetwork) {
    this.sdHypernetwork = sdHypernetwork;
  }


  public Options localization(String localization) {
    
    this.localization = localization;
    return this;
  }

   /**
   * Localization
   * @return localization
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocalization() {
    return localization;
  }


  @JsonProperty(JSON_PROPERTY_LOCALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalization(String localization) {
    this.localization = localization;
  }


  public Options gradioTheme(String gradioTheme) {
    
    this.gradioTheme = gradioTheme;
    return this;
  }

   /**
   * Gradio theme
   * @return gradioTheme
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGradioTheme() {
    return gradioTheme;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioTheme(String gradioTheme) {
    this.gradioTheme = gradioTheme;
  }


  public Options gradioThemesCache(Boolean gradioThemesCache) {
    
    this.gradioThemesCache = gradioThemesCache;
    return this;
  }

   /**
   * Cache gradio themes locally
   * @return gradioThemesCache
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_THEMES_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGradioThemesCache() {
    return gradioThemesCache;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_THEMES_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioThemesCache(Boolean gradioThemesCache) {
    this.gradioThemesCache = gradioThemesCache;
  }


  public Options galleryHeight(Object galleryHeight) {
    this.galleryHeight = JsonNullable.<Object>of(galleryHeight);
    
    return this;
  }

   /**
   * Gallery height
   * @return galleryHeight
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getGalleryHeight() {
        return galleryHeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GALLERY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getGalleryHeight_JsonNullable() {
    return galleryHeight;
  }
  
  @JsonProperty(JSON_PROPERTY_GALLERY_HEIGHT)
  public void setGalleryHeight_JsonNullable(JsonNullable<Object> galleryHeight) {
    this.galleryHeight = galleryHeight;
  }

  public void setGalleryHeight(Object galleryHeight) {
    this.galleryHeight = JsonNullable.<Object>of(galleryHeight);
  }


  public Options returnGrid(Boolean returnGrid) {
    
    this.returnGrid = returnGrid;
    return this;
  }

   /**
   * Show grid in results for web
   * @return returnGrid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETURN_GRID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReturnGrid() {
    return returnGrid;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_GRID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnGrid(Boolean returnGrid) {
    this.returnGrid = returnGrid;
  }


  public Options doNotShowImages(Object doNotShowImages) {
    this.doNotShowImages = JsonNullable.<Object>of(doNotShowImages);
    
    return this;
  }

   /**
   * Do not show any images in results for web
   * @return doNotShowImages
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDoNotShowImages() {
        return doNotShowImages.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DO_NOT_SHOW_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDoNotShowImages_JsonNullable() {
    return doNotShowImages;
  }
  
  @JsonProperty(JSON_PROPERTY_DO_NOT_SHOW_IMAGES)
  public void setDoNotShowImages_JsonNullable(JsonNullable<Object> doNotShowImages) {
    this.doNotShowImages = doNotShowImages;
  }

  public void setDoNotShowImages(Object doNotShowImages) {
    this.doNotShowImages = JsonNullable.<Object>of(doNotShowImages);
  }


  public Options sendSeed(Boolean sendSeed) {
    
    this.sendSeed = sendSeed;
    return this;
  }

   /**
   * Send seed when sending prompt or image to other interface
   * @return sendSeed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendSeed() {
    return sendSeed;
  }


  @JsonProperty(JSON_PROPERTY_SEND_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendSeed(Boolean sendSeed) {
    this.sendSeed = sendSeed;
  }


  public Options sendSize(Boolean sendSize) {
    
    this.sendSize = sendSize;
    return this;
  }

   /**
   * Send size when sending prompt or image to another interface
   * @return sendSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendSize() {
    return sendSize;
  }


  @JsonProperty(JSON_PROPERTY_SEND_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendSize(Boolean sendSize) {
    this.sendSize = sendSize;
  }


  public Options jsModalLightbox(Boolean jsModalLightbox) {
    
    this.jsModalLightbox = jsModalLightbox;
    return this;
  }

   /**
   * Enable full page image viewer
   * @return jsModalLightbox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getJsModalLightbox() {
    return jsModalLightbox;
  }


  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJsModalLightbox(Boolean jsModalLightbox) {
    this.jsModalLightbox = jsModalLightbox;
  }


  public Options jsModalLightboxInitiallyZoomed(Boolean jsModalLightboxInitiallyZoomed) {
    
    this.jsModalLightboxInitiallyZoomed = jsModalLightboxInitiallyZoomed;
    return this;
  }

   /**
   * Show images zoomed in by default in full page image viewer
   * @return jsModalLightboxInitiallyZoomed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX_INITIALLY_ZOOMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getJsModalLightboxInitiallyZoomed() {
    return jsModalLightboxInitiallyZoomed;
  }


  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX_INITIALLY_ZOOMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJsModalLightboxInitiallyZoomed(Boolean jsModalLightboxInitiallyZoomed) {
    this.jsModalLightboxInitiallyZoomed = jsModalLightboxInitiallyZoomed;
  }


  public Options jsModalLightboxGamepad(Object jsModalLightboxGamepad) {
    this.jsModalLightboxGamepad = JsonNullable.<Object>of(jsModalLightboxGamepad);
    
    return this;
  }

   /**
   * Navigate image viewer with gamepad
   * @return jsModalLightboxGamepad
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getJsModalLightboxGamepad() {
        return jsModalLightboxGamepad.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getJsModalLightboxGamepad_JsonNullable() {
    return jsModalLightboxGamepad;
  }
  
  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD)
  public void setJsModalLightboxGamepad_JsonNullable(JsonNullable<Object> jsModalLightboxGamepad) {
    this.jsModalLightboxGamepad = jsModalLightboxGamepad;
  }

  public void setJsModalLightboxGamepad(Object jsModalLightboxGamepad) {
    this.jsModalLightboxGamepad = JsonNullable.<Object>of(jsModalLightboxGamepad);
  }


  public Options jsModalLightboxGamepadRepeat(BigDecimal jsModalLightboxGamepadRepeat) {
    
    this.jsModalLightboxGamepadRepeat = jsModalLightboxGamepadRepeat;
    return this;
  }

   /**
   * Gamepad repeat period, in milliseconds
   * @return jsModalLightboxGamepadRepeat
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD_REPEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getJsModalLightboxGamepadRepeat() {
    return jsModalLightboxGamepadRepeat;
  }


  @JsonProperty(JSON_PROPERTY_JS_MODAL_LIGHTBOX_GAMEPAD_REPEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJsModalLightboxGamepadRepeat(BigDecimal jsModalLightboxGamepadRepeat) {
    this.jsModalLightboxGamepadRepeat = jsModalLightboxGamepadRepeat;
  }


  public Options showProgressInTitle(Boolean showProgressInTitle) {
    
    this.showProgressInTitle = showProgressInTitle;
    return this;
  }

   /**
   * Show generation progress in window title.
   * @return showProgressInTitle
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_IN_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowProgressInTitle() {
    return showProgressInTitle;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_IN_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowProgressInTitle(Boolean showProgressInTitle) {
    this.showProgressInTitle = showProgressInTitle;
  }


  public Options samplersInDropdown(Boolean samplersInDropdown) {
    
    this.samplersInDropdown = samplersInDropdown;
    return this;
  }

   /**
   * Use dropdown for sampler selection instead of radio group
   * @return samplersInDropdown
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAMPLERS_IN_DROPDOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSamplersInDropdown() {
    return samplersInDropdown;
  }


  @JsonProperty(JSON_PROPERTY_SAMPLERS_IN_DROPDOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSamplersInDropdown(Boolean samplersInDropdown) {
    this.samplersInDropdown = samplersInDropdown;
  }


  public Options dimensionsAndBatchTogether(Boolean dimensionsAndBatchTogether) {
    
    this.dimensionsAndBatchTogether = dimensionsAndBatchTogether;
    return this;
  }

   /**
   * Show Width/Height and Batch sliders in same row
   * @return dimensionsAndBatchTogether
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONS_AND_BATCH_TOGETHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDimensionsAndBatchTogether() {
    return dimensionsAndBatchTogether;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS_AND_BATCH_TOGETHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionsAndBatchTogether(Boolean dimensionsAndBatchTogether) {
    this.dimensionsAndBatchTogether = dimensionsAndBatchTogether;
  }


  public Options keyeditPrecisionAttention(BigDecimal keyeditPrecisionAttention) {
    
    this.keyeditPrecisionAttention = keyeditPrecisionAttention;
    return this;
  }

   /**
   * Ctrl+up/down precision when editing (attention:1.1)
   * @return keyeditPrecisionAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYEDIT_PRECISION_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getKeyeditPrecisionAttention() {
    return keyeditPrecisionAttention;
  }


  @JsonProperty(JSON_PROPERTY_KEYEDIT_PRECISION_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyeditPrecisionAttention(BigDecimal keyeditPrecisionAttention) {
    this.keyeditPrecisionAttention = keyeditPrecisionAttention;
  }


  public Options keyeditPrecisionExtra(BigDecimal keyeditPrecisionExtra) {
    
    this.keyeditPrecisionExtra = keyeditPrecisionExtra;
    return this;
  }

   /**
   * Ctrl+up/down precision when editing &lt;extra networks:0.9&gt;
   * @return keyeditPrecisionExtra
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYEDIT_PRECISION_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getKeyeditPrecisionExtra() {
    return keyeditPrecisionExtra;
  }


  @JsonProperty(JSON_PROPERTY_KEYEDIT_PRECISION_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyeditPrecisionExtra(BigDecimal keyeditPrecisionExtra) {
    this.keyeditPrecisionExtra = keyeditPrecisionExtra;
  }


  public Options keyeditDelimiters(String keyeditDelimiters) {
    
    this.keyeditDelimiters = keyeditDelimiters;
    return this;
  }

   /**
   * Ctrl+up/down word delimiters
   * @return keyeditDelimiters
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYEDIT_DELIMITERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeyeditDelimiters() {
    return keyeditDelimiters;
  }


  @JsonProperty(JSON_PROPERTY_KEYEDIT_DELIMITERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyeditDelimiters(String keyeditDelimiters) {
    this.keyeditDelimiters = keyeditDelimiters;
  }


  public Options keyeditMove(Boolean keyeditMove) {
    
    this.keyeditMove = keyeditMove;
    return this;
  }

   /**
   * Alt+left/right moves prompt elements
   * @return keyeditMove
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYEDIT_MOVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKeyeditMove() {
    return keyeditMove;
  }


  @JsonProperty(JSON_PROPERTY_KEYEDIT_MOVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyeditMove(Boolean keyeditMove) {
    this.keyeditMove = keyeditMove;
  }


  public Options quicksettingsList(List<Object> quicksettingsList) {
    
    this.quicksettingsList = quicksettingsList;
    return this;
  }

  public Options addQuicksettingsListItem(Object quicksettingsListItem) {
    if (this.quicksettingsList == null) {
      this.quicksettingsList = new ArrayList<>(Arrays.asList(sd_model_checkpoint));
    }
    this.quicksettingsList.add(quicksettingsListItem);
    return this;
  }

   /**
   * Quicksettings list
   * @return quicksettingsList
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUICKSETTINGS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getQuicksettingsList() {
    return quicksettingsList;
  }


  @JsonProperty(JSON_PROPERTY_QUICKSETTINGS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuicksettingsList(List<Object> quicksettingsList) {
    this.quicksettingsList = quicksettingsList;
  }


  public Options uiTabOrder(Object uiTabOrder) {
    this.uiTabOrder = JsonNullable.<Object>of(uiTabOrder);
    
    return this;
  }

   /**
   * UI tab order
   * @return uiTabOrder
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUiTabOrder() {
        return uiTabOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UI_TAB_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUiTabOrder_JsonNullable() {
    return uiTabOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_UI_TAB_ORDER)
  public void setUiTabOrder_JsonNullable(JsonNullable<Object> uiTabOrder) {
    this.uiTabOrder = uiTabOrder;
  }

  public void setUiTabOrder(Object uiTabOrder) {
    this.uiTabOrder = JsonNullable.<Object>of(uiTabOrder);
  }


  public Options hiddenTabs(Object hiddenTabs) {
    this.hiddenTabs = JsonNullable.<Object>of(hiddenTabs);
    
    return this;
  }

   /**
   * Hidden UI tabs
   * @return hiddenTabs
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getHiddenTabs() {
        return hiddenTabs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIDDEN_TABS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHiddenTabs_JsonNullable() {
    return hiddenTabs;
  }
  
  @JsonProperty(JSON_PROPERTY_HIDDEN_TABS)
  public void setHiddenTabs_JsonNullable(JsonNullable<Object> hiddenTabs) {
    this.hiddenTabs = hiddenTabs;
  }

  public void setHiddenTabs(Object hiddenTabs) {
    this.hiddenTabs = JsonNullable.<Object>of(hiddenTabs);
  }


  public Options uiReorderList(Object uiReorderList) {
    this.uiReorderList = JsonNullable.<Object>of(uiReorderList);
    
    return this;
  }

   /**
   * txt2img/img2img UI item order
   * @return uiReorderList
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getUiReorderList() {
        return uiReorderList.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UI_REORDER_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getUiReorderList_JsonNullable() {
    return uiReorderList;
  }
  
  @JsonProperty(JSON_PROPERTY_UI_REORDER_LIST)
  public void setUiReorderList_JsonNullable(JsonNullable<Object> uiReorderList) {
    this.uiReorderList = uiReorderList;
  }

  public void setUiReorderList(Object uiReorderList) {
    this.uiReorderList = JsonNullable.<Object>of(uiReorderList);
  }


  public Options hiresFixShowSampler(Object hiresFixShowSampler) {
    this.hiresFixShowSampler = JsonNullable.<Object>of(hiresFixShowSampler);
    
    return this;
  }

   /**
   * Hires fix: show hires checkpoint and sampler selection
   * @return hiresFixShowSampler
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getHiresFixShowSampler() {
        return hiresFixShowSampler.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIRES_FIX_SHOW_SAMPLER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHiresFixShowSampler_JsonNullable() {
    return hiresFixShowSampler;
  }
  
  @JsonProperty(JSON_PROPERTY_HIRES_FIX_SHOW_SAMPLER)
  public void setHiresFixShowSampler_JsonNullable(JsonNullable<Object> hiresFixShowSampler) {
    this.hiresFixShowSampler = hiresFixShowSampler;
  }

  public void setHiresFixShowSampler(Object hiresFixShowSampler) {
    this.hiresFixShowSampler = JsonNullable.<Object>of(hiresFixShowSampler);
  }


  public Options hiresFixShowPrompts(Object hiresFixShowPrompts) {
    this.hiresFixShowPrompts = JsonNullable.<Object>of(hiresFixShowPrompts);
    
    return this;
  }

   /**
   * Hires fix: show hires prompt and negative prompt
   * @return hiresFixShowPrompts
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getHiresFixShowPrompts() {
        return hiresFixShowPrompts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIRES_FIX_SHOW_PROMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHiresFixShowPrompts_JsonNullable() {
    return hiresFixShowPrompts;
  }
  
  @JsonProperty(JSON_PROPERTY_HIRES_FIX_SHOW_PROMPTS)
  public void setHiresFixShowPrompts_JsonNullable(JsonNullable<Object> hiresFixShowPrompts) {
    this.hiresFixShowPrompts = hiresFixShowPrompts;
  }

  public void setHiresFixShowPrompts(Object hiresFixShowPrompts) {
    this.hiresFixShowPrompts = JsonNullable.<Object>of(hiresFixShowPrompts);
  }


  public Options disableTokenCounters(Object disableTokenCounters) {
    this.disableTokenCounters = JsonNullable.<Object>of(disableTokenCounters);
    
    return this;
  }

   /**
   * Disable prompt token counters
   * @return disableTokenCounters
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDisableTokenCounters() {
        return disableTokenCounters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLE_TOKEN_COUNTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDisableTokenCounters_JsonNullable() {
    return disableTokenCounters;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLE_TOKEN_COUNTERS)
  public void setDisableTokenCounters_JsonNullable(JsonNullable<Object> disableTokenCounters) {
    this.disableTokenCounters = disableTokenCounters;
  }

  public void setDisableTokenCounters(Object disableTokenCounters) {
    this.disableTokenCounters = JsonNullable.<Object>of(disableTokenCounters);
  }


  public Options addModelHashToInfo(Boolean addModelHashToInfo) {
    
    this.addModelHashToInfo = addModelHashToInfo;
    return this;
  }

   /**
   * Add model hash to generation information
   * @return addModelHashToInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_MODEL_HASH_TO_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddModelHashToInfo() {
    return addModelHashToInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADD_MODEL_HASH_TO_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddModelHashToInfo(Boolean addModelHashToInfo) {
    this.addModelHashToInfo = addModelHashToInfo;
  }


  public Options addModelNameToInfo(Boolean addModelNameToInfo) {
    
    this.addModelNameToInfo = addModelNameToInfo;
    return this;
  }

   /**
   * Add model name to generation information
   * @return addModelNameToInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_MODEL_NAME_TO_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddModelNameToInfo() {
    return addModelNameToInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADD_MODEL_NAME_TO_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddModelNameToInfo(Boolean addModelNameToInfo) {
    this.addModelNameToInfo = addModelNameToInfo;
  }


  public Options addUserNameToInfo(Object addUserNameToInfo) {
    this.addUserNameToInfo = JsonNullable.<Object>of(addUserNameToInfo);
    
    return this;
  }

   /**
   * Add user name to generation information when authenticated
   * @return addUserNameToInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getAddUserNameToInfo() {
        return addUserNameToInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADD_USER_NAME_TO_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getAddUserNameToInfo_JsonNullable() {
    return addUserNameToInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_ADD_USER_NAME_TO_INFO)
  public void setAddUserNameToInfo_JsonNullable(JsonNullable<Object> addUserNameToInfo) {
    this.addUserNameToInfo = addUserNameToInfo;
  }

  public void setAddUserNameToInfo(Object addUserNameToInfo) {
    this.addUserNameToInfo = JsonNullable.<Object>of(addUserNameToInfo);
  }


  public Options addVersionToInfotext(Boolean addVersionToInfotext) {
    
    this.addVersionToInfotext = addVersionToInfotext;
    return this;
  }

   /**
   * Add program version to generation information
   * @return addVersionToInfotext
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_VERSION_TO_INFOTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddVersionToInfotext() {
    return addVersionToInfotext;
  }


  @JsonProperty(JSON_PROPERTY_ADD_VERSION_TO_INFOTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddVersionToInfotext(Boolean addVersionToInfotext) {
    this.addVersionToInfotext = addVersionToInfotext;
  }


  public Options disableWeightsAutoSwap(Boolean disableWeightsAutoSwap) {
    
    this.disableWeightsAutoSwap = disableWeightsAutoSwap;
    return this;
  }

   /**
   * Disregard checkpoint information from pasted infotext
   * @return disableWeightsAutoSwap
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_WEIGHTS_AUTO_SWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableWeightsAutoSwap() {
    return disableWeightsAutoSwap;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_WEIGHTS_AUTO_SWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableWeightsAutoSwap(Boolean disableWeightsAutoSwap) {
    this.disableWeightsAutoSwap = disableWeightsAutoSwap;
  }


  public Options infotextStyles(String infotextStyles) {
    
    this.infotextStyles = infotextStyles;
    return this;
  }

   /**
   * Infer styles from prompts of pasted infotext
   * @return infotextStyles
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFOTEXT_STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInfotextStyles() {
    return infotextStyles;
  }


  @JsonProperty(JSON_PROPERTY_INFOTEXT_STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfotextStyles(String infotextStyles) {
    this.infotextStyles = infotextStyles;
  }


  public Options showProgressbar(Boolean showProgressbar) {
    
    this.showProgressbar = showProgressbar;
    return this;
  }

   /**
   * Show progressbar
   * @return showProgressbar
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESSBAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowProgressbar() {
    return showProgressbar;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESSBAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowProgressbar(Boolean showProgressbar) {
    this.showProgressbar = showProgressbar;
  }


  public Options livePreviewsEnable(Boolean livePreviewsEnable) {
    
    this.livePreviewsEnable = livePreviewsEnable;
    return this;
  }

   /**
   * Show live previews of the created image
   * @return livePreviewsEnable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEWS_ENABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLivePreviewsEnable() {
    return livePreviewsEnable;
  }


  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEWS_ENABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLivePreviewsEnable(Boolean livePreviewsEnable) {
    this.livePreviewsEnable = livePreviewsEnable;
  }


  public Options livePreviewsImageFormat(String livePreviewsImageFormat) {
    
    this.livePreviewsImageFormat = livePreviewsImageFormat;
    return this;
  }

   /**
   * Live preview file format
   * @return livePreviewsImageFormat
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEWS_IMAGE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLivePreviewsImageFormat() {
    return livePreviewsImageFormat;
  }


  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEWS_IMAGE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLivePreviewsImageFormat(String livePreviewsImageFormat) {
    this.livePreviewsImageFormat = livePreviewsImageFormat;
  }


  public Options showProgressGrid(Boolean showProgressGrid) {
    
    this.showProgressGrid = showProgressGrid;
    return this;
  }

   /**
   * Show previews of all images generated in a batch as a grid
   * @return showProgressGrid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_GRID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowProgressGrid() {
    return showProgressGrid;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_GRID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowProgressGrid(Boolean showProgressGrid) {
    this.showProgressGrid = showProgressGrid;
  }


  public Options showProgressEveryNSteps(BigDecimal showProgressEveryNSteps) {
    
    this.showProgressEveryNSteps = showProgressEveryNSteps;
    return this;
  }

   /**
   * Live preview display period
   * @return showProgressEveryNSteps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_EVERY_N_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getShowProgressEveryNSteps() {
    return showProgressEveryNSteps;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_EVERY_N_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowProgressEveryNSteps(BigDecimal showProgressEveryNSteps) {
    this.showProgressEveryNSteps = showProgressEveryNSteps;
  }


  public Options showProgressType(String showProgressType) {
    
    this.showProgressType = showProgressType;
    return this;
  }

   /**
   * Live preview method
   * @return showProgressType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShowProgressType() {
    return showProgressType;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_PROGRESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowProgressType(String showProgressType) {
    this.showProgressType = showProgressType;
  }


  public Options livePreviewAllowLowvramFull(Object livePreviewAllowLowvramFull) {
    this.livePreviewAllowLowvramFull = JsonNullable.<Object>of(livePreviewAllowLowvramFull);
    
    return this;
  }

   /**
   * Allow Full live preview method with lowvram/medvram
   * @return livePreviewAllowLowvramFull
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLivePreviewAllowLowvramFull() {
        return livePreviewAllowLowvramFull.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_ALLOW_LOWVRAM_FULL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLivePreviewAllowLowvramFull_JsonNullable() {
    return livePreviewAllowLowvramFull;
  }
  
  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_ALLOW_LOWVRAM_FULL)
  public void setLivePreviewAllowLowvramFull_JsonNullable(JsonNullable<Object> livePreviewAllowLowvramFull) {
    this.livePreviewAllowLowvramFull = livePreviewAllowLowvramFull;
  }

  public void setLivePreviewAllowLowvramFull(Object livePreviewAllowLowvramFull) {
    this.livePreviewAllowLowvramFull = JsonNullable.<Object>of(livePreviewAllowLowvramFull);
  }


  public Options livePreviewContent(String livePreviewContent) {
    
    this.livePreviewContent = livePreviewContent;
    return this;
  }

   /**
   * Live preview subject
   * @return livePreviewContent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLivePreviewContent() {
    return livePreviewContent;
  }


  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLivePreviewContent(String livePreviewContent) {
    this.livePreviewContent = livePreviewContent;
  }


  public Options livePreviewRefreshPeriod(BigDecimal livePreviewRefreshPeriod) {
    
    this.livePreviewRefreshPeriod = livePreviewRefreshPeriod;
    return this;
  }

   /**
   * Progressbar and preview update period
   * @return livePreviewRefreshPeriod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_REFRESH_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLivePreviewRefreshPeriod() {
    return livePreviewRefreshPeriod;
  }


  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_REFRESH_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLivePreviewRefreshPeriod(BigDecimal livePreviewRefreshPeriod) {
    this.livePreviewRefreshPeriod = livePreviewRefreshPeriod;
  }


  public Options livePreviewFastInterrupt(Object livePreviewFastInterrupt) {
    this.livePreviewFastInterrupt = JsonNullable.<Object>of(livePreviewFastInterrupt);
    
    return this;
  }

   /**
   * Return image with chosen live preview method on interrupt
   * @return livePreviewFastInterrupt
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLivePreviewFastInterrupt() {
        return livePreviewFastInterrupt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_FAST_INTERRUPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLivePreviewFastInterrupt_JsonNullable() {
    return livePreviewFastInterrupt;
  }
  
  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW_FAST_INTERRUPT)
  public void setLivePreviewFastInterrupt_JsonNullable(JsonNullable<Object> livePreviewFastInterrupt) {
    this.livePreviewFastInterrupt = livePreviewFastInterrupt;
  }

  public void setLivePreviewFastInterrupt(Object livePreviewFastInterrupt) {
    this.livePreviewFastInterrupt = JsonNullable.<Object>of(livePreviewFastInterrupt);
  }


  public Options hideSamplers(Object hideSamplers) {
    this.hideSamplers = JsonNullable.<Object>of(hideSamplers);
    
    return this;
  }

   /**
   * Hide samplers in user interface
   * @return hideSamplers
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getHideSamplers() {
        return hideSamplers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIDE_SAMPLERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getHideSamplers_JsonNullable() {
    return hideSamplers;
  }
  
  @JsonProperty(JSON_PROPERTY_HIDE_SAMPLERS)
  public void setHideSamplers_JsonNullable(JsonNullable<Object> hideSamplers) {
    this.hideSamplers = hideSamplers;
  }

  public void setHideSamplers(Object hideSamplers) {
    this.hideSamplers = JsonNullable.<Object>of(hideSamplers);
  }


  public Options etaDdim(Object etaDdim) {
    this.etaDdim = JsonNullable.<Object>of(etaDdim);
    
    return this;
  }

   /**
   * Eta for DDIM
   * @return etaDdim
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getEtaDdim() {
        return etaDdim.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ETA_DDIM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEtaDdim_JsonNullable() {
    return etaDdim;
  }
  
  @JsonProperty(JSON_PROPERTY_ETA_DDIM)
  public void setEtaDdim_JsonNullable(JsonNullable<Object> etaDdim) {
    this.etaDdim = etaDdim;
  }

  public void setEtaDdim(Object etaDdim) {
    this.etaDdim = JsonNullable.<Object>of(etaDdim);
  }


  public Options etaAncestral(BigDecimal etaAncestral) {
    
    this.etaAncestral = etaAncestral;
    return this;
  }

   /**
   * Eta for k-diffusion samplers
   * @return etaAncestral
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ETA_ANCESTRAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEtaAncestral() {
    return etaAncestral;
  }


  @JsonProperty(JSON_PROPERTY_ETA_ANCESTRAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEtaAncestral(BigDecimal etaAncestral) {
    this.etaAncestral = etaAncestral;
  }


  public Options ddimDiscretize(String ddimDiscretize) {
    
    this.ddimDiscretize = ddimDiscretize;
    return this;
  }

   /**
   * img2img DDIM discretize
   * @return ddimDiscretize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DDIM_DISCRETIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDdimDiscretize() {
    return ddimDiscretize;
  }


  @JsonProperty(JSON_PROPERTY_DDIM_DISCRETIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDdimDiscretize(String ddimDiscretize) {
    this.ddimDiscretize = ddimDiscretize;
  }


  public Options sChurn(Object sChurn) {
    this.sChurn = JsonNullable.<Object>of(sChurn);
    
    return this;
  }

   /**
   * sigma churn
   * @return sChurn
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getsChurn() {
        return sChurn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_S_CHURN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getsChurn_JsonNullable() {
    return sChurn;
  }
  
  @JsonProperty(JSON_PROPERTY_S_CHURN)
  public void setsChurn_JsonNullable(JsonNullable<Object> sChurn) {
    this.sChurn = sChurn;
  }

  public void setsChurn(Object sChurn) {
    this.sChurn = JsonNullable.<Object>of(sChurn);
  }


  public Options sTmin(Object sTmin) {
    this.sTmin = JsonNullable.<Object>of(sTmin);
    
    return this;
  }

   /**
   * sigma tmin
   * @return sTmin
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getsTmin() {
        return sTmin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_S_TMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getsTmin_JsonNullable() {
    return sTmin;
  }
  
  @JsonProperty(JSON_PROPERTY_S_TMIN)
  public void setsTmin_JsonNullable(JsonNullable<Object> sTmin) {
    this.sTmin = sTmin;
  }

  public void setsTmin(Object sTmin) {
    this.sTmin = JsonNullable.<Object>of(sTmin);
  }


  public Options sTmax(Object sTmax) {
    this.sTmax = JsonNullable.<Object>of(sTmax);
    
    return this;
  }

   /**
   * sigma tmax
   * @return sTmax
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getsTmax() {
        return sTmax.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_S_TMAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getsTmax_JsonNullable() {
    return sTmax;
  }
  
  @JsonProperty(JSON_PROPERTY_S_TMAX)
  public void setsTmax_JsonNullable(JsonNullable<Object> sTmax) {
    this.sTmax = sTmax;
  }

  public void setsTmax(Object sTmax) {
    this.sTmax = JsonNullable.<Object>of(sTmax);
  }


  public Options sNoise(BigDecimal sNoise) {
    
    this.sNoise = sNoise;
    return this;
  }

   /**
   * sigma noise
   * @return sNoise
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_S_NOISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getsNoise() {
    return sNoise;
  }


  @JsonProperty(JSON_PROPERTY_S_NOISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setsNoise(BigDecimal sNoise) {
    this.sNoise = sNoise;
  }


  public Options kSchedType(String kSchedType) {
    
    this.kSchedType = kSchedType;
    return this;
  }

   /**
   * Scheduler type
   * @return kSchedType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_K_SCHED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getkSchedType() {
    return kSchedType;
  }


  @JsonProperty(JSON_PROPERTY_K_SCHED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setkSchedType(String kSchedType) {
    this.kSchedType = kSchedType;
  }


  public Options sigmaMin(Object sigmaMin) {
    this.sigmaMin = JsonNullable.<Object>of(sigmaMin);
    
    return this;
  }

   /**
   * sigma min
   * @return sigmaMin
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSigmaMin() {
        return sigmaMin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGMA_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSigmaMin_JsonNullable() {
    return sigmaMin;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGMA_MIN)
  public void setSigmaMin_JsonNullable(JsonNullable<Object> sigmaMin) {
    this.sigmaMin = sigmaMin;
  }

  public void setSigmaMin(Object sigmaMin) {
    this.sigmaMin = JsonNullable.<Object>of(sigmaMin);
  }


  public Options sigmaMax(Object sigmaMax) {
    this.sigmaMax = JsonNullable.<Object>of(sigmaMax);
    
    return this;
  }

   /**
   * sigma max
   * @return sigmaMax
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSigmaMax() {
        return sigmaMax.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGMA_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSigmaMax_JsonNullable() {
    return sigmaMax;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGMA_MAX)
  public void setSigmaMax_JsonNullable(JsonNullable<Object> sigmaMax) {
    this.sigmaMax = sigmaMax;
  }

  public void setSigmaMax(Object sigmaMax) {
    this.sigmaMax = JsonNullable.<Object>of(sigmaMax);
  }


  public Options rho(Object rho) {
    this.rho = JsonNullable.<Object>of(rho);
    
    return this;
  }

   /**
   * rho
   * @return rho
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getRho() {
        return rho.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RHO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getRho_JsonNullable() {
    return rho;
  }
  
  @JsonProperty(JSON_PROPERTY_RHO)
  public void setRho_JsonNullable(JsonNullable<Object> rho) {
    this.rho = rho;
  }

  public void setRho(Object rho) {
    this.rho = JsonNullable.<Object>of(rho);
  }


  public Options etaNoiseSeedDelta(Object etaNoiseSeedDelta) {
    this.etaNoiseSeedDelta = JsonNullable.<Object>of(etaNoiseSeedDelta);
    
    return this;
  }

   /**
   * Eta noise seed delta
   * @return etaNoiseSeedDelta
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getEtaNoiseSeedDelta() {
        return etaNoiseSeedDelta.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ETA_NOISE_SEED_DELTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEtaNoiseSeedDelta_JsonNullable() {
    return etaNoiseSeedDelta;
  }
  
  @JsonProperty(JSON_PROPERTY_ETA_NOISE_SEED_DELTA)
  public void setEtaNoiseSeedDelta_JsonNullable(JsonNullable<Object> etaNoiseSeedDelta) {
    this.etaNoiseSeedDelta = etaNoiseSeedDelta;
  }

  public void setEtaNoiseSeedDelta(Object etaNoiseSeedDelta) {
    this.etaNoiseSeedDelta = JsonNullable.<Object>of(etaNoiseSeedDelta);
  }


  public Options alwaysDiscardNextToLastSigma(Object alwaysDiscardNextToLastSigma) {
    this.alwaysDiscardNextToLastSigma = JsonNullable.<Object>of(alwaysDiscardNextToLastSigma);
    
    return this;
  }

   /**
   * Always discard next-to-last sigma
   * @return alwaysDiscardNextToLastSigma
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getAlwaysDiscardNextToLastSigma() {
        return alwaysDiscardNextToLastSigma.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALWAYS_DISCARD_NEXT_TO_LAST_SIGMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getAlwaysDiscardNextToLastSigma_JsonNullable() {
    return alwaysDiscardNextToLastSigma;
  }
  
  @JsonProperty(JSON_PROPERTY_ALWAYS_DISCARD_NEXT_TO_LAST_SIGMA)
  public void setAlwaysDiscardNextToLastSigma_JsonNullable(JsonNullable<Object> alwaysDiscardNextToLastSigma) {
    this.alwaysDiscardNextToLastSigma = alwaysDiscardNextToLastSigma;
  }

  public void setAlwaysDiscardNextToLastSigma(Object alwaysDiscardNextToLastSigma) {
    this.alwaysDiscardNextToLastSigma = JsonNullable.<Object>of(alwaysDiscardNextToLastSigma);
  }


  public Options sgmNoiseMultiplier(Object sgmNoiseMultiplier) {
    this.sgmNoiseMultiplier = JsonNullable.<Object>of(sgmNoiseMultiplier);
    
    return this;
  }

   /**
   * SGM noise multiplier
   * @return sgmNoiseMultiplier
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSgmNoiseMultiplier() {
        return sgmNoiseMultiplier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SGM_NOISE_MULTIPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSgmNoiseMultiplier_JsonNullable() {
    return sgmNoiseMultiplier;
  }
  
  @JsonProperty(JSON_PROPERTY_SGM_NOISE_MULTIPLIER)
  public void setSgmNoiseMultiplier_JsonNullable(JsonNullable<Object> sgmNoiseMultiplier) {
    this.sgmNoiseMultiplier = sgmNoiseMultiplier;
  }

  public void setSgmNoiseMultiplier(Object sgmNoiseMultiplier) {
    this.sgmNoiseMultiplier = JsonNullable.<Object>of(sgmNoiseMultiplier);
  }


  public Options uniPcVariant(String uniPcVariant) {
    
    this.uniPcVariant = uniPcVariant;
    return this;
  }

   /**
   * UniPC variant
   * @return uniPcVariant
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNI_PC_VARIANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUniPcVariant() {
    return uniPcVariant;
  }


  @JsonProperty(JSON_PROPERTY_UNI_PC_VARIANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniPcVariant(String uniPcVariant) {
    this.uniPcVariant = uniPcVariant;
  }


  public Options uniPcSkipType(String uniPcSkipType) {
    
    this.uniPcSkipType = uniPcSkipType;
    return this;
  }

   /**
   * UniPC skip type
   * @return uniPcSkipType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNI_PC_SKIP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUniPcSkipType() {
    return uniPcSkipType;
  }


  @JsonProperty(JSON_PROPERTY_UNI_PC_SKIP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniPcSkipType(String uniPcSkipType) {
    this.uniPcSkipType = uniPcSkipType;
  }


  public Options uniPcOrder(BigDecimal uniPcOrder) {
    
    this.uniPcOrder = uniPcOrder;
    return this;
  }

   /**
   * UniPC order
   * @return uniPcOrder
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNI_PC_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUniPcOrder() {
    return uniPcOrder;
  }


  @JsonProperty(JSON_PROPERTY_UNI_PC_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniPcOrder(BigDecimal uniPcOrder) {
    this.uniPcOrder = uniPcOrder;
  }


  public Options uniPcLowerOrderFinal(Boolean uniPcLowerOrderFinal) {
    
    this.uniPcLowerOrderFinal = uniPcLowerOrderFinal;
    return this;
  }

   /**
   * UniPC lower order final
   * @return uniPcLowerOrderFinal
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNI_PC_LOWER_ORDER_FINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUniPcLowerOrderFinal() {
    return uniPcLowerOrderFinal;
  }


  @JsonProperty(JSON_PROPERTY_UNI_PC_LOWER_ORDER_FINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniPcLowerOrderFinal(Boolean uniPcLowerOrderFinal) {
    this.uniPcLowerOrderFinal = uniPcLowerOrderFinal;
  }


  public Options postprocessingEnableInMainUi(Object postprocessingEnableInMainUi) {
    this.postprocessingEnableInMainUi = JsonNullable.<Object>of(postprocessingEnableInMainUi);
    
    return this;
  }

   /**
   * Enable postprocessing operations in txt2img and img2img tabs
   * @return postprocessingEnableInMainUi
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPostprocessingEnableInMainUi() {
        return postprocessingEnableInMainUi.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSTPROCESSING_ENABLE_IN_MAIN_UI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPostprocessingEnableInMainUi_JsonNullable() {
    return postprocessingEnableInMainUi;
  }
  
  @JsonProperty(JSON_PROPERTY_POSTPROCESSING_ENABLE_IN_MAIN_UI)
  public void setPostprocessingEnableInMainUi_JsonNullable(JsonNullable<Object> postprocessingEnableInMainUi) {
    this.postprocessingEnableInMainUi = postprocessingEnableInMainUi;
  }

  public void setPostprocessingEnableInMainUi(Object postprocessingEnableInMainUi) {
    this.postprocessingEnableInMainUi = JsonNullable.<Object>of(postprocessingEnableInMainUi);
  }


  public Options postprocessingOperationOrder(Object postprocessingOperationOrder) {
    this.postprocessingOperationOrder = JsonNullable.<Object>of(postprocessingOperationOrder);
    
    return this;
  }

   /**
   * Postprocessing operation order
   * @return postprocessingOperationOrder
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getPostprocessingOperationOrder() {
        return postprocessingOperationOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSTPROCESSING_OPERATION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPostprocessingOperationOrder_JsonNullable() {
    return postprocessingOperationOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_POSTPROCESSING_OPERATION_ORDER)
  public void setPostprocessingOperationOrder_JsonNullable(JsonNullable<Object> postprocessingOperationOrder) {
    this.postprocessingOperationOrder = postprocessingOperationOrder;
  }

  public void setPostprocessingOperationOrder(Object postprocessingOperationOrder) {
    this.postprocessingOperationOrder = JsonNullable.<Object>of(postprocessingOperationOrder);
  }


  public Options upscalingMaxImagesInCache(BigDecimal upscalingMaxImagesInCache) {
    
    this.upscalingMaxImagesInCache = upscalingMaxImagesInCache;
    return this;
  }

   /**
   * Maximum number of images in upscaling cache
   * @return upscalingMaxImagesInCache
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALING_MAX_IMAGES_IN_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUpscalingMaxImagesInCache() {
    return upscalingMaxImagesInCache;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALING_MAX_IMAGES_IN_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscalingMaxImagesInCache(BigDecimal upscalingMaxImagesInCache) {
    this.upscalingMaxImagesInCache = upscalingMaxImagesInCache;
  }


  public Options disabledExtensions(Object disabledExtensions) {
    this.disabledExtensions = JsonNullable.<Object>of(disabledExtensions);
    
    return this;
  }

   /**
   * Disable these extensions
   * @return disabledExtensions
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDisabledExtensions() {
        return disabledExtensions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDisabledExtensions_JsonNullable() {
    return disabledExtensions;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED_EXTENSIONS)
  public void setDisabledExtensions_JsonNullable(JsonNullable<Object> disabledExtensions) {
    this.disabledExtensions = disabledExtensions;
  }

  public void setDisabledExtensions(Object disabledExtensions) {
    this.disabledExtensions = JsonNullable.<Object>of(disabledExtensions);
  }


  public Options disableAllExtensions(String disableAllExtensions) {
    
    this.disableAllExtensions = disableAllExtensions;
    return this;
  }

   /**
   * Disable all extensions (preserves the list of disabled extensions)
   * @return disableAllExtensions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_ALL_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisableAllExtensions() {
    return disableAllExtensions;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_ALL_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableAllExtensions(String disableAllExtensions) {
    this.disableAllExtensions = disableAllExtensions;
  }


  public Options restoreConfigStateFile(Object restoreConfigStateFile) {
    this.restoreConfigStateFile = JsonNullable.<Object>of(restoreConfigStateFile);
    
    return this;
  }

   /**
   * Config state file to restore from, under &#39;config-states/&#39; folder
   * @return restoreConfigStateFile
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getRestoreConfigStateFile() {
        return restoreConfigStateFile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESTORE_CONFIG_STATE_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getRestoreConfigStateFile_JsonNullable() {
    return restoreConfigStateFile;
  }
  
  @JsonProperty(JSON_PROPERTY_RESTORE_CONFIG_STATE_FILE)
  public void setRestoreConfigStateFile_JsonNullable(JsonNullable<Object> restoreConfigStateFile) {
    this.restoreConfigStateFile = restoreConfigStateFile;
  }

  public void setRestoreConfigStateFile(Object restoreConfigStateFile) {
    this.restoreConfigStateFile = JsonNullable.<Object>of(restoreConfigStateFile);
  }


  public Options sdCheckpointHash(Object sdCheckpointHash) {
    this.sdCheckpointHash = JsonNullable.<Object>of(sdCheckpointHash);
    
    return this;
  }

   /**
   * SHA256 hash of the current checkpoint
   * @return sdCheckpointHash
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getSdCheckpointHash() {
        return sdCheckpointHash.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSdCheckpointHash_JsonNullable() {
    return sdCheckpointHash;
  }
  
  @JsonProperty(JSON_PROPERTY_SD_CHECKPOINT_HASH)
  public void setSdCheckpointHash_JsonNullable(JsonNullable<Object> sdCheckpointHash) {
    this.sdCheckpointHash = sdCheckpointHash;
  }

  public void setSdCheckpointHash(Object sdCheckpointHash) {
    this.sdCheckpointHash = JsonNullable.<Object>of(sdCheckpointHash);
  }


  public Options sdLora(String sdLora) {
    
    this.sdLora = sdLora;
    return this;
  }

   /**
   * Add network to prompt
   * @return sdLora
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SD_LORA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdLora() {
    return sdLora;
  }


  @JsonProperty(JSON_PROPERTY_SD_LORA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdLora(String sdLora) {
    this.sdLora = sdLora;
  }


  public Options loraPreferredName(String loraPreferredName) {
    
    this.loraPreferredName = loraPreferredName;
    return this;
  }

   /**
   * When adding to prompt, refer to Lora by
   * @return loraPreferredName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LORA_PREFERRED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoraPreferredName() {
    return loraPreferredName;
  }


  @JsonProperty(JSON_PROPERTY_LORA_PREFERRED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoraPreferredName(String loraPreferredName) {
    this.loraPreferredName = loraPreferredName;
  }


  public Options loraAddHashesToInfotext(Boolean loraAddHashesToInfotext) {
    
    this.loraAddHashesToInfotext = loraAddHashesToInfotext;
    return this;
  }

   /**
   * Add Lora hashes to infotext
   * @return loraAddHashesToInfotext
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LORA_ADD_HASHES_TO_INFOTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoraAddHashesToInfotext() {
    return loraAddHashesToInfotext;
  }


  @JsonProperty(JSON_PROPERTY_LORA_ADD_HASHES_TO_INFOTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoraAddHashesToInfotext(Boolean loraAddHashesToInfotext) {
    this.loraAddHashesToInfotext = loraAddHashesToInfotext;
  }


  public Options loraShowAll(Object loraShowAll) {
    this.loraShowAll = JsonNullable.<Object>of(loraShowAll);
    
    return this;
  }

   /**
   * Always show all networks on the Lora page
   * @return loraShowAll
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLoraShowAll() {
        return loraShowAll.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LORA_SHOW_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLoraShowAll_JsonNullable() {
    return loraShowAll;
  }
  
  @JsonProperty(JSON_PROPERTY_LORA_SHOW_ALL)
  public void setLoraShowAll_JsonNullable(JsonNullable<Object> loraShowAll) {
    this.loraShowAll = loraShowAll;
  }

  public void setLoraShowAll(Object loraShowAll) {
    this.loraShowAll = JsonNullable.<Object>of(loraShowAll);
  }


  public Options loraHideUnknownForVersions(Object loraHideUnknownForVersions) {
    this.loraHideUnknownForVersions = JsonNullable.<Object>of(loraHideUnknownForVersions);
    
    return this;
  }

   /**
   * Hide networks of unknown versions for model versions
   * @return loraHideUnknownForVersions
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLoraHideUnknownForVersions() {
        return loraHideUnknownForVersions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LORA_HIDE_UNKNOWN_FOR_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLoraHideUnknownForVersions_JsonNullable() {
    return loraHideUnknownForVersions;
  }
  
  @JsonProperty(JSON_PROPERTY_LORA_HIDE_UNKNOWN_FOR_VERSIONS)
  public void setLoraHideUnknownForVersions_JsonNullable(JsonNullable<Object> loraHideUnknownForVersions) {
    this.loraHideUnknownForVersions = loraHideUnknownForVersions;
  }

  public void setLoraHideUnknownForVersions(Object loraHideUnknownForVersions) {
    this.loraHideUnknownForVersions = JsonNullable.<Object>of(loraHideUnknownForVersions);
  }


  public Options loraInMemoryLimit(Object loraInMemoryLimit) {
    this.loraInMemoryLimit = JsonNullable.<Object>of(loraInMemoryLimit);
    
    return this;
  }

   /**
   * Number of Lora networks to keep cached in memory
   * @return loraInMemoryLimit
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLoraInMemoryLimit() {
        return loraInMemoryLimit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LORA_IN_MEMORY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLoraInMemoryLimit_JsonNullable() {
    return loraInMemoryLimit;
  }
  
  @JsonProperty(JSON_PROPERTY_LORA_IN_MEMORY_LIMIT)
  public void setLoraInMemoryLimit_JsonNullable(JsonNullable<Object> loraInMemoryLimit) {
    this.loraInMemoryLimit = loraInMemoryLimit;
  }

  public void setLoraInMemoryLimit(Object loraInMemoryLimit) {
    this.loraInMemoryLimit = JsonNullable.<Object>of(loraInMemoryLimit);
  }


  public Options loraFunctional(Object loraFunctional) {
    this.loraFunctional = JsonNullable.<Object>of(loraFunctional);
    
    return this;
  }

   /**
   * Lora/Networks: use old method that takes longer when you have multiple Loras active and produces same results as kohya-ss/sd-webui-additional-networks extension
   * @return loraFunctional
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getLoraFunctional() {
        return loraFunctional.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LORA_FUNCTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLoraFunctional_JsonNullable() {
    return loraFunctional;
  }
  
  @JsonProperty(JSON_PROPERTY_LORA_FUNCTIONAL)
  public void setLoraFunctional_JsonNullable(JsonNullable<Object> loraFunctional) {
    this.loraFunctional = loraFunctional;
  }

  public void setLoraFunctional(Object loraFunctional) {
    this.loraFunctional = JsonNullable.<Object>of(loraFunctional);
  }


  public Options canvasHotkeyZoom(String canvasHotkeyZoom) {
    
    this.canvasHotkeyZoom = canvasHotkeyZoom;
    return this;
  }

   /**
   * Zoom canvas
   * @return canvasHotkeyZoom
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_ZOOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCanvasHotkeyZoom() {
    return canvasHotkeyZoom;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_ZOOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasHotkeyZoom(String canvasHotkeyZoom) {
    this.canvasHotkeyZoom = canvasHotkeyZoom;
  }


  public Options canvasHotkeyAdjust(String canvasHotkeyAdjust) {
    
    this.canvasHotkeyAdjust = canvasHotkeyAdjust;
    return this;
  }

   /**
   * Adjust brush size
   * @return canvasHotkeyAdjust
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_ADJUST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCanvasHotkeyAdjust() {
    return canvasHotkeyAdjust;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_ADJUST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasHotkeyAdjust(String canvasHotkeyAdjust) {
    this.canvasHotkeyAdjust = canvasHotkeyAdjust;
  }


  public Options canvasHotkeyMove(String canvasHotkeyMove) {
    
    this.canvasHotkeyMove = canvasHotkeyMove;
    return this;
  }

   /**
   * Moving the canvas
   * @return canvasHotkeyMove
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_MOVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCanvasHotkeyMove() {
    return canvasHotkeyMove;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_MOVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasHotkeyMove(String canvasHotkeyMove) {
    this.canvasHotkeyMove = canvasHotkeyMove;
  }


  public Options canvasHotkeyFullscreen(String canvasHotkeyFullscreen) {
    
    this.canvasHotkeyFullscreen = canvasHotkeyFullscreen;
    return this;
  }

   /**
   * Fullscreen Mode, maximizes the picture so that it fits into the screen and stretches it to its full width 
   * @return canvasHotkeyFullscreen
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_FULLSCREEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCanvasHotkeyFullscreen() {
    return canvasHotkeyFullscreen;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_FULLSCREEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasHotkeyFullscreen(String canvasHotkeyFullscreen) {
    this.canvasHotkeyFullscreen = canvasHotkeyFullscreen;
  }


  public Options canvasHotkeyReset(String canvasHotkeyReset) {
    
    this.canvasHotkeyReset = canvasHotkeyReset;
    return this;
  }

   /**
   * Reset zoom and canvas positon
   * @return canvasHotkeyReset
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_RESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCanvasHotkeyReset() {
    return canvasHotkeyReset;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_RESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasHotkeyReset(String canvasHotkeyReset) {
    this.canvasHotkeyReset = canvasHotkeyReset;
  }


  public Options canvasHotkeyOverlap(String canvasHotkeyOverlap) {
    
    this.canvasHotkeyOverlap = canvasHotkeyOverlap;
    return this;
  }

   /**
   * Toggle overlap
   * @return canvasHotkeyOverlap
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCanvasHotkeyOverlap() {
    return canvasHotkeyOverlap;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_HOTKEY_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasHotkeyOverlap(String canvasHotkeyOverlap) {
    this.canvasHotkeyOverlap = canvasHotkeyOverlap;
  }


  public Options canvasShowTooltip(Boolean canvasShowTooltip) {
    
    this.canvasShowTooltip = canvasShowTooltip;
    return this;
  }

   /**
   * Enable tooltip on the canvas
   * @return canvasShowTooltip
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_SHOW_TOOLTIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanvasShowTooltip() {
    return canvasShowTooltip;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_SHOW_TOOLTIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasShowTooltip(Boolean canvasShowTooltip) {
    this.canvasShowTooltip = canvasShowTooltip;
  }


  public Options canvasAutoExpand(Boolean canvasAutoExpand) {
    
    this.canvasAutoExpand = canvasAutoExpand;
    return this;
  }

   /**
   * Automatically expands an image that does not fit completely in the canvas area, similar to manually pressing the S and R buttons
   * @return canvasAutoExpand
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_AUTO_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanvasAutoExpand() {
    return canvasAutoExpand;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_AUTO_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasAutoExpand(Boolean canvasAutoExpand) {
    this.canvasAutoExpand = canvasAutoExpand;
  }


  public Options canvasBlurPrompt(Object canvasBlurPrompt) {
    this.canvasBlurPrompt = JsonNullable.<Object>of(canvasBlurPrompt);
    
    return this;
  }

   /**
   * Take the focus off the prompt when working with a canvas
   * @return canvasBlurPrompt
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getCanvasBlurPrompt() {
        return canvasBlurPrompt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CANVAS_BLUR_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getCanvasBlurPrompt_JsonNullable() {
    return canvasBlurPrompt;
  }
  
  @JsonProperty(JSON_PROPERTY_CANVAS_BLUR_PROMPT)
  public void setCanvasBlurPrompt_JsonNullable(JsonNullable<Object> canvasBlurPrompt) {
    this.canvasBlurPrompt = canvasBlurPrompt;
  }

  public void setCanvasBlurPrompt(Object canvasBlurPrompt) {
    this.canvasBlurPrompt = JsonNullable.<Object>of(canvasBlurPrompt);
  }


  public Options canvasDisabledFunctions(List<Object> canvasDisabledFunctions) {
    
    this.canvasDisabledFunctions = canvasDisabledFunctions;
    return this;
  }

  public Options addCanvasDisabledFunctionsItem(Object canvasDisabledFunctionsItem) {
    if (this.canvasDisabledFunctions == null) {
      this.canvasDisabledFunctions = new ArrayList<>(Arrays.asList(Overlap));
    }
    this.canvasDisabledFunctions.add(canvasDisabledFunctionsItem);
    return this;
  }

   /**
   * Disable function that you don&#39;t use
   * @return canvasDisabledFunctions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANVAS_DISABLED_FUNCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getCanvasDisabledFunctions() {
    return canvasDisabledFunctions;
  }


  @JsonProperty(JSON_PROPERTY_CANVAS_DISABLED_FUNCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanvasDisabledFunctions(List<Object> canvasDisabledFunctions) {
    this.canvasDisabledFunctions = canvasDisabledFunctions;
  }


  public Options extraOptionsTxt2img(Object extraOptionsTxt2img) {
    this.extraOptionsTxt2img = JsonNullable.<Object>of(extraOptionsTxt2img);
    
    return this;
  }

   /**
   * Options in main UI - txt2img
   * @return extraOptionsTxt2img
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getExtraOptionsTxt2img() {
        return extraOptionsTxt2img.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_TXT2IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtraOptionsTxt2img_JsonNullable() {
    return extraOptionsTxt2img;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_TXT2IMG)
  public void setExtraOptionsTxt2img_JsonNullable(JsonNullable<Object> extraOptionsTxt2img) {
    this.extraOptionsTxt2img = extraOptionsTxt2img;
  }

  public void setExtraOptionsTxt2img(Object extraOptionsTxt2img) {
    this.extraOptionsTxt2img = JsonNullable.<Object>of(extraOptionsTxt2img);
  }


  public Options extraOptionsImg2img(Object extraOptionsImg2img) {
    this.extraOptionsImg2img = JsonNullable.<Object>of(extraOptionsImg2img);
    
    return this;
  }

   /**
   * Options in main UI - img2img
   * @return extraOptionsImg2img
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getExtraOptionsImg2img() {
        return extraOptionsImg2img.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_IMG2IMG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtraOptionsImg2img_JsonNullable() {
    return extraOptionsImg2img;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_IMG2IMG)
  public void setExtraOptionsImg2img_JsonNullable(JsonNullable<Object> extraOptionsImg2img) {
    this.extraOptionsImg2img = extraOptionsImg2img;
  }

  public void setExtraOptionsImg2img(Object extraOptionsImg2img) {
    this.extraOptionsImg2img = JsonNullable.<Object>of(extraOptionsImg2img);
  }


  public Options extraOptionsCols(BigDecimal extraOptionsCols) {
    
    this.extraOptionsCols = extraOptionsCols;
    return this;
  }

   /**
   * Options in main UI - number of columns
   * @return extraOptionsCols
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_COLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getExtraOptionsCols() {
    return extraOptionsCols;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_COLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraOptionsCols(BigDecimal extraOptionsCols) {
    this.extraOptionsCols = extraOptionsCols;
  }


  public Options extraOptionsAccordion(Object extraOptionsAccordion) {
    this.extraOptionsAccordion = JsonNullable.<Object>of(extraOptionsAccordion);
    
    return this;
  }

   /**
   * Options in main UI - place into an accordion
   * @return extraOptionsAccordion
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getExtraOptionsAccordion() {
        return extraOptionsAccordion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_ACCORDION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExtraOptionsAccordion_JsonNullable() {
    return extraOptionsAccordion;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA_OPTIONS_ACCORDION)
  public void setExtraOptionsAccordion_JsonNullable(JsonNullable<Object> extraOptionsAccordion) {
    this.extraOptionsAccordion = extraOptionsAccordion;
  }

  public void setExtraOptionsAccordion(Object extraOptionsAccordion) {
    this.extraOptionsAccordion = JsonNullable.<Object>of(extraOptionsAccordion);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Options options = (Options) o;
    return Objects.equals(this.samplesSave, options.samplesSave) &&
        Objects.equals(this.samplesFormat, options.samplesFormat) &&
        equalsNullable(this.samplesFilenamePattern, options.samplesFilenamePattern) &&
        Objects.equals(this.saveImagesAddNumber, options.saveImagesAddNumber) &&
        Objects.equals(this.gridSave, options.gridSave) &&
        Objects.equals(this.gridFormat, options.gridFormat) &&
        equalsNullable(this.gridExtendedFilename, options.gridExtendedFilename) &&
        Objects.equals(this.gridOnlyIfMultiple, options.gridOnlyIfMultiple) &&
        equalsNullable(this.gridPreventEmptySpots, options.gridPreventEmptySpots) &&
        equalsNullable(this.gridZipFilenamePattern, options.gridZipFilenamePattern) &&
        Objects.equals(this.nRows, options.nRows) &&
        equalsNullable(this.font, options.font) &&
        Objects.equals(this.gridTextActiveColor, options.gridTextActiveColor) &&
        Objects.equals(this.gridTextInactiveColor, options.gridTextInactiveColor) &&
        Objects.equals(this.gridBackgroundColor, options.gridBackgroundColor) &&
        Objects.equals(this.enablePnginfo, options.enablePnginfo) &&
        equalsNullable(this.saveTxt, options.saveTxt) &&
        equalsNullable(this.saveImagesBeforeFaceRestoration, options.saveImagesBeforeFaceRestoration) &&
        equalsNullable(this.saveImagesBeforeHighresFix, options.saveImagesBeforeHighresFix) &&
        equalsNullable(this.saveImagesBeforeColorCorrection, options.saveImagesBeforeColorCorrection) &&
        equalsNullable(this.saveMask, options.saveMask) &&
        equalsNullable(this.saveMaskComposite, options.saveMaskComposite) &&
        Objects.equals(this.jpegQuality, options.jpegQuality) &&
        equalsNullable(this.webpLossless, options.webpLossless) &&
        Objects.equals(this.exportFor4chan, options.exportFor4chan) &&
        Objects.equals(this.imgDownscaleThreshold, options.imgDownscaleThreshold) &&
        Objects.equals(this.targetSideLength, options.targetSideLength) &&
        Objects.equals(this.imgMaxSizeMp, options.imgMaxSizeMp) &&
        Objects.equals(this.useOriginalNameBatch, options.useOriginalNameBatch) &&
        equalsNullable(this.useUpscalerNameAsSuffix, options.useUpscalerNameAsSuffix) &&
        Objects.equals(this.saveSelectedOnly, options.saveSelectedOnly) &&
        equalsNullable(this.saveInitImg, options.saveInitImg) &&
        equalsNullable(this.tempDir, options.tempDir) &&
        equalsNullable(this.cleanTempDirAtStart, options.cleanTempDirAtStart) &&
        equalsNullable(this.saveIncompleteImages, options.saveIncompleteImages) &&
        equalsNullable(this.outdirSamples, options.outdirSamples) &&
        Objects.equals(this.outdirTxt2imgSamples, options.outdirTxt2imgSamples) &&
        Objects.equals(this.outdirImg2imgSamples, options.outdirImg2imgSamples) &&
        Objects.equals(this.outdirExtrasSamples, options.outdirExtrasSamples) &&
        equalsNullable(this.outdirGrids, options.outdirGrids) &&
        Objects.equals(this.outdirTxt2imgGrids, options.outdirTxt2imgGrids) &&
        Objects.equals(this.outdirImg2imgGrids, options.outdirImg2imgGrids) &&
        Objects.equals(this.outdirSave, options.outdirSave) &&
        Objects.equals(this.outdirInitImages, options.outdirInitImages) &&
        Objects.equals(this.saveToDirs, options.saveToDirs) &&
        Objects.equals(this.gridSaveToDirs, options.gridSaveToDirs) &&
        equalsNullable(this.useSaveToDirsForUi, options.useSaveToDirsForUi) &&
        Objects.equals(this.directoriesFilenamePattern, options.directoriesFilenamePattern) &&
        Objects.equals(this.directoriesMaxPromptWords, options.directoriesMaxPromptWords) &&
        Objects.equals(this.esRGANTile, options.esRGANTile) &&
        Objects.equals(this.esRGANTileOverlap, options.esRGANTileOverlap) &&
        Objects.equals(this.realesrganEnabledModels, options.realesrganEnabledModels) &&
        equalsNullable(this.upscalerForImg2img, options.upscalerForImg2img) &&
        equalsNullable(this.faceRestoration, options.faceRestoration) &&
        Objects.equals(this.faceRestorationModel, options.faceRestorationModel) &&
        Objects.equals(this.codeFormerWeight, options.codeFormerWeight) &&
        equalsNullable(this.faceRestorationUnload, options.faceRestorationUnload) &&
        Objects.equals(this.autoLaunchBrowser, options.autoLaunchBrowser) &&
        equalsNullable(this.showWarnings, options.showWarnings) &&
        Objects.equals(this.showGradioDeprecationWarnings, options.showGradioDeprecationWarnings) &&
        Objects.equals(this.memmonPollRate, options.memmonPollRate) &&
        equalsNullable(this.samplesLogStdout, options.samplesLogStdout) &&
        Objects.equals(this.multipleTqdm, options.multipleTqdm) &&
        equalsNullable(this.printHypernetExtra, options.printHypernetExtra) &&
        Objects.equals(this.listHiddenFiles, options.listHiddenFiles) &&
        equalsNullable(this.disableMmapLoadSafetensors, options.disableMmapLoadSafetensors) &&
        Objects.equals(this.hideLdmPrints, options.hideLdmPrints) &&
        Objects.equals(this.apiEnableRequests, options.apiEnableRequests) &&
        Objects.equals(this.apiForbidLocalRequests, options.apiForbidLocalRequests) &&
        equalsNullable(this.apiUseragent, options.apiUseragent) &&
        equalsNullable(this.unloadModelsWhenTraining, options.unloadModelsWhenTraining) &&
        equalsNullable(this.pinMemory, options.pinMemory) &&
        equalsNullable(this.saveOptimizerState, options.saveOptimizerState) &&
        Objects.equals(this.saveTrainingSettingsToTxt, options.saveTrainingSettingsToTxt) &&
        equalsNullable(this.datasetFilenameWordRegex, options.datasetFilenameWordRegex) &&
        Objects.equals(this.datasetFilenameJoinString, options.datasetFilenameJoinString) &&
        Objects.equals(this.trainingImageRepeatsPerEpoch, options.trainingImageRepeatsPerEpoch) &&
        Objects.equals(this.trainingWriteCsvEvery, options.trainingWriteCsvEvery) &&
        equalsNullable(this.trainingXattentionOptimizations, options.trainingXattentionOptimizations) &&
        equalsNullable(this.trainingEnableTensorboard, options.trainingEnableTensorboard) &&
        equalsNullable(this.trainingTensorboardSaveImages, options.trainingTensorboardSaveImages) &&
        Objects.equals(this.trainingTensorboardFlushEvery, options.trainingTensorboardFlushEvery) &&
        equalsNullable(this.sdModelCheckpoint, options.sdModelCheckpoint) &&
        Objects.equals(this.sdCheckpointsLimit, options.sdCheckpointsLimit) &&
        Objects.equals(this.sdCheckpointsKeepInCpu, options.sdCheckpointsKeepInCpu) &&
        equalsNullable(this.sdCheckpointCache, options.sdCheckpointCache) &&
        Objects.equals(this.sdUnet, options.sdUnet) &&
        equalsNullable(this.enableQuantization, options.enableQuantization) &&
        Objects.equals(this.enableEmphasis, options.enableEmphasis) &&
        Objects.equals(this.enableBatchSeeds, options.enableBatchSeeds) &&
        Objects.equals(this.commaPaddingBacktrack, options.commaPaddingBacktrack) &&
        Objects.equals(this.clIPStopAtLastLayers, options.clIPStopAtLastLayers) &&
        equalsNullable(this.upcastAttn, options.upcastAttn) &&
        Objects.equals(this.randnSource, options.randnSource) &&
        equalsNullable(this.tiling, options.tiling) &&
        Objects.equals(this.hiresFixRefinerPass, options.hiresFixRefinerPass) &&
        equalsNullable(this.sdxlCropTop, options.sdxlCropTop) &&
        equalsNullable(this.sdxlCropLeft, options.sdxlCropLeft) &&
        Objects.equals(this.sdxlRefinerLowAestheticScore, options.sdxlRefinerLowAestheticScore) &&
        Objects.equals(this.sdxlRefinerHighAestheticScore, options.sdxlRefinerHighAestheticScore) &&
        Objects.equals(this.sdVaeExplanation, options.sdVaeExplanation) &&
        equalsNullable(this.sdVaeCheckpointCache, options.sdVaeCheckpointCache) &&
        Objects.equals(this.sdVae, options.sdVae) &&
        Objects.equals(this.sdVaeOverridesPerModelPreferences, options.sdVaeOverridesPerModelPreferences) &&
        Objects.equals(this.autoVaePrecision, options.autoVaePrecision) &&
        Objects.equals(this.sdVaeEncodeMethod, options.sdVaeEncodeMethod) &&
        Objects.equals(this.sdVaeDecodeMethod, options.sdVaeDecodeMethod) &&
        Objects.equals(this.inpaintingMaskWeight, options.inpaintingMaskWeight) &&
        Objects.equals(this.initialNoiseMultiplier, options.initialNoiseMultiplier) &&
        equalsNullable(this.img2imgExtraNoise, options.img2imgExtraNoise) &&
        equalsNullable(this.img2imgColorCorrection, options.img2imgColorCorrection) &&
        equalsNullable(this.img2imgFixSteps, options.img2imgFixSteps) &&
        Objects.equals(this.img2imgBackgroundColor, options.img2imgBackgroundColor) &&
        Objects.equals(this.img2imgEditorHeight, options.img2imgEditorHeight) &&
        Objects.equals(this.img2imgSketchDefaultBrushColor, options.img2imgSketchDefaultBrushColor) &&
        Objects.equals(this.img2imgInpaintMaskBrushColor, options.img2imgInpaintMaskBrushColor) &&
        Objects.equals(this.img2imgInpaintSketchDefaultBrushColor, options.img2imgInpaintSketchDefaultBrushColor) &&
        equalsNullable(this.returnMask, options.returnMask) &&
        equalsNullable(this.returnMaskComposite, options.returnMaskComposite) &&
        Objects.equals(this.crossAttentionOptimization, options.crossAttentionOptimization) &&
        equalsNullable(this.sMinUncond, options.sMinUncond) &&
        equalsNullable(this.tokenMergingRatio, options.tokenMergingRatio) &&
        equalsNullable(this.tokenMergingRatioImg2img, options.tokenMergingRatioImg2img) &&
        equalsNullable(this.tokenMergingRatioHr, options.tokenMergingRatioHr) &&
        equalsNullable(this.padCondUncond, options.padCondUncond) &&
        Objects.equals(this.persistentCondCache, options.persistentCondCache) &&
        Objects.equals(this.batchCondUncond, options.batchCondUncond) &&
        equalsNullable(this.useOldEmphasisImplementation, options.useOldEmphasisImplementation) &&
        equalsNullable(this.useOldKarrasSchedulerSigmas, options.useOldKarrasSchedulerSigmas) &&
        equalsNullable(this.noDpmppSdeBatchDeterminism, options.noDpmppSdeBatchDeterminism) &&
        equalsNullable(this.useOldHiresFixWidthHeight, options.useOldHiresFixWidthHeight) &&
        equalsNullable(this.dontFixSecondOrderSamplersSchedule, options.dontFixSecondOrderSamplersSchedule) &&
        equalsNullable(this.hiresFixUseFirstpassConds, options.hiresFixUseFirstpassConds) &&
        equalsNullable(this.useOldScheduling, options.useOldScheduling) &&
        equalsNullable(this.interrogateKeepModelsInMemory, options.interrogateKeepModelsInMemory) &&
        equalsNullable(this.interrogateReturnRanks, options.interrogateReturnRanks) &&
        Objects.equals(this.interrogateClipNumBeams, options.interrogateClipNumBeams) &&
        Objects.equals(this.interrogateClipMinLength, options.interrogateClipMinLength) &&
        Objects.equals(this.interrogateClipMaxLength, options.interrogateClipMaxLength) &&
        Objects.equals(this.interrogateClipDictLimit, options.interrogateClipDictLimit) &&
        equalsNullable(this.interrogateClipSkipCategories, options.interrogateClipSkipCategories) &&
        Objects.equals(this.interrogateDeepbooruScoreThreshold, options.interrogateDeepbooruScoreThreshold) &&
        Objects.equals(this.deepbooruSortAlpha, options.deepbooruSortAlpha) &&
        Objects.equals(this.deepbooruUseSpaces, options.deepbooruUseSpaces) &&
        Objects.equals(this.deepbooruEscape, options.deepbooruEscape) &&
        equalsNullable(this.deepbooruFilterTags, options.deepbooruFilterTags) &&
        Objects.equals(this.extraNetworksShowHiddenDirectories, options.extraNetworksShowHiddenDirectories) &&
        Objects.equals(this.extraNetworksHiddenModels, options.extraNetworksHiddenModels) &&
        Objects.equals(this.extraNetworksDefaultMultiplier, options.extraNetworksDefaultMultiplier) &&
        equalsNullable(this.extraNetworksCardWidth, options.extraNetworksCardWidth) &&
        equalsNullable(this.extraNetworksCardHeight, options.extraNetworksCardHeight) &&
        Objects.equals(this.extraNetworksCardTextScale, options.extraNetworksCardTextScale) &&
        Objects.equals(this.extraNetworksCardShowDesc, options.extraNetworksCardShowDesc) &&
        Objects.equals(this.extraNetworksAddTextSeparator, options.extraNetworksAddTextSeparator) &&
        equalsNullable(this.uiExtraNetworksTabReorder, options.uiExtraNetworksTabReorder) &&
        equalsNullable(this.textualInversionPrintAtLoad, options.textualInversionPrintAtLoad) &&
        Objects.equals(this.textualInversionAddHashesToInfotext, options.textualInversionAddHashesToInfotext) &&
        Objects.equals(this.sdHypernetwork, options.sdHypernetwork) &&
        Objects.equals(this.localization, options.localization) &&
        Objects.equals(this.gradioTheme, options.gradioTheme) &&
        Objects.equals(this.gradioThemesCache, options.gradioThemesCache) &&
        equalsNullable(this.galleryHeight, options.galleryHeight) &&
        Objects.equals(this.returnGrid, options.returnGrid) &&
        equalsNullable(this.doNotShowImages, options.doNotShowImages) &&
        Objects.equals(this.sendSeed, options.sendSeed) &&
        Objects.equals(this.sendSize, options.sendSize) &&
        Objects.equals(this.jsModalLightbox, options.jsModalLightbox) &&
        Objects.equals(this.jsModalLightboxInitiallyZoomed, options.jsModalLightboxInitiallyZoomed) &&
        equalsNullable(this.jsModalLightboxGamepad, options.jsModalLightboxGamepad) &&
        Objects.equals(this.jsModalLightboxGamepadRepeat, options.jsModalLightboxGamepadRepeat) &&
        Objects.equals(this.showProgressInTitle, options.showProgressInTitle) &&
        Objects.equals(this.samplersInDropdown, options.samplersInDropdown) &&
        Objects.equals(this.dimensionsAndBatchTogether, options.dimensionsAndBatchTogether) &&
        Objects.equals(this.keyeditPrecisionAttention, options.keyeditPrecisionAttention) &&
        Objects.equals(this.keyeditPrecisionExtra, options.keyeditPrecisionExtra) &&
        Objects.equals(this.keyeditDelimiters, options.keyeditDelimiters) &&
        Objects.equals(this.keyeditMove, options.keyeditMove) &&
        Objects.equals(this.quicksettingsList, options.quicksettingsList) &&
        equalsNullable(this.uiTabOrder, options.uiTabOrder) &&
        equalsNullable(this.hiddenTabs, options.hiddenTabs) &&
        equalsNullable(this.uiReorderList, options.uiReorderList) &&
        equalsNullable(this.hiresFixShowSampler, options.hiresFixShowSampler) &&
        equalsNullable(this.hiresFixShowPrompts, options.hiresFixShowPrompts) &&
        equalsNullable(this.disableTokenCounters, options.disableTokenCounters) &&
        Objects.equals(this.addModelHashToInfo, options.addModelHashToInfo) &&
        Objects.equals(this.addModelNameToInfo, options.addModelNameToInfo) &&
        equalsNullable(this.addUserNameToInfo, options.addUserNameToInfo) &&
        Objects.equals(this.addVersionToInfotext, options.addVersionToInfotext) &&
        Objects.equals(this.disableWeightsAutoSwap, options.disableWeightsAutoSwap) &&
        Objects.equals(this.infotextStyles, options.infotextStyles) &&
        Objects.equals(this.showProgressbar, options.showProgressbar) &&
        Objects.equals(this.livePreviewsEnable, options.livePreviewsEnable) &&
        Objects.equals(this.livePreviewsImageFormat, options.livePreviewsImageFormat) &&
        Objects.equals(this.showProgressGrid, options.showProgressGrid) &&
        Objects.equals(this.showProgressEveryNSteps, options.showProgressEveryNSteps) &&
        Objects.equals(this.showProgressType, options.showProgressType) &&
        equalsNullable(this.livePreviewAllowLowvramFull, options.livePreviewAllowLowvramFull) &&
        Objects.equals(this.livePreviewContent, options.livePreviewContent) &&
        Objects.equals(this.livePreviewRefreshPeriod, options.livePreviewRefreshPeriod) &&
        equalsNullable(this.livePreviewFastInterrupt, options.livePreviewFastInterrupt) &&
        equalsNullable(this.hideSamplers, options.hideSamplers) &&
        equalsNullable(this.etaDdim, options.etaDdim) &&
        Objects.equals(this.etaAncestral, options.etaAncestral) &&
        Objects.equals(this.ddimDiscretize, options.ddimDiscretize) &&
        equalsNullable(this.sChurn, options.sChurn) &&
        equalsNullable(this.sTmin, options.sTmin) &&
        equalsNullable(this.sTmax, options.sTmax) &&
        Objects.equals(this.sNoise, options.sNoise) &&
        Objects.equals(this.kSchedType, options.kSchedType) &&
        equalsNullable(this.sigmaMin, options.sigmaMin) &&
        equalsNullable(this.sigmaMax, options.sigmaMax) &&
        equalsNullable(this.rho, options.rho) &&
        equalsNullable(this.etaNoiseSeedDelta, options.etaNoiseSeedDelta) &&
        equalsNullable(this.alwaysDiscardNextToLastSigma, options.alwaysDiscardNextToLastSigma) &&
        equalsNullable(this.sgmNoiseMultiplier, options.sgmNoiseMultiplier) &&
        Objects.equals(this.uniPcVariant, options.uniPcVariant) &&
        Objects.equals(this.uniPcSkipType, options.uniPcSkipType) &&
        Objects.equals(this.uniPcOrder, options.uniPcOrder) &&
        Objects.equals(this.uniPcLowerOrderFinal, options.uniPcLowerOrderFinal) &&
        equalsNullable(this.postprocessingEnableInMainUi, options.postprocessingEnableInMainUi) &&
        equalsNullable(this.postprocessingOperationOrder, options.postprocessingOperationOrder) &&
        Objects.equals(this.upscalingMaxImagesInCache, options.upscalingMaxImagesInCache) &&
        equalsNullable(this.disabledExtensions, options.disabledExtensions) &&
        Objects.equals(this.disableAllExtensions, options.disableAllExtensions) &&
        equalsNullable(this.restoreConfigStateFile, options.restoreConfigStateFile) &&
        equalsNullable(this.sdCheckpointHash, options.sdCheckpointHash) &&
        Objects.equals(this.sdLora, options.sdLora) &&
        Objects.equals(this.loraPreferredName, options.loraPreferredName) &&
        Objects.equals(this.loraAddHashesToInfotext, options.loraAddHashesToInfotext) &&
        equalsNullable(this.loraShowAll, options.loraShowAll) &&
        equalsNullable(this.loraHideUnknownForVersions, options.loraHideUnknownForVersions) &&
        equalsNullable(this.loraInMemoryLimit, options.loraInMemoryLimit) &&
        equalsNullable(this.loraFunctional, options.loraFunctional) &&
        Objects.equals(this.canvasHotkeyZoom, options.canvasHotkeyZoom) &&
        Objects.equals(this.canvasHotkeyAdjust, options.canvasHotkeyAdjust) &&
        Objects.equals(this.canvasHotkeyMove, options.canvasHotkeyMove) &&
        Objects.equals(this.canvasHotkeyFullscreen, options.canvasHotkeyFullscreen) &&
        Objects.equals(this.canvasHotkeyReset, options.canvasHotkeyReset) &&
        Objects.equals(this.canvasHotkeyOverlap, options.canvasHotkeyOverlap) &&
        Objects.equals(this.canvasShowTooltip, options.canvasShowTooltip) &&
        Objects.equals(this.canvasAutoExpand, options.canvasAutoExpand) &&
        equalsNullable(this.canvasBlurPrompt, options.canvasBlurPrompt) &&
        Objects.equals(this.canvasDisabledFunctions, options.canvasDisabledFunctions) &&
        equalsNullable(this.extraOptionsTxt2img, options.extraOptionsTxt2img) &&
        equalsNullable(this.extraOptionsImg2img, options.extraOptionsImg2img) &&
        Objects.equals(this.extraOptionsCols, options.extraOptionsCols) &&
        equalsNullable(this.extraOptionsAccordion, options.extraOptionsAccordion);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(samplesSave, samplesFormat, hashCodeNullable(samplesFilenamePattern), saveImagesAddNumber, gridSave, gridFormat, hashCodeNullable(gridExtendedFilename), gridOnlyIfMultiple, hashCodeNullable(gridPreventEmptySpots), hashCodeNullable(gridZipFilenamePattern), nRows, hashCodeNullable(font), gridTextActiveColor, gridTextInactiveColor, gridBackgroundColor, enablePnginfo, hashCodeNullable(saveTxt), hashCodeNullable(saveImagesBeforeFaceRestoration), hashCodeNullable(saveImagesBeforeHighresFix), hashCodeNullable(saveImagesBeforeColorCorrection), hashCodeNullable(saveMask), hashCodeNullable(saveMaskComposite), jpegQuality, hashCodeNullable(webpLossless), exportFor4chan, imgDownscaleThreshold, targetSideLength, imgMaxSizeMp, useOriginalNameBatch, hashCodeNullable(useUpscalerNameAsSuffix), saveSelectedOnly, hashCodeNullable(saveInitImg), hashCodeNullable(tempDir), hashCodeNullable(cleanTempDirAtStart), hashCodeNullable(saveIncompleteImages), hashCodeNullable(outdirSamples), outdirTxt2imgSamples, outdirImg2imgSamples, outdirExtrasSamples, hashCodeNullable(outdirGrids), outdirTxt2imgGrids, outdirImg2imgGrids, outdirSave, outdirInitImages, saveToDirs, gridSaveToDirs, hashCodeNullable(useSaveToDirsForUi), directoriesFilenamePattern, directoriesMaxPromptWords, esRGANTile, esRGANTileOverlap, realesrganEnabledModels, hashCodeNullable(upscalerForImg2img), hashCodeNullable(faceRestoration), faceRestorationModel, codeFormerWeight, hashCodeNullable(faceRestorationUnload), autoLaunchBrowser, hashCodeNullable(showWarnings), showGradioDeprecationWarnings, memmonPollRate, hashCodeNullable(samplesLogStdout), multipleTqdm, hashCodeNullable(printHypernetExtra), listHiddenFiles, hashCodeNullable(disableMmapLoadSafetensors), hideLdmPrints, apiEnableRequests, apiForbidLocalRequests, hashCodeNullable(apiUseragent), hashCodeNullable(unloadModelsWhenTraining), hashCodeNullable(pinMemory), hashCodeNullable(saveOptimizerState), saveTrainingSettingsToTxt, hashCodeNullable(datasetFilenameWordRegex), datasetFilenameJoinString, trainingImageRepeatsPerEpoch, trainingWriteCsvEvery, hashCodeNullable(trainingXattentionOptimizations), hashCodeNullable(trainingEnableTensorboard), hashCodeNullable(trainingTensorboardSaveImages), trainingTensorboardFlushEvery, hashCodeNullable(sdModelCheckpoint), sdCheckpointsLimit, sdCheckpointsKeepInCpu, hashCodeNullable(sdCheckpointCache), sdUnet, hashCodeNullable(enableQuantization), enableEmphasis, enableBatchSeeds, commaPaddingBacktrack, clIPStopAtLastLayers, hashCodeNullable(upcastAttn), randnSource, hashCodeNullable(tiling), hiresFixRefinerPass, hashCodeNullable(sdxlCropTop), hashCodeNullable(sdxlCropLeft), sdxlRefinerLowAestheticScore, sdxlRefinerHighAestheticScore, sdVaeExplanation, hashCodeNullable(sdVaeCheckpointCache), sdVae, sdVaeOverridesPerModelPreferences, autoVaePrecision, sdVaeEncodeMethod, sdVaeDecodeMethod, inpaintingMaskWeight, initialNoiseMultiplier, hashCodeNullable(img2imgExtraNoise), hashCodeNullable(img2imgColorCorrection), hashCodeNullable(img2imgFixSteps), img2imgBackgroundColor, img2imgEditorHeight, img2imgSketchDefaultBrushColor, img2imgInpaintMaskBrushColor, img2imgInpaintSketchDefaultBrushColor, hashCodeNullable(returnMask), hashCodeNullable(returnMaskComposite), crossAttentionOptimization, hashCodeNullable(sMinUncond), hashCodeNullable(tokenMergingRatio), hashCodeNullable(tokenMergingRatioImg2img), hashCodeNullable(tokenMergingRatioHr), hashCodeNullable(padCondUncond), persistentCondCache, batchCondUncond, hashCodeNullable(useOldEmphasisImplementation), hashCodeNullable(useOldKarrasSchedulerSigmas), hashCodeNullable(noDpmppSdeBatchDeterminism), hashCodeNullable(useOldHiresFixWidthHeight), hashCodeNullable(dontFixSecondOrderSamplersSchedule), hashCodeNullable(hiresFixUseFirstpassConds), hashCodeNullable(useOldScheduling), hashCodeNullable(interrogateKeepModelsInMemory), hashCodeNullable(interrogateReturnRanks), interrogateClipNumBeams, interrogateClipMinLength, interrogateClipMaxLength, interrogateClipDictLimit, hashCodeNullable(interrogateClipSkipCategories), interrogateDeepbooruScoreThreshold, deepbooruSortAlpha, deepbooruUseSpaces, deepbooruEscape, hashCodeNullable(deepbooruFilterTags), extraNetworksShowHiddenDirectories, extraNetworksHiddenModels, extraNetworksDefaultMultiplier, hashCodeNullable(extraNetworksCardWidth), hashCodeNullable(extraNetworksCardHeight), extraNetworksCardTextScale, extraNetworksCardShowDesc, extraNetworksAddTextSeparator, hashCodeNullable(uiExtraNetworksTabReorder), hashCodeNullable(textualInversionPrintAtLoad), textualInversionAddHashesToInfotext, sdHypernetwork, localization, gradioTheme, gradioThemesCache, hashCodeNullable(galleryHeight), returnGrid, hashCodeNullable(doNotShowImages), sendSeed, sendSize, jsModalLightbox, jsModalLightboxInitiallyZoomed, hashCodeNullable(jsModalLightboxGamepad), jsModalLightboxGamepadRepeat, showProgressInTitle, samplersInDropdown, dimensionsAndBatchTogether, keyeditPrecisionAttention, keyeditPrecisionExtra, keyeditDelimiters, keyeditMove, quicksettingsList, hashCodeNullable(uiTabOrder), hashCodeNullable(hiddenTabs), hashCodeNullable(uiReorderList), hashCodeNullable(hiresFixShowSampler), hashCodeNullable(hiresFixShowPrompts), hashCodeNullable(disableTokenCounters), addModelHashToInfo, addModelNameToInfo, hashCodeNullable(addUserNameToInfo), addVersionToInfotext, disableWeightsAutoSwap, infotextStyles, showProgressbar, livePreviewsEnable, livePreviewsImageFormat, showProgressGrid, showProgressEveryNSteps, showProgressType, hashCodeNullable(livePreviewAllowLowvramFull), livePreviewContent, livePreviewRefreshPeriod, hashCodeNullable(livePreviewFastInterrupt), hashCodeNullable(hideSamplers), hashCodeNullable(etaDdim), etaAncestral, ddimDiscretize, hashCodeNullable(sChurn), hashCodeNullable(sTmin), hashCodeNullable(sTmax), sNoise, kSchedType, hashCodeNullable(sigmaMin), hashCodeNullable(sigmaMax), hashCodeNullable(rho), hashCodeNullable(etaNoiseSeedDelta), hashCodeNullable(alwaysDiscardNextToLastSigma), hashCodeNullable(sgmNoiseMultiplier), uniPcVariant, uniPcSkipType, uniPcOrder, uniPcLowerOrderFinal, hashCodeNullable(postprocessingEnableInMainUi), hashCodeNullable(postprocessingOperationOrder), upscalingMaxImagesInCache, hashCodeNullable(disabledExtensions), disableAllExtensions, hashCodeNullable(restoreConfigStateFile), hashCodeNullable(sdCheckpointHash), sdLora, loraPreferredName, loraAddHashesToInfotext, hashCodeNullable(loraShowAll), hashCodeNullable(loraHideUnknownForVersions), hashCodeNullable(loraInMemoryLimit), hashCodeNullable(loraFunctional), canvasHotkeyZoom, canvasHotkeyAdjust, canvasHotkeyMove, canvasHotkeyFullscreen, canvasHotkeyReset, canvasHotkeyOverlap, canvasShowTooltip, canvasAutoExpand, hashCodeNullable(canvasBlurPrompt), canvasDisabledFunctions, hashCodeNullable(extraOptionsTxt2img), hashCodeNullable(extraOptionsImg2img), extraOptionsCols, hashCodeNullable(extraOptionsAccordion));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Options {\n");
    sb.append("    samplesSave: ").append(toIndentedString(samplesSave)).append("\n");
    sb.append("    samplesFormat: ").append(toIndentedString(samplesFormat)).append("\n");
    sb.append("    samplesFilenamePattern: ").append(toIndentedString(samplesFilenamePattern)).append("\n");
    sb.append("    saveImagesAddNumber: ").append(toIndentedString(saveImagesAddNumber)).append("\n");
    sb.append("    gridSave: ").append(toIndentedString(gridSave)).append("\n");
    sb.append("    gridFormat: ").append(toIndentedString(gridFormat)).append("\n");
    sb.append("    gridExtendedFilename: ").append(toIndentedString(gridExtendedFilename)).append("\n");
    sb.append("    gridOnlyIfMultiple: ").append(toIndentedString(gridOnlyIfMultiple)).append("\n");
    sb.append("    gridPreventEmptySpots: ").append(toIndentedString(gridPreventEmptySpots)).append("\n");
    sb.append("    gridZipFilenamePattern: ").append(toIndentedString(gridZipFilenamePattern)).append("\n");
    sb.append("    nRows: ").append(toIndentedString(nRows)).append("\n");
    sb.append("    font: ").append(toIndentedString(font)).append("\n");
    sb.append("    gridTextActiveColor: ").append(toIndentedString(gridTextActiveColor)).append("\n");
    sb.append("    gridTextInactiveColor: ").append(toIndentedString(gridTextInactiveColor)).append("\n");
    sb.append("    gridBackgroundColor: ").append(toIndentedString(gridBackgroundColor)).append("\n");
    sb.append("    enablePnginfo: ").append(toIndentedString(enablePnginfo)).append("\n");
    sb.append("    saveTxt: ").append(toIndentedString(saveTxt)).append("\n");
    sb.append("    saveImagesBeforeFaceRestoration: ").append(toIndentedString(saveImagesBeforeFaceRestoration)).append("\n");
    sb.append("    saveImagesBeforeHighresFix: ").append(toIndentedString(saveImagesBeforeHighresFix)).append("\n");
    sb.append("    saveImagesBeforeColorCorrection: ").append(toIndentedString(saveImagesBeforeColorCorrection)).append("\n");
    sb.append("    saveMask: ").append(toIndentedString(saveMask)).append("\n");
    sb.append("    saveMaskComposite: ").append(toIndentedString(saveMaskComposite)).append("\n");
    sb.append("    jpegQuality: ").append(toIndentedString(jpegQuality)).append("\n");
    sb.append("    webpLossless: ").append(toIndentedString(webpLossless)).append("\n");
    sb.append("    exportFor4chan: ").append(toIndentedString(exportFor4chan)).append("\n");
    sb.append("    imgDownscaleThreshold: ").append(toIndentedString(imgDownscaleThreshold)).append("\n");
    sb.append("    targetSideLength: ").append(toIndentedString(targetSideLength)).append("\n");
    sb.append("    imgMaxSizeMp: ").append(toIndentedString(imgMaxSizeMp)).append("\n");
    sb.append("    useOriginalNameBatch: ").append(toIndentedString(useOriginalNameBatch)).append("\n");
    sb.append("    useUpscalerNameAsSuffix: ").append(toIndentedString(useUpscalerNameAsSuffix)).append("\n");
    sb.append("    saveSelectedOnly: ").append(toIndentedString(saveSelectedOnly)).append("\n");
    sb.append("    saveInitImg: ").append(toIndentedString(saveInitImg)).append("\n");
    sb.append("    tempDir: ").append(toIndentedString(tempDir)).append("\n");
    sb.append("    cleanTempDirAtStart: ").append(toIndentedString(cleanTempDirAtStart)).append("\n");
    sb.append("    saveIncompleteImages: ").append(toIndentedString(saveIncompleteImages)).append("\n");
    sb.append("    outdirSamples: ").append(toIndentedString(outdirSamples)).append("\n");
    sb.append("    outdirTxt2imgSamples: ").append(toIndentedString(outdirTxt2imgSamples)).append("\n");
    sb.append("    outdirImg2imgSamples: ").append(toIndentedString(outdirImg2imgSamples)).append("\n");
    sb.append("    outdirExtrasSamples: ").append(toIndentedString(outdirExtrasSamples)).append("\n");
    sb.append("    outdirGrids: ").append(toIndentedString(outdirGrids)).append("\n");
    sb.append("    outdirTxt2imgGrids: ").append(toIndentedString(outdirTxt2imgGrids)).append("\n");
    sb.append("    outdirImg2imgGrids: ").append(toIndentedString(outdirImg2imgGrids)).append("\n");
    sb.append("    outdirSave: ").append(toIndentedString(outdirSave)).append("\n");
    sb.append("    outdirInitImages: ").append(toIndentedString(outdirInitImages)).append("\n");
    sb.append("    saveToDirs: ").append(toIndentedString(saveToDirs)).append("\n");
    sb.append("    gridSaveToDirs: ").append(toIndentedString(gridSaveToDirs)).append("\n");
    sb.append("    useSaveToDirsForUi: ").append(toIndentedString(useSaveToDirsForUi)).append("\n");
    sb.append("    directoriesFilenamePattern: ").append(toIndentedString(directoriesFilenamePattern)).append("\n");
    sb.append("    directoriesMaxPromptWords: ").append(toIndentedString(directoriesMaxPromptWords)).append("\n");
    sb.append("    esRGANTile: ").append(toIndentedString(esRGANTile)).append("\n");
    sb.append("    esRGANTileOverlap: ").append(toIndentedString(esRGANTileOverlap)).append("\n");
    sb.append("    realesrganEnabledModels: ").append(toIndentedString(realesrganEnabledModels)).append("\n");
    sb.append("    upscalerForImg2img: ").append(toIndentedString(upscalerForImg2img)).append("\n");
    sb.append("    faceRestoration: ").append(toIndentedString(faceRestoration)).append("\n");
    sb.append("    faceRestorationModel: ").append(toIndentedString(faceRestorationModel)).append("\n");
    sb.append("    codeFormerWeight: ").append(toIndentedString(codeFormerWeight)).append("\n");
    sb.append("    faceRestorationUnload: ").append(toIndentedString(faceRestorationUnload)).append("\n");
    sb.append("    autoLaunchBrowser: ").append(toIndentedString(autoLaunchBrowser)).append("\n");
    sb.append("    showWarnings: ").append(toIndentedString(showWarnings)).append("\n");
    sb.append("    showGradioDeprecationWarnings: ").append(toIndentedString(showGradioDeprecationWarnings)).append("\n");
    sb.append("    memmonPollRate: ").append(toIndentedString(memmonPollRate)).append("\n");
    sb.append("    samplesLogStdout: ").append(toIndentedString(samplesLogStdout)).append("\n");
    sb.append("    multipleTqdm: ").append(toIndentedString(multipleTqdm)).append("\n");
    sb.append("    printHypernetExtra: ").append(toIndentedString(printHypernetExtra)).append("\n");
    sb.append("    listHiddenFiles: ").append(toIndentedString(listHiddenFiles)).append("\n");
    sb.append("    disableMmapLoadSafetensors: ").append(toIndentedString(disableMmapLoadSafetensors)).append("\n");
    sb.append("    hideLdmPrints: ").append(toIndentedString(hideLdmPrints)).append("\n");
    sb.append("    apiEnableRequests: ").append(toIndentedString(apiEnableRequests)).append("\n");
    sb.append("    apiForbidLocalRequests: ").append(toIndentedString(apiForbidLocalRequests)).append("\n");
    sb.append("    apiUseragent: ").append(toIndentedString(apiUseragent)).append("\n");
    sb.append("    unloadModelsWhenTraining: ").append(toIndentedString(unloadModelsWhenTraining)).append("\n");
    sb.append("    pinMemory: ").append(toIndentedString(pinMemory)).append("\n");
    sb.append("    saveOptimizerState: ").append(toIndentedString(saveOptimizerState)).append("\n");
    sb.append("    saveTrainingSettingsToTxt: ").append(toIndentedString(saveTrainingSettingsToTxt)).append("\n");
    sb.append("    datasetFilenameWordRegex: ").append(toIndentedString(datasetFilenameWordRegex)).append("\n");
    sb.append("    datasetFilenameJoinString: ").append(toIndentedString(datasetFilenameJoinString)).append("\n");
    sb.append("    trainingImageRepeatsPerEpoch: ").append(toIndentedString(trainingImageRepeatsPerEpoch)).append("\n");
    sb.append("    trainingWriteCsvEvery: ").append(toIndentedString(trainingWriteCsvEvery)).append("\n");
    sb.append("    trainingXattentionOptimizations: ").append(toIndentedString(trainingXattentionOptimizations)).append("\n");
    sb.append("    trainingEnableTensorboard: ").append(toIndentedString(trainingEnableTensorboard)).append("\n");
    sb.append("    trainingTensorboardSaveImages: ").append(toIndentedString(trainingTensorboardSaveImages)).append("\n");
    sb.append("    trainingTensorboardFlushEvery: ").append(toIndentedString(trainingTensorboardFlushEvery)).append("\n");
    sb.append("    sdModelCheckpoint: ").append(toIndentedString(sdModelCheckpoint)).append("\n");
    sb.append("    sdCheckpointsLimit: ").append(toIndentedString(sdCheckpointsLimit)).append("\n");
    sb.append("    sdCheckpointsKeepInCpu: ").append(toIndentedString(sdCheckpointsKeepInCpu)).append("\n");
    sb.append("    sdCheckpointCache: ").append(toIndentedString(sdCheckpointCache)).append("\n");
    sb.append("    sdUnet: ").append(toIndentedString(sdUnet)).append("\n");
    sb.append("    enableQuantization: ").append(toIndentedString(enableQuantization)).append("\n");
    sb.append("    enableEmphasis: ").append(toIndentedString(enableEmphasis)).append("\n");
    sb.append("    enableBatchSeeds: ").append(toIndentedString(enableBatchSeeds)).append("\n");
    sb.append("    commaPaddingBacktrack: ").append(toIndentedString(commaPaddingBacktrack)).append("\n");
    sb.append("    clIPStopAtLastLayers: ").append(toIndentedString(clIPStopAtLastLayers)).append("\n");
    sb.append("    upcastAttn: ").append(toIndentedString(upcastAttn)).append("\n");
    sb.append("    randnSource: ").append(toIndentedString(randnSource)).append("\n");
    sb.append("    tiling: ").append(toIndentedString(tiling)).append("\n");
    sb.append("    hiresFixRefinerPass: ").append(toIndentedString(hiresFixRefinerPass)).append("\n");
    sb.append("    sdxlCropTop: ").append(toIndentedString(sdxlCropTop)).append("\n");
    sb.append("    sdxlCropLeft: ").append(toIndentedString(sdxlCropLeft)).append("\n");
    sb.append("    sdxlRefinerLowAestheticScore: ").append(toIndentedString(sdxlRefinerLowAestheticScore)).append("\n");
    sb.append("    sdxlRefinerHighAestheticScore: ").append(toIndentedString(sdxlRefinerHighAestheticScore)).append("\n");
    sb.append("    sdVaeExplanation: ").append(toIndentedString(sdVaeExplanation)).append("\n");
    sb.append("    sdVaeCheckpointCache: ").append(toIndentedString(sdVaeCheckpointCache)).append("\n");
    sb.append("    sdVae: ").append(toIndentedString(sdVae)).append("\n");
    sb.append("    sdVaeOverridesPerModelPreferences: ").append(toIndentedString(sdVaeOverridesPerModelPreferences)).append("\n");
    sb.append("    autoVaePrecision: ").append(toIndentedString(autoVaePrecision)).append("\n");
    sb.append("    sdVaeEncodeMethod: ").append(toIndentedString(sdVaeEncodeMethod)).append("\n");
    sb.append("    sdVaeDecodeMethod: ").append(toIndentedString(sdVaeDecodeMethod)).append("\n");
    sb.append("    inpaintingMaskWeight: ").append(toIndentedString(inpaintingMaskWeight)).append("\n");
    sb.append("    initialNoiseMultiplier: ").append(toIndentedString(initialNoiseMultiplier)).append("\n");
    sb.append("    img2imgExtraNoise: ").append(toIndentedString(img2imgExtraNoise)).append("\n");
    sb.append("    img2imgColorCorrection: ").append(toIndentedString(img2imgColorCorrection)).append("\n");
    sb.append("    img2imgFixSteps: ").append(toIndentedString(img2imgFixSteps)).append("\n");
    sb.append("    img2imgBackgroundColor: ").append(toIndentedString(img2imgBackgroundColor)).append("\n");
    sb.append("    img2imgEditorHeight: ").append(toIndentedString(img2imgEditorHeight)).append("\n");
    sb.append("    img2imgSketchDefaultBrushColor: ").append(toIndentedString(img2imgSketchDefaultBrushColor)).append("\n");
    sb.append("    img2imgInpaintMaskBrushColor: ").append(toIndentedString(img2imgInpaintMaskBrushColor)).append("\n");
    sb.append("    img2imgInpaintSketchDefaultBrushColor: ").append(toIndentedString(img2imgInpaintSketchDefaultBrushColor)).append("\n");
    sb.append("    returnMask: ").append(toIndentedString(returnMask)).append("\n");
    sb.append("    returnMaskComposite: ").append(toIndentedString(returnMaskComposite)).append("\n");
    sb.append("    crossAttentionOptimization: ").append(toIndentedString(crossAttentionOptimization)).append("\n");
    sb.append("    sMinUncond: ").append(toIndentedString(sMinUncond)).append("\n");
    sb.append("    tokenMergingRatio: ").append(toIndentedString(tokenMergingRatio)).append("\n");
    sb.append("    tokenMergingRatioImg2img: ").append(toIndentedString(tokenMergingRatioImg2img)).append("\n");
    sb.append("    tokenMergingRatioHr: ").append(toIndentedString(tokenMergingRatioHr)).append("\n");
    sb.append("    padCondUncond: ").append(toIndentedString(padCondUncond)).append("\n");
    sb.append("    persistentCondCache: ").append(toIndentedString(persistentCondCache)).append("\n");
    sb.append("    batchCondUncond: ").append(toIndentedString(batchCondUncond)).append("\n");
    sb.append("    useOldEmphasisImplementation: ").append(toIndentedString(useOldEmphasisImplementation)).append("\n");
    sb.append("    useOldKarrasSchedulerSigmas: ").append(toIndentedString(useOldKarrasSchedulerSigmas)).append("\n");
    sb.append("    noDpmppSdeBatchDeterminism: ").append(toIndentedString(noDpmppSdeBatchDeterminism)).append("\n");
    sb.append("    useOldHiresFixWidthHeight: ").append(toIndentedString(useOldHiresFixWidthHeight)).append("\n");
    sb.append("    dontFixSecondOrderSamplersSchedule: ").append(toIndentedString(dontFixSecondOrderSamplersSchedule)).append("\n");
    sb.append("    hiresFixUseFirstpassConds: ").append(toIndentedString(hiresFixUseFirstpassConds)).append("\n");
    sb.append("    useOldScheduling: ").append(toIndentedString(useOldScheduling)).append("\n");
    sb.append("    interrogateKeepModelsInMemory: ").append(toIndentedString(interrogateKeepModelsInMemory)).append("\n");
    sb.append("    interrogateReturnRanks: ").append(toIndentedString(interrogateReturnRanks)).append("\n");
    sb.append("    interrogateClipNumBeams: ").append(toIndentedString(interrogateClipNumBeams)).append("\n");
    sb.append("    interrogateClipMinLength: ").append(toIndentedString(interrogateClipMinLength)).append("\n");
    sb.append("    interrogateClipMaxLength: ").append(toIndentedString(interrogateClipMaxLength)).append("\n");
    sb.append("    interrogateClipDictLimit: ").append(toIndentedString(interrogateClipDictLimit)).append("\n");
    sb.append("    interrogateClipSkipCategories: ").append(toIndentedString(interrogateClipSkipCategories)).append("\n");
    sb.append("    interrogateDeepbooruScoreThreshold: ").append(toIndentedString(interrogateDeepbooruScoreThreshold)).append("\n");
    sb.append("    deepbooruSortAlpha: ").append(toIndentedString(deepbooruSortAlpha)).append("\n");
    sb.append("    deepbooruUseSpaces: ").append(toIndentedString(deepbooruUseSpaces)).append("\n");
    sb.append("    deepbooruEscape: ").append(toIndentedString(deepbooruEscape)).append("\n");
    sb.append("    deepbooruFilterTags: ").append(toIndentedString(deepbooruFilterTags)).append("\n");
    sb.append("    extraNetworksShowHiddenDirectories: ").append(toIndentedString(extraNetworksShowHiddenDirectories)).append("\n");
    sb.append("    extraNetworksHiddenModels: ").append(toIndentedString(extraNetworksHiddenModels)).append("\n");
    sb.append("    extraNetworksDefaultMultiplier: ").append(toIndentedString(extraNetworksDefaultMultiplier)).append("\n");
    sb.append("    extraNetworksCardWidth: ").append(toIndentedString(extraNetworksCardWidth)).append("\n");
    sb.append("    extraNetworksCardHeight: ").append(toIndentedString(extraNetworksCardHeight)).append("\n");
    sb.append("    extraNetworksCardTextScale: ").append(toIndentedString(extraNetworksCardTextScale)).append("\n");
    sb.append("    extraNetworksCardShowDesc: ").append(toIndentedString(extraNetworksCardShowDesc)).append("\n");
    sb.append("    extraNetworksAddTextSeparator: ").append(toIndentedString(extraNetworksAddTextSeparator)).append("\n");
    sb.append("    uiExtraNetworksTabReorder: ").append(toIndentedString(uiExtraNetworksTabReorder)).append("\n");
    sb.append("    textualInversionPrintAtLoad: ").append(toIndentedString(textualInversionPrintAtLoad)).append("\n");
    sb.append("    textualInversionAddHashesToInfotext: ").append(toIndentedString(textualInversionAddHashesToInfotext)).append("\n");
    sb.append("    sdHypernetwork: ").append(toIndentedString(sdHypernetwork)).append("\n");
    sb.append("    localization: ").append(toIndentedString(localization)).append("\n");
    sb.append("    gradioTheme: ").append(toIndentedString(gradioTheme)).append("\n");
    sb.append("    gradioThemesCache: ").append(toIndentedString(gradioThemesCache)).append("\n");
    sb.append("    galleryHeight: ").append(toIndentedString(galleryHeight)).append("\n");
    sb.append("    returnGrid: ").append(toIndentedString(returnGrid)).append("\n");
    sb.append("    doNotShowImages: ").append(toIndentedString(doNotShowImages)).append("\n");
    sb.append("    sendSeed: ").append(toIndentedString(sendSeed)).append("\n");
    sb.append("    sendSize: ").append(toIndentedString(sendSize)).append("\n");
    sb.append("    jsModalLightbox: ").append(toIndentedString(jsModalLightbox)).append("\n");
    sb.append("    jsModalLightboxInitiallyZoomed: ").append(toIndentedString(jsModalLightboxInitiallyZoomed)).append("\n");
    sb.append("    jsModalLightboxGamepad: ").append(toIndentedString(jsModalLightboxGamepad)).append("\n");
    sb.append("    jsModalLightboxGamepadRepeat: ").append(toIndentedString(jsModalLightboxGamepadRepeat)).append("\n");
    sb.append("    showProgressInTitle: ").append(toIndentedString(showProgressInTitle)).append("\n");
    sb.append("    samplersInDropdown: ").append(toIndentedString(samplersInDropdown)).append("\n");
    sb.append("    dimensionsAndBatchTogether: ").append(toIndentedString(dimensionsAndBatchTogether)).append("\n");
    sb.append("    keyeditPrecisionAttention: ").append(toIndentedString(keyeditPrecisionAttention)).append("\n");
    sb.append("    keyeditPrecisionExtra: ").append(toIndentedString(keyeditPrecisionExtra)).append("\n");
    sb.append("    keyeditDelimiters: ").append(toIndentedString(keyeditDelimiters)).append("\n");
    sb.append("    keyeditMove: ").append(toIndentedString(keyeditMove)).append("\n");
    sb.append("    quicksettingsList: ").append(toIndentedString(quicksettingsList)).append("\n");
    sb.append("    uiTabOrder: ").append(toIndentedString(uiTabOrder)).append("\n");
    sb.append("    hiddenTabs: ").append(toIndentedString(hiddenTabs)).append("\n");
    sb.append("    uiReorderList: ").append(toIndentedString(uiReorderList)).append("\n");
    sb.append("    hiresFixShowSampler: ").append(toIndentedString(hiresFixShowSampler)).append("\n");
    sb.append("    hiresFixShowPrompts: ").append(toIndentedString(hiresFixShowPrompts)).append("\n");
    sb.append("    disableTokenCounters: ").append(toIndentedString(disableTokenCounters)).append("\n");
    sb.append("    addModelHashToInfo: ").append(toIndentedString(addModelHashToInfo)).append("\n");
    sb.append("    addModelNameToInfo: ").append(toIndentedString(addModelNameToInfo)).append("\n");
    sb.append("    addUserNameToInfo: ").append(toIndentedString(addUserNameToInfo)).append("\n");
    sb.append("    addVersionToInfotext: ").append(toIndentedString(addVersionToInfotext)).append("\n");
    sb.append("    disableWeightsAutoSwap: ").append(toIndentedString(disableWeightsAutoSwap)).append("\n");
    sb.append("    infotextStyles: ").append(toIndentedString(infotextStyles)).append("\n");
    sb.append("    showProgressbar: ").append(toIndentedString(showProgressbar)).append("\n");
    sb.append("    livePreviewsEnable: ").append(toIndentedString(livePreviewsEnable)).append("\n");
    sb.append("    livePreviewsImageFormat: ").append(toIndentedString(livePreviewsImageFormat)).append("\n");
    sb.append("    showProgressGrid: ").append(toIndentedString(showProgressGrid)).append("\n");
    sb.append("    showProgressEveryNSteps: ").append(toIndentedString(showProgressEveryNSteps)).append("\n");
    sb.append("    showProgressType: ").append(toIndentedString(showProgressType)).append("\n");
    sb.append("    livePreviewAllowLowvramFull: ").append(toIndentedString(livePreviewAllowLowvramFull)).append("\n");
    sb.append("    livePreviewContent: ").append(toIndentedString(livePreviewContent)).append("\n");
    sb.append("    livePreviewRefreshPeriod: ").append(toIndentedString(livePreviewRefreshPeriod)).append("\n");
    sb.append("    livePreviewFastInterrupt: ").append(toIndentedString(livePreviewFastInterrupt)).append("\n");
    sb.append("    hideSamplers: ").append(toIndentedString(hideSamplers)).append("\n");
    sb.append("    etaDdim: ").append(toIndentedString(etaDdim)).append("\n");
    sb.append("    etaAncestral: ").append(toIndentedString(etaAncestral)).append("\n");
    sb.append("    ddimDiscretize: ").append(toIndentedString(ddimDiscretize)).append("\n");
    sb.append("    sChurn: ").append(toIndentedString(sChurn)).append("\n");
    sb.append("    sTmin: ").append(toIndentedString(sTmin)).append("\n");
    sb.append("    sTmax: ").append(toIndentedString(sTmax)).append("\n");
    sb.append("    sNoise: ").append(toIndentedString(sNoise)).append("\n");
    sb.append("    kSchedType: ").append(toIndentedString(kSchedType)).append("\n");
    sb.append("    sigmaMin: ").append(toIndentedString(sigmaMin)).append("\n");
    sb.append("    sigmaMax: ").append(toIndentedString(sigmaMax)).append("\n");
    sb.append("    rho: ").append(toIndentedString(rho)).append("\n");
    sb.append("    etaNoiseSeedDelta: ").append(toIndentedString(etaNoiseSeedDelta)).append("\n");
    sb.append("    alwaysDiscardNextToLastSigma: ").append(toIndentedString(alwaysDiscardNextToLastSigma)).append("\n");
    sb.append("    sgmNoiseMultiplier: ").append(toIndentedString(sgmNoiseMultiplier)).append("\n");
    sb.append("    uniPcVariant: ").append(toIndentedString(uniPcVariant)).append("\n");
    sb.append("    uniPcSkipType: ").append(toIndentedString(uniPcSkipType)).append("\n");
    sb.append("    uniPcOrder: ").append(toIndentedString(uniPcOrder)).append("\n");
    sb.append("    uniPcLowerOrderFinal: ").append(toIndentedString(uniPcLowerOrderFinal)).append("\n");
    sb.append("    postprocessingEnableInMainUi: ").append(toIndentedString(postprocessingEnableInMainUi)).append("\n");
    sb.append("    postprocessingOperationOrder: ").append(toIndentedString(postprocessingOperationOrder)).append("\n");
    sb.append("    upscalingMaxImagesInCache: ").append(toIndentedString(upscalingMaxImagesInCache)).append("\n");
    sb.append("    disabledExtensions: ").append(toIndentedString(disabledExtensions)).append("\n");
    sb.append("    disableAllExtensions: ").append(toIndentedString(disableAllExtensions)).append("\n");
    sb.append("    restoreConfigStateFile: ").append(toIndentedString(restoreConfigStateFile)).append("\n");
    sb.append("    sdCheckpointHash: ").append(toIndentedString(sdCheckpointHash)).append("\n");
    sb.append("    sdLora: ").append(toIndentedString(sdLora)).append("\n");
    sb.append("    loraPreferredName: ").append(toIndentedString(loraPreferredName)).append("\n");
    sb.append("    loraAddHashesToInfotext: ").append(toIndentedString(loraAddHashesToInfotext)).append("\n");
    sb.append("    loraShowAll: ").append(toIndentedString(loraShowAll)).append("\n");
    sb.append("    loraHideUnknownForVersions: ").append(toIndentedString(loraHideUnknownForVersions)).append("\n");
    sb.append("    loraInMemoryLimit: ").append(toIndentedString(loraInMemoryLimit)).append("\n");
    sb.append("    loraFunctional: ").append(toIndentedString(loraFunctional)).append("\n");
    sb.append("    canvasHotkeyZoom: ").append(toIndentedString(canvasHotkeyZoom)).append("\n");
    sb.append("    canvasHotkeyAdjust: ").append(toIndentedString(canvasHotkeyAdjust)).append("\n");
    sb.append("    canvasHotkeyMove: ").append(toIndentedString(canvasHotkeyMove)).append("\n");
    sb.append("    canvasHotkeyFullscreen: ").append(toIndentedString(canvasHotkeyFullscreen)).append("\n");
    sb.append("    canvasHotkeyReset: ").append(toIndentedString(canvasHotkeyReset)).append("\n");
    sb.append("    canvasHotkeyOverlap: ").append(toIndentedString(canvasHotkeyOverlap)).append("\n");
    sb.append("    canvasShowTooltip: ").append(toIndentedString(canvasShowTooltip)).append("\n");
    sb.append("    canvasAutoExpand: ").append(toIndentedString(canvasAutoExpand)).append("\n");
    sb.append("    canvasBlurPrompt: ").append(toIndentedString(canvasBlurPrompt)).append("\n");
    sb.append("    canvasDisabledFunctions: ").append(toIndentedString(canvasDisabledFunctions)).append("\n");
    sb.append("    extraOptionsTxt2img: ").append(toIndentedString(extraOptionsTxt2img)).append("\n");
    sb.append("    extraOptionsImg2img: ").append(toIndentedString(extraOptionsImg2img)).append("\n");
    sb.append("    extraOptionsCols: ").append(toIndentedString(extraOptionsCols)).append("\n");
    sb.append("    extraOptionsAccordion: ").append(toIndentedString(extraOptionsAccordion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

