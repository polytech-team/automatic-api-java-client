/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ModulesProgressProgressResponse
 */
@JsonPropertyOrder({
  ModulesProgressProgressResponse.JSON_PROPERTY_ACTIVE,
  ModulesProgressProgressResponse.JSON_PROPERTY_QUEUED,
  ModulesProgressProgressResponse.JSON_PROPERTY_COMPLETED,
  ModulesProgressProgressResponse.JSON_PROPERTY_PROGRESS,
  ModulesProgressProgressResponse.JSON_PROPERTY_ETA,
  ModulesProgressProgressResponse.JSON_PROPERTY_LIVE_PREVIEW,
  ModulesProgressProgressResponse.JSON_PROPERTY_ID_LIVE_PREVIEW,
  ModulesProgressProgressResponse.JSON_PROPERTY_TEXTINFO
})
@JsonTypeName("modules__progress__ProgressResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-27T01:31:55.639766089+03:00[Europe/Moscow]")
public class ModulesProgressProgressResponse {
  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_QUEUED = "queued";
  private Boolean queued;

  public static final String JSON_PROPERTY_COMPLETED = "completed";
  private Boolean completed;

  public static final String JSON_PROPERTY_PROGRESS = "progress";
  private BigDecimal progress;

  public static final String JSON_PROPERTY_ETA = "eta";
  private BigDecimal eta;

  public static final String JSON_PROPERTY_LIVE_PREVIEW = "live_preview";
  private String livePreview;

  public static final String JSON_PROPERTY_ID_LIVE_PREVIEW = "id_live_preview";
  private Integer idLivePreview;

  public static final String JSON_PROPERTY_TEXTINFO = "textinfo";
  private String textinfo;

  public ModulesProgressProgressResponse() {
  }

  public ModulesProgressProgressResponse active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public ModulesProgressProgressResponse queued(Boolean queued) {
    
    this.queued = queued;
    return this;
  }

   /**
   * Get queued
   * @return queued
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUEUED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getQueued() {
    return queued;
  }


  @JsonProperty(JSON_PROPERTY_QUEUED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQueued(Boolean queued) {
    this.queued = queued;
  }


  public ModulesProgressProgressResponse completed(Boolean completed) {
    
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCompleted() {
    return completed;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  public ModulesProgressProgressResponse progress(BigDecimal progress) {
    
    this.progress = progress;
    return this;
  }

   /**
   * The progress with a range of 0 to 1
   * @return progress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getProgress() {
    return progress;
  }


  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgress(BigDecimal progress) {
    this.progress = progress;
  }


  public ModulesProgressProgressResponse eta(BigDecimal eta) {
    
    this.eta = eta;
    return this;
  }

   /**
   * Get eta
   * @return eta
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ETA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getEta() {
    return eta;
  }


  @JsonProperty(JSON_PROPERTY_ETA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEta(BigDecimal eta) {
    this.eta = eta;
  }


  public ModulesProgressProgressResponse livePreview(String livePreview) {
    
    this.livePreview = livePreview;
    return this;
  }

   /**
   * Current live preview; a data: uri
   * @return livePreview
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLivePreview() {
    return livePreview;
  }


  @JsonProperty(JSON_PROPERTY_LIVE_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLivePreview(String livePreview) {
    this.livePreview = livePreview;
  }


  public ModulesProgressProgressResponse idLivePreview(Integer idLivePreview) {
    
    this.idLivePreview = idLivePreview;
    return this;
  }

   /**
   * Send this together with next request to prevent receiving same image
   * @return idLivePreview
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_LIVE_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIdLivePreview() {
    return idLivePreview;
  }


  @JsonProperty(JSON_PROPERTY_ID_LIVE_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdLivePreview(Integer idLivePreview) {
    this.idLivePreview = idLivePreview;
  }


  public ModulesProgressProgressResponse textinfo(String textinfo) {
    
    this.textinfo = textinfo;
    return this;
  }

   /**
   * Info text used by WebUI.
   * @return textinfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXTINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTextinfo() {
    return textinfo;
  }


  @JsonProperty(JSON_PROPERTY_TEXTINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextinfo(String textinfo) {
    this.textinfo = textinfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModulesProgressProgressResponse modulesProgressProgressResponse = (ModulesProgressProgressResponse) o;
    return Objects.equals(this.active, modulesProgressProgressResponse.active) &&
        Objects.equals(this.queued, modulesProgressProgressResponse.queued) &&
        Objects.equals(this.completed, modulesProgressProgressResponse.completed) &&
        Objects.equals(this.progress, modulesProgressProgressResponse.progress) &&
        Objects.equals(this.eta, modulesProgressProgressResponse.eta) &&
        Objects.equals(this.livePreview, modulesProgressProgressResponse.livePreview) &&
        Objects.equals(this.idLivePreview, modulesProgressProgressResponse.idLivePreview) &&
        Objects.equals(this.textinfo, modulesProgressProgressResponse.textinfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, queued, completed, progress, eta, livePreview, idLivePreview, textinfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModulesProgressProgressResponse {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    queued: ").append(toIndentedString(queued)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    eta: ").append(toIndentedString(eta)).append("\n");
    sb.append("    livePreview: ").append(toIndentedString(livePreview)).append("\n");
    sb.append("    idLivePreview: ").append(toIndentedString(idLivePreview)).append("\n");
    sb.append("    textinfo: ").append(toIndentedString(textinfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

