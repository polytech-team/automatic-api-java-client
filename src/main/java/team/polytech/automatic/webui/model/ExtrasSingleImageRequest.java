/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExtrasSingleImageRequest
 */
@JsonPropertyOrder({
  ExtrasSingleImageRequest.JSON_PROPERTY_RESIZE_MODE,
  ExtrasSingleImageRequest.JSON_PROPERTY_SHOW_EXTRAS_RESULTS,
  ExtrasSingleImageRequest.JSON_PROPERTY_GFPGAN_VISIBILITY,
  ExtrasSingleImageRequest.JSON_PROPERTY_CODEFORMER_VISIBILITY,
  ExtrasSingleImageRequest.JSON_PROPERTY_CODEFORMER_WEIGHT,
  ExtrasSingleImageRequest.JSON_PROPERTY_UPSCALING_RESIZE,
  ExtrasSingleImageRequest.JSON_PROPERTY_UPSCALING_RESIZE_W,
  ExtrasSingleImageRequest.JSON_PROPERTY_UPSCALING_RESIZE_H,
  ExtrasSingleImageRequest.JSON_PROPERTY_UPSCALING_CROP,
  ExtrasSingleImageRequest.JSON_PROPERTY_UPSCALER1,
  ExtrasSingleImageRequest.JSON_PROPERTY_UPSCALER2,
  ExtrasSingleImageRequest.JSON_PROPERTY_EXTRAS_UPSCALER2_VISIBILITY,
  ExtrasSingleImageRequest.JSON_PROPERTY_UPSCALE_FIRST,
  ExtrasSingleImageRequest.JSON_PROPERTY_IMAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-27T01:31:55.639766089+03:00[Europe/Moscow]")
public class ExtrasSingleImageRequest {
  /**
   * Sets the resize mode: 0 to upscale by upscaling_resize amount, 1 to upscale up to upscaling_resize_h x upscaling_resize_w.
   */
  public enum ResizeModeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    ResizeModeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResizeModeEnum fromValue(Integer value) {
      for (ResizeModeEnum b : ResizeModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESIZE_MODE = "resize_mode";
  private ResizeModeEnum resizeMode = ResizeModeEnum.NUMBER_0;

  public static final String JSON_PROPERTY_SHOW_EXTRAS_RESULTS = "show_extras_results";
  private Boolean showExtrasResults = true;

  public static final String JSON_PROPERTY_GFPGAN_VISIBILITY = "gfpgan_visibility";
  private BigDecimal gfpganVisibility = new BigDecimal("0");

  public static final String JSON_PROPERTY_CODEFORMER_VISIBILITY = "codeformer_visibility";
  private BigDecimal codeformerVisibility = new BigDecimal("0");

  public static final String JSON_PROPERTY_CODEFORMER_WEIGHT = "codeformer_weight";
  private BigDecimal codeformerWeight = new BigDecimal("0");

  public static final String JSON_PROPERTY_UPSCALING_RESIZE = "upscaling_resize";
  private BigDecimal upscalingResize = new BigDecimal("2");

  public static final String JSON_PROPERTY_UPSCALING_RESIZE_W = "upscaling_resize_w";
  private Integer upscalingResizeW = 512;

  public static final String JSON_PROPERTY_UPSCALING_RESIZE_H = "upscaling_resize_h";
  private Integer upscalingResizeH = 512;

  public static final String JSON_PROPERTY_UPSCALING_CROP = "upscaling_crop";
  private Boolean upscalingCrop = true;

  public static final String JSON_PROPERTY_UPSCALER1 = "upscaler_1";
  private String upscaler1 = "None";

  public static final String JSON_PROPERTY_UPSCALER2 = "upscaler_2";
  private String upscaler2 = "None";

  public static final String JSON_PROPERTY_EXTRAS_UPSCALER2_VISIBILITY = "extras_upscaler_2_visibility";
  private BigDecimal extrasUpscaler2Visibility = new BigDecimal("0");

  public static final String JSON_PROPERTY_UPSCALE_FIRST = "upscale_first";
  private Boolean upscaleFirst = false;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private String image = "";

  public ExtrasSingleImageRequest() {
  }

  public ExtrasSingleImageRequest resizeMode(ResizeModeEnum resizeMode) {
    
    this.resizeMode = resizeMode;
    return this;
  }

   /**
   * Sets the resize mode: 0 to upscale by upscaling_resize amount, 1 to upscale up to upscaling_resize_h x upscaling_resize_w.
   * @return resizeMode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESIZE_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResizeModeEnum getResizeMode() {
    return resizeMode;
  }


  @JsonProperty(JSON_PROPERTY_RESIZE_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResizeMode(ResizeModeEnum resizeMode) {
    this.resizeMode = resizeMode;
  }


  public ExtrasSingleImageRequest showExtrasResults(Boolean showExtrasResults) {
    
    this.showExtrasResults = showExtrasResults;
    return this;
  }

   /**
   * Should the backend return the generated image?
   * @return showExtrasResults
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_EXTRAS_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowExtrasResults() {
    return showExtrasResults;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_EXTRAS_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowExtrasResults(Boolean showExtrasResults) {
    this.showExtrasResults = showExtrasResults;
  }


  public ExtrasSingleImageRequest gfpganVisibility(BigDecimal gfpganVisibility) {
    
    this.gfpganVisibility = gfpganVisibility;
    return this;
  }

   /**
   * Sets the visibility of GFPGAN, values should be between 0 and 1.
   * minimum: 0.0
   * maximum: 1.0
   * @return gfpganVisibility
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GFPGAN_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getGfpganVisibility() {
    return gfpganVisibility;
  }


  @JsonProperty(JSON_PROPERTY_GFPGAN_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGfpganVisibility(BigDecimal gfpganVisibility) {
    this.gfpganVisibility = gfpganVisibility;
  }


  public ExtrasSingleImageRequest codeformerVisibility(BigDecimal codeformerVisibility) {
    
    this.codeformerVisibility = codeformerVisibility;
    return this;
  }

   /**
   * Sets the visibility of CodeFormer, values should be between 0 and 1.
   * minimum: 0.0
   * maximum: 1.0
   * @return codeformerVisibility
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODEFORMER_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCodeformerVisibility() {
    return codeformerVisibility;
  }


  @JsonProperty(JSON_PROPERTY_CODEFORMER_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeformerVisibility(BigDecimal codeformerVisibility) {
    this.codeformerVisibility = codeformerVisibility;
  }


  public ExtrasSingleImageRequest codeformerWeight(BigDecimal codeformerWeight) {
    
    this.codeformerWeight = codeformerWeight;
    return this;
  }

   /**
   * Sets the weight of CodeFormer, values should be between 0 and 1.
   * minimum: 0.0
   * maximum: 1.0
   * @return codeformerWeight
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODEFORMER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCodeformerWeight() {
    return codeformerWeight;
  }


  @JsonProperty(JSON_PROPERTY_CODEFORMER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeformerWeight(BigDecimal codeformerWeight) {
    this.codeformerWeight = codeformerWeight;
  }


  public ExtrasSingleImageRequest upscalingResize(BigDecimal upscalingResize) {
    
    this.upscalingResize = upscalingResize;
    return this;
  }

   /**
   * By how much to upscale the image, only used when resize_mode&#x3D;0.
   * minimum: 1.0
   * maximum: 8.0
   * @return upscalingResize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALING_RESIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUpscalingResize() {
    return upscalingResize;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALING_RESIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscalingResize(BigDecimal upscalingResize) {
    this.upscalingResize = upscalingResize;
  }


  public ExtrasSingleImageRequest upscalingResizeW(Integer upscalingResizeW) {
    
    this.upscalingResizeW = upscalingResizeW;
    return this;
  }

   /**
   * Target width for the upscaler to hit. Only used when resize_mode&#x3D;1.
   * minimum: 1
   * @return upscalingResizeW
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALING_RESIZE_W)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUpscalingResizeW() {
    return upscalingResizeW;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALING_RESIZE_W)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscalingResizeW(Integer upscalingResizeW) {
    this.upscalingResizeW = upscalingResizeW;
  }


  public ExtrasSingleImageRequest upscalingResizeH(Integer upscalingResizeH) {
    
    this.upscalingResizeH = upscalingResizeH;
    return this;
  }

   /**
   * Target height for the upscaler to hit. Only used when resize_mode&#x3D;1.
   * minimum: 1
   * @return upscalingResizeH
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALING_RESIZE_H)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUpscalingResizeH() {
    return upscalingResizeH;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALING_RESIZE_H)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscalingResizeH(Integer upscalingResizeH) {
    this.upscalingResizeH = upscalingResizeH;
  }


  public ExtrasSingleImageRequest upscalingCrop(Boolean upscalingCrop) {
    
    this.upscalingCrop = upscalingCrop;
    return this;
  }

   /**
   * Should the upscaler crop the image to fit in the chosen size?
   * @return upscalingCrop
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALING_CROP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUpscalingCrop() {
    return upscalingCrop;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALING_CROP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscalingCrop(Boolean upscalingCrop) {
    this.upscalingCrop = upscalingCrop;
  }


  public ExtrasSingleImageRequest upscaler1(String upscaler1) {
    
    this.upscaler1 = upscaler1;
    return this;
  }

   /**
   * The name of the main upscaler to use, it has to be one of this list: None , Lanczos , Nearest , ESRGAN_4x , LDSR , R-ESRGAN 4x+ , R-ESRGAN 4x+ Anime6B , ScuNET GAN , ScuNET PSNR , SwinIR 4x
   * @return upscaler1
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALER1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpscaler1() {
    return upscaler1;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALER1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscaler1(String upscaler1) {
    this.upscaler1 = upscaler1;
  }


  public ExtrasSingleImageRequest upscaler2(String upscaler2) {
    
    this.upscaler2 = upscaler2;
    return this;
  }

   /**
   * The name of the secondary upscaler to use, it has to be one of this list: None , Lanczos , Nearest , ESRGAN_4x , LDSR , R-ESRGAN 4x+ , R-ESRGAN 4x+ Anime6B , ScuNET GAN , ScuNET PSNR , SwinIR 4x
   * @return upscaler2
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALER2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpscaler2() {
    return upscaler2;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALER2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscaler2(String upscaler2) {
    this.upscaler2 = upscaler2;
  }


  public ExtrasSingleImageRequest extrasUpscaler2Visibility(BigDecimal extrasUpscaler2Visibility) {
    
    this.extrasUpscaler2Visibility = extrasUpscaler2Visibility;
    return this;
  }

   /**
   * Sets the visibility of secondary upscaler, values should be between 0 and 1.
   * minimum: 0.0
   * maximum: 1.0
   * @return extrasUpscaler2Visibility
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRAS_UPSCALER2_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getExtrasUpscaler2Visibility() {
    return extrasUpscaler2Visibility;
  }


  @JsonProperty(JSON_PROPERTY_EXTRAS_UPSCALER2_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtrasUpscaler2Visibility(BigDecimal extrasUpscaler2Visibility) {
    this.extrasUpscaler2Visibility = extrasUpscaler2Visibility;
  }


  public ExtrasSingleImageRequest upscaleFirst(Boolean upscaleFirst) {
    
    this.upscaleFirst = upscaleFirst;
    return this;
  }

   /**
   * Should the upscaler run before restoring faces?
   * @return upscaleFirst
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPSCALE_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUpscaleFirst() {
    return upscaleFirst;
  }


  @JsonProperty(JSON_PROPERTY_UPSCALE_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpscaleFirst(Boolean upscaleFirst) {
    this.upscaleFirst = upscaleFirst;
  }


  public ExtrasSingleImageRequest image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Image to work on, must be a Base64 string containing the image&#39;s data.
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(String image) {
    this.image = image;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtrasSingleImageRequest extrasSingleImageRequest = (ExtrasSingleImageRequest) o;
    return Objects.equals(this.resizeMode, extrasSingleImageRequest.resizeMode) &&
        Objects.equals(this.showExtrasResults, extrasSingleImageRequest.showExtrasResults) &&
        Objects.equals(this.gfpganVisibility, extrasSingleImageRequest.gfpganVisibility) &&
        Objects.equals(this.codeformerVisibility, extrasSingleImageRequest.codeformerVisibility) &&
        Objects.equals(this.codeformerWeight, extrasSingleImageRequest.codeformerWeight) &&
        Objects.equals(this.upscalingResize, extrasSingleImageRequest.upscalingResize) &&
        Objects.equals(this.upscalingResizeW, extrasSingleImageRequest.upscalingResizeW) &&
        Objects.equals(this.upscalingResizeH, extrasSingleImageRequest.upscalingResizeH) &&
        Objects.equals(this.upscalingCrop, extrasSingleImageRequest.upscalingCrop) &&
        Objects.equals(this.upscaler1, extrasSingleImageRequest.upscaler1) &&
        Objects.equals(this.upscaler2, extrasSingleImageRequest.upscaler2) &&
        Objects.equals(this.extrasUpscaler2Visibility, extrasSingleImageRequest.extrasUpscaler2Visibility) &&
        Objects.equals(this.upscaleFirst, extrasSingleImageRequest.upscaleFirst) &&
        Objects.equals(this.image, extrasSingleImageRequest.image);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resizeMode, showExtrasResults, gfpganVisibility, codeformerVisibility, codeformerWeight, upscalingResize, upscalingResizeW, upscalingResizeH, upscalingCrop, upscaler1, upscaler2, extrasUpscaler2Visibility, upscaleFirst, image);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtrasSingleImageRequest {\n");
    sb.append("    resizeMode: ").append(toIndentedString(resizeMode)).append("\n");
    sb.append("    showExtrasResults: ").append(toIndentedString(showExtrasResults)).append("\n");
    sb.append("    gfpganVisibility: ").append(toIndentedString(gfpganVisibility)).append("\n");
    sb.append("    codeformerVisibility: ").append(toIndentedString(codeformerVisibility)).append("\n");
    sb.append("    codeformerWeight: ").append(toIndentedString(codeformerWeight)).append("\n");
    sb.append("    upscalingResize: ").append(toIndentedString(upscalingResize)).append("\n");
    sb.append("    upscalingResizeW: ").append(toIndentedString(upscalingResizeW)).append("\n");
    sb.append("    upscalingResizeH: ").append(toIndentedString(upscalingResizeH)).append("\n");
    sb.append("    upscalingCrop: ").append(toIndentedString(upscalingCrop)).append("\n");
    sb.append("    upscaler1: ").append(toIndentedString(upscaler1)).append("\n");
    sb.append("    upscaler2: ").append(toIndentedString(upscaler2)).append("\n");
    sb.append("    extrasUpscaler2Visibility: ").append(toIndentedString(extrasUpscaler2Visibility)).append("\n");
    sb.append("    upscaleFirst: ").append(toIndentedString(upscaleFirst)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

