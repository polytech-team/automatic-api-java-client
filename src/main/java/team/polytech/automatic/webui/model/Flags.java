/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Flags
 */
@JsonPropertyOrder({
  Flags.JSON_PROPERTY_F,
  Flags.JSON_PROPERTY_UPDATE_ALL_EXTENSIONS,
  Flags.JSON_PROPERTY_SKIP_PYTHON_VERSION_CHECK,
  Flags.JSON_PROPERTY_SKIP_TORCH_CUDA_TEST,
  Flags.JSON_PROPERTY_REINSTALL_XFORMERS,
  Flags.JSON_PROPERTY_REINSTALL_TORCH,
  Flags.JSON_PROPERTY_UPDATE_CHECK,
  Flags.JSON_PROPERTY_TEST_SERVER,
  Flags.JSON_PROPERTY_LOG_STARTUP,
  Flags.JSON_PROPERTY_SKIP_PREPARE_ENVIRONMENT,
  Flags.JSON_PROPERTY_SKIP_INSTALL,
  Flags.JSON_PROPERTY_DUMP_SYSINFO,
  Flags.JSON_PROPERTY_LOGLEVEL,
  Flags.JSON_PROPERTY_DO_NOT_DOWNLOAD_CLIP,
  Flags.JSON_PROPERTY_DATA_DIR,
  Flags.JSON_PROPERTY_CONFIG,
  Flags.JSON_PROPERTY_CKPT,
  Flags.JSON_PROPERTY_CKPT_DIR,
  Flags.JSON_PROPERTY_VAE_DIR,
  Flags.JSON_PROPERTY_GFPGAN_DIR,
  Flags.JSON_PROPERTY_GFPGAN_MODEL,
  Flags.JSON_PROPERTY_NO_HALF,
  Flags.JSON_PROPERTY_NO_HALF_VAE,
  Flags.JSON_PROPERTY_NO_PROGRESSBAR_HIDING,
  Flags.JSON_PROPERTY_MAX_BATCH_COUNT,
  Flags.JSON_PROPERTY_EMBEDDINGS_DIR,
  Flags.JSON_PROPERTY_TEXTUAL_INVERSION_TEMPLATES_DIR,
  Flags.JSON_PROPERTY_HYPERNETWORK_DIR,
  Flags.JSON_PROPERTY_LOCALIZATIONS_DIR,
  Flags.JSON_PROPERTY_ALLOW_CODE,
  Flags.JSON_PROPERTY_MEDVRAM,
  Flags.JSON_PROPERTY_MEDVRAM_SDXL,
  Flags.JSON_PROPERTY_LOWVRAM,
  Flags.JSON_PROPERTY_LOWRAM,
  Flags.JSON_PROPERTY_ALWAYS_BATCH_COND_UNCOND,
  Flags.JSON_PROPERTY_UNLOAD_GFPGAN,
  Flags.JSON_PROPERTY_PRECISION,
  Flags.JSON_PROPERTY_UPCAST_SAMPLING,
  Flags.JSON_PROPERTY_SHARE,
  Flags.JSON_PROPERTY_NGROK,
  Flags.JSON_PROPERTY_NGROK_REGION,
  Flags.JSON_PROPERTY_NGROK_OPTIONS,
  Flags.JSON_PROPERTY_ENABLE_INSECURE_EXTENSION_ACCESS,
  Flags.JSON_PROPERTY_CODEFORMER_MODELS_PATH,
  Flags.JSON_PROPERTY_GFPGAN_MODELS_PATH,
  Flags.JSON_PROPERTY_ESRGAN_MODELS_PATH,
  Flags.JSON_PROPERTY_BSRGAN_MODELS_PATH,
  Flags.JSON_PROPERTY_REALESRGAN_MODELS_PATH,
  Flags.JSON_PROPERTY_CLIP_MODELS_PATH,
  Flags.JSON_PROPERTY_XFORMERS,
  Flags.JSON_PROPERTY_FORCE_ENABLE_XFORMERS,
  Flags.JSON_PROPERTY_XFORMERS_FLASH_ATTENTION,
  Flags.JSON_PROPERTY_DEEPDANBOORU,
  Flags.JSON_PROPERTY_OPT_SPLIT_ATTENTION,
  Flags.JSON_PROPERTY_OPT_SUB_QUAD_ATTENTION,
  Flags.JSON_PROPERTY_SUB_QUAD_Q_CHUNK_SIZE,
  Flags.JSON_PROPERTY_SUB_QUAD_KV_CHUNK_SIZE,
  Flags.JSON_PROPERTY_SUB_QUAD_CHUNK_THRESHOLD,
  Flags.JSON_PROPERTY_OPT_SPLIT_ATTENTION_INVOKEAI,
  Flags.JSON_PROPERTY_OPT_SPLIT_ATTENTION_V1,
  Flags.JSON_PROPERTY_OPT_SDP_ATTENTION,
  Flags.JSON_PROPERTY_OPT_SDP_NO_MEM_ATTENTION,
  Flags.JSON_PROPERTY_DISABLE_OPT_SPLIT_ATTENTION,
  Flags.JSON_PROPERTY_DISABLE_NAN_CHECK,
  Flags.JSON_PROPERTY_USE_CPU,
  Flags.JSON_PROPERTY_DISABLE_MODEL_LOADING_RAM_OPTIMIZATION,
  Flags.JSON_PROPERTY_LISTEN,
  Flags.JSON_PROPERTY_PORT,
  Flags.JSON_PROPERTY_SHOW_NEGATIVE_PROMPT,
  Flags.JSON_PROPERTY_UI_CONFIG_FILE,
  Flags.JSON_PROPERTY_HIDE_UI_DIR_CONFIG,
  Flags.JSON_PROPERTY_FREEZE_SETTINGS,
  Flags.JSON_PROPERTY_UI_SETTINGS_FILE,
  Flags.JSON_PROPERTY_GRADIO_DEBUG,
  Flags.JSON_PROPERTY_GRADIO_AUTH,
  Flags.JSON_PROPERTY_GRADIO_AUTH_PATH,
  Flags.JSON_PROPERTY_GRADIO_IMG2IMG_TOOL,
  Flags.JSON_PROPERTY_GRADIO_INPAINT_TOOL,
  Flags.JSON_PROPERTY_GRADIO_ALLOWED_PATH,
  Flags.JSON_PROPERTY_OPT_CHANNELSLAST,
  Flags.JSON_PROPERTY_STYLES_FILE,
  Flags.JSON_PROPERTY_AUTOLAUNCH,
  Flags.JSON_PROPERTY_THEME,
  Flags.JSON_PROPERTY_USE_TEXTBOX_SEED,
  Flags.JSON_PROPERTY_DISABLE_CONSOLE_PROGRESSBARS,
  Flags.JSON_PROPERTY_ENABLE_CONSOLE_PROMPTS,
  Flags.JSON_PROPERTY_VAE_PATH,
  Flags.JSON_PROPERTY_DISABLE_SAFE_UNPICKLE,
  Flags.JSON_PROPERTY_API,
  Flags.JSON_PROPERTY_API_AUTH,
  Flags.JSON_PROPERTY_API_LOG,
  Flags.JSON_PROPERTY_NOWEBUI,
  Flags.JSON_PROPERTY_UI_DEBUG_MODE,
  Flags.JSON_PROPERTY_DEVICE_ID,
  Flags.JSON_PROPERTY_ADMINISTRATOR,
  Flags.JSON_PROPERTY_CORS_ALLOW_ORIGINS,
  Flags.JSON_PROPERTY_CORS_ALLOW_ORIGINS_REGEX,
  Flags.JSON_PROPERTY_TLS_KEYFILE,
  Flags.JSON_PROPERTY_TLS_CERTFILE,
  Flags.JSON_PROPERTY_DISABLE_TLS_VERIFY,
  Flags.JSON_PROPERTY_SERVER_NAME,
  Flags.JSON_PROPERTY_GRADIO_QUEUE,
  Flags.JSON_PROPERTY_NO_GRADIO_QUEUE,
  Flags.JSON_PROPERTY_SKIP_VERSION_CHECK,
  Flags.JSON_PROPERTY_NO_HASHING,
  Flags.JSON_PROPERTY_NO_DOWNLOAD_SD_MODEL,
  Flags.JSON_PROPERTY_SUBPATH,
  Flags.JSON_PROPERTY_ADD_STOP_ROUTE,
  Flags.JSON_PROPERTY_API_SERVER_STOP,
  Flags.JSON_PROPERTY_TIMEOUT_KEEP_ALIVE,
  Flags.JSON_PROPERTY_DISABLE_ALL_EXTENSIONS,
  Flags.JSON_PROPERTY_DISABLE_EXTRA_EXTENSIONS,
  Flags.JSON_PROPERTY_LDSR_MODELS_PATH,
  Flags.JSON_PROPERTY_LORA_DIR,
  Flags.JSON_PROPERTY_LYCO_DIR_BACKCOMPAT,
  Flags.JSON_PROPERTY_SCUNET_MODELS_PATH,
  Flags.JSON_PROPERTY_SWINIR_MODELS_PATH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-27T02:28:26.857180667+03:00[Europe/Moscow]")
public class Flags {
  public static final String JSON_PROPERTY_F = "f";
  private Boolean f = false;

  public static final String JSON_PROPERTY_UPDATE_ALL_EXTENSIONS = "update_all_extensions";
  private Boolean updateAllExtensions = false;

  public static final String JSON_PROPERTY_SKIP_PYTHON_VERSION_CHECK = "skip_python_version_check";
  private Boolean skipPythonVersionCheck = false;

  public static final String JSON_PROPERTY_SKIP_TORCH_CUDA_TEST = "skip_torch_cuda_test";
  private Boolean skipTorchCudaTest = false;

  public static final String JSON_PROPERTY_REINSTALL_XFORMERS = "reinstall_xformers";
  private Boolean reinstallXformers = false;

  public static final String JSON_PROPERTY_REINSTALL_TORCH = "reinstall_torch";
  private Boolean reinstallTorch = false;

  public static final String JSON_PROPERTY_UPDATE_CHECK = "update_check";
  private Boolean updateCheck = false;

  public static final String JSON_PROPERTY_TEST_SERVER = "test_server";
  private Boolean testServer = false;

  public static final String JSON_PROPERTY_LOG_STARTUP = "log_startup";
  private Boolean logStartup = false;

  public static final String JSON_PROPERTY_SKIP_PREPARE_ENVIRONMENT = "skip_prepare_environment";
  private Boolean skipPrepareEnvironment = false;

  public static final String JSON_PROPERTY_SKIP_INSTALL = "skip_install";
  private Boolean skipInstall = false;

  public static final String JSON_PROPERTY_DUMP_SYSINFO = "dump_sysinfo";
  private Boolean dumpSysinfo = false;

  public static final String JSON_PROPERTY_LOGLEVEL = "loglevel";
  private String loglevel;

  public static final String JSON_PROPERTY_DO_NOT_DOWNLOAD_CLIP = "do_not_download_clip";
  private Boolean doNotDownloadClip = false;

  public static final String JSON_PROPERTY_DATA_DIR = "data_dir";
  private String dataDir = "D:\\stable diffusion\\stable-diffusion-webui";

  public static final String JSON_PROPERTY_CONFIG = "config";
  private String config = "D:\\stable diffusion\\stable-diffusion-webui\\configs\\v1-inference.yaml";

  public static final String JSON_PROPERTY_CKPT = "ckpt";
  private String ckpt = "D:\\stable diffusion\\stable-diffusion-webui\\model.ckpt";

  public static final String JSON_PROPERTY_CKPT_DIR = "ckpt_dir";
  private String ckptDir;

  public static final String JSON_PROPERTY_VAE_DIR = "vae_dir";
  private String vaeDir;

  public static final String JSON_PROPERTY_GFPGAN_DIR = "gfpgan_dir";
  private String gfpganDir = "./GFPGAN";

  public static final String JSON_PROPERTY_GFPGAN_MODEL = "gfpgan_model";
  private String gfpganModel;

  public static final String JSON_PROPERTY_NO_HALF = "no_half";
  private Boolean noHalf = false;

  public static final String JSON_PROPERTY_NO_HALF_VAE = "no_half_vae";
  private Boolean noHalfVae = false;

  public static final String JSON_PROPERTY_NO_PROGRESSBAR_HIDING = "no_progressbar_hiding";
  private Boolean noProgressbarHiding = false;

  public static final String JSON_PROPERTY_MAX_BATCH_COUNT = "max_batch_count";
  private Integer maxBatchCount = 16;

  public static final String JSON_PROPERTY_EMBEDDINGS_DIR = "embeddings_dir";
  private String embeddingsDir = "D:\\stable diffusion\\stable-diffusion-webui\\embeddings";

  public static final String JSON_PROPERTY_TEXTUAL_INVERSION_TEMPLATES_DIR = "textual_inversion_templates_dir";
  private String textualInversionTemplatesDir = "D:\\stable diffusion\\stable-diffusion-webui\\textual_inversion_templates";

  public static final String JSON_PROPERTY_HYPERNETWORK_DIR = "hypernetwork_dir";
  private String hypernetworkDir = "D:\\stable diffusion\\stable-diffusion-webui\\models\\hypernetworks";

  public static final String JSON_PROPERTY_LOCALIZATIONS_DIR = "localizations_dir";
  private String localizationsDir = "D:\\stable diffusion\\stable-diffusion-webui\\localizations";

  public static final String JSON_PROPERTY_ALLOW_CODE = "allow_code";
  private Boolean allowCode = false;

  public static final String JSON_PROPERTY_MEDVRAM = "medvram";
  private Boolean medvram = false;

  public static final String JSON_PROPERTY_MEDVRAM_SDXL = "medvram_sdxl";
  private Boolean medvramSdxl = false;

  public static final String JSON_PROPERTY_LOWVRAM = "lowvram";
  private Boolean lowvram = false;

  public static final String JSON_PROPERTY_LOWRAM = "lowram";
  private Boolean lowram = false;

  public static final String JSON_PROPERTY_ALWAYS_BATCH_COND_UNCOND = "always_batch_cond_uncond";
  private Boolean alwaysBatchCondUncond = false;

  public static final String JSON_PROPERTY_UNLOAD_GFPGAN = "unload_gfpgan";
  private Boolean unloadGfpgan = false;

  public static final String JSON_PROPERTY_PRECISION = "precision";
  private String precision = "autocast";

  public static final String JSON_PROPERTY_UPCAST_SAMPLING = "upcast_sampling";
  private Boolean upcastSampling = false;

  public static final String JSON_PROPERTY_SHARE = "share";
  private Boolean share = false;

  public static final String JSON_PROPERTY_NGROK = "ngrok";
  private String ngrok;

  public static final String JSON_PROPERTY_NGROK_REGION = "ngrok_region";
  private String ngrokRegion = "";

  public static final String JSON_PROPERTY_NGROK_OPTIONS = "ngrok_options";
  private Object ngrokOptions = {};

  public static final String JSON_PROPERTY_ENABLE_INSECURE_EXTENSION_ACCESS = "enable_insecure_extension_access";
  private Boolean enableInsecureExtensionAccess = false;

  public static final String JSON_PROPERTY_CODEFORMER_MODELS_PATH = "codeformer_models_path";
  private String codeformerModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\Codeformer";

  public static final String JSON_PROPERTY_GFPGAN_MODELS_PATH = "gfpgan_models_path";
  private String gfpganModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\GFPGAN";

  public static final String JSON_PROPERTY_ESRGAN_MODELS_PATH = "esrgan_models_path";
  private String esrganModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\ESRGAN";

  public static final String JSON_PROPERTY_BSRGAN_MODELS_PATH = "bsrgan_models_path";
  private String bsrganModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\BSRGAN";

  public static final String JSON_PROPERTY_REALESRGAN_MODELS_PATH = "realesrgan_models_path";
  private String realesrganModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\RealESRGAN";

  public static final String JSON_PROPERTY_CLIP_MODELS_PATH = "clip_models_path";
  private String clipModelsPath;

  public static final String JSON_PROPERTY_XFORMERS = "xformers";
  private Boolean xformers = false;

  public static final String JSON_PROPERTY_FORCE_ENABLE_XFORMERS = "force_enable_xformers";
  private Boolean forceEnableXformers = false;

  public static final String JSON_PROPERTY_XFORMERS_FLASH_ATTENTION = "xformers_flash_attention";
  private Boolean xformersFlashAttention = false;

  public static final String JSON_PROPERTY_DEEPDANBOORU = "deepdanbooru";
  private Boolean deepdanbooru = false;

  public static final String JSON_PROPERTY_OPT_SPLIT_ATTENTION = "opt_split_attention";
  private Boolean optSplitAttention = false;

  public static final String JSON_PROPERTY_OPT_SUB_QUAD_ATTENTION = "opt_sub_quad_attention";
  private Boolean optSubQuadAttention = false;

  public static final String JSON_PROPERTY_SUB_QUAD_Q_CHUNK_SIZE = "sub_quad_q_chunk_size";
  private Integer subQuadQChunkSize = 1024;

  public static final String JSON_PROPERTY_SUB_QUAD_KV_CHUNK_SIZE = "sub_quad_kv_chunk_size";
  private String subQuadKvChunkSize;

  public static final String JSON_PROPERTY_SUB_QUAD_CHUNK_THRESHOLD = "sub_quad_chunk_threshold";
  private String subQuadChunkThreshold;

  public static final String JSON_PROPERTY_OPT_SPLIT_ATTENTION_INVOKEAI = "opt_split_attention_invokeai";
  private Boolean optSplitAttentionInvokeai = false;

  public static final String JSON_PROPERTY_OPT_SPLIT_ATTENTION_V1 = "opt_split_attention_v1";
  private Boolean optSplitAttentionV1 = false;

  public static final String JSON_PROPERTY_OPT_SDP_ATTENTION = "opt_sdp_attention";
  private Boolean optSdpAttention = false;

  public static final String JSON_PROPERTY_OPT_SDP_NO_MEM_ATTENTION = "opt_sdp_no_mem_attention";
  private Boolean optSdpNoMemAttention = false;

  public static final String JSON_PROPERTY_DISABLE_OPT_SPLIT_ATTENTION = "disable_opt_split_attention";
  private Boolean disableOptSplitAttention = false;

  public static final String JSON_PROPERTY_DISABLE_NAN_CHECK = "disable_nan_check";
  private Boolean disableNanCheck = false;

  public static final String JSON_PROPERTY_USE_CPU = "use_cpu";
  private List<Object> useCpu = new ArrayList<>();

  public static final String JSON_PROPERTY_DISABLE_MODEL_LOADING_RAM_OPTIMIZATION = "disable_model_loading_ram_optimization";
  private Boolean disableModelLoadingRamOptimization = false;

  public static final String JSON_PROPERTY_LISTEN = "listen";
  private Boolean listen = false;

  public static final String JSON_PROPERTY_PORT = "port";
  private String port;

  public static final String JSON_PROPERTY_SHOW_NEGATIVE_PROMPT = "show_negative_prompt";
  private Boolean showNegativePrompt = false;

  public static final String JSON_PROPERTY_UI_CONFIG_FILE = "ui_config_file";
  private String uiConfigFile = "D:\\stable diffusion\\stable-diffusion-webui\\ui-config.json";

  public static final String JSON_PROPERTY_HIDE_UI_DIR_CONFIG = "hide_ui_dir_config";
  private Boolean hideUiDirConfig = false;

  public static final String JSON_PROPERTY_FREEZE_SETTINGS = "freeze_settings";
  private Boolean freezeSettings = false;

  public static final String JSON_PROPERTY_UI_SETTINGS_FILE = "ui_settings_file";
  private String uiSettingsFile = "D:\\stable diffusion\\stable-diffusion-webui\\config.json";

  public static final String JSON_PROPERTY_GRADIO_DEBUG = "gradio_debug";
  private Boolean gradioDebug = false;

  public static final String JSON_PROPERTY_GRADIO_AUTH = "gradio_auth";
  private String gradioAuth;

  public static final String JSON_PROPERTY_GRADIO_AUTH_PATH = "gradio_auth_path";
  private String gradioAuthPath;

  public static final String JSON_PROPERTY_GRADIO_IMG2IMG_TOOL = "gradio_img2img_tool";
  private String gradioImg2imgTool;

  public static final String JSON_PROPERTY_GRADIO_INPAINT_TOOL = "gradio_inpaint_tool";
  private String gradioInpaintTool;

  public static final String JSON_PROPERTY_GRADIO_ALLOWED_PATH = "gradio_allowed_path";
  private List<Object> gradioAllowedPath = new ArrayList<>(Arrays.asList(D:\stable diffusion\stable-diffusion-webui));

  public static final String JSON_PROPERTY_OPT_CHANNELSLAST = "opt_channelslast";
  private Boolean optChannelslast = false;

  public static final String JSON_PROPERTY_STYLES_FILE = "styles_file";
  private String stylesFile = "D:\\stable diffusion\\stable-diffusion-webui\\styles.csv";

  public static final String JSON_PROPERTY_AUTOLAUNCH = "autolaunch";
  private Boolean autolaunch = false;

  public static final String JSON_PROPERTY_THEME = "theme";
  private String theme;

  public static final String JSON_PROPERTY_USE_TEXTBOX_SEED = "use_textbox_seed";
  private Boolean useTextboxSeed = false;

  public static final String JSON_PROPERTY_DISABLE_CONSOLE_PROGRESSBARS = "disable_console_progressbars";
  private Boolean disableConsoleProgressbars = false;

  public static final String JSON_PROPERTY_ENABLE_CONSOLE_PROMPTS = "enable_console_prompts";
  private Boolean enableConsolePrompts = false;

  public static final String JSON_PROPERTY_VAE_PATH = "vae_path";
  private String vaePath;

  public static final String JSON_PROPERTY_DISABLE_SAFE_UNPICKLE = "disable_safe_unpickle";
  private Boolean disableSafeUnpickle = false;

  public static final String JSON_PROPERTY_API = "api";
  private Boolean api = false;

  public static final String JSON_PROPERTY_API_AUTH = "api_auth";
  private String apiAuth;

  public static final String JSON_PROPERTY_API_LOG = "api_log";
  private Boolean apiLog = false;

  public static final String JSON_PROPERTY_NOWEBUI = "nowebui";
  private Boolean nowebui = false;

  public static final String JSON_PROPERTY_UI_DEBUG_MODE = "ui_debug_mode";
  private Boolean uiDebugMode = false;

  public static final String JSON_PROPERTY_DEVICE_ID = "device_id";
  private String deviceId;

  public static final String JSON_PROPERTY_ADMINISTRATOR = "administrator";
  private Boolean administrator = false;

  public static final String JSON_PROPERTY_CORS_ALLOW_ORIGINS = "cors_allow_origins";
  private String corsAllowOrigins;

  public static final String JSON_PROPERTY_CORS_ALLOW_ORIGINS_REGEX = "cors_allow_origins_regex";
  private String corsAllowOriginsRegex;

  public static final String JSON_PROPERTY_TLS_KEYFILE = "tls_keyfile";
  private String tlsKeyfile;

  public static final String JSON_PROPERTY_TLS_CERTFILE = "tls_certfile";
  private String tlsCertfile;

  public static final String JSON_PROPERTY_DISABLE_TLS_VERIFY = "disable_tls_verify";
  private String disableTlsVerify;

  public static final String JSON_PROPERTY_SERVER_NAME = "server_name";
  private String serverName;

  public static final String JSON_PROPERTY_GRADIO_QUEUE = "gradio_queue";
  private Boolean gradioQueue = true;

  public static final String JSON_PROPERTY_NO_GRADIO_QUEUE = "no_gradio_queue";
  private Boolean noGradioQueue = false;

  public static final String JSON_PROPERTY_SKIP_VERSION_CHECK = "skip_version_check";
  private Boolean skipVersionCheck = false;

  public static final String JSON_PROPERTY_NO_HASHING = "no_hashing";
  private Boolean noHashing = false;

  public static final String JSON_PROPERTY_NO_DOWNLOAD_SD_MODEL = "no_download_sd_model";
  private Boolean noDownloadSdModel = false;

  public static final String JSON_PROPERTY_SUBPATH = "subpath";
  private String subpath;

  public static final String JSON_PROPERTY_ADD_STOP_ROUTE = "add_stop_route";
  private Boolean addStopRoute = false;

  public static final String JSON_PROPERTY_API_SERVER_STOP = "api_server_stop";
  private Boolean apiServerStop = false;

  public static final String JSON_PROPERTY_TIMEOUT_KEEP_ALIVE = "timeout_keep_alive";
  private Integer timeoutKeepAlive = 30;

  public static final String JSON_PROPERTY_DISABLE_ALL_EXTENSIONS = "disable_all_extensions";
  private Boolean disableAllExtensions = false;

  public static final String JSON_PROPERTY_DISABLE_EXTRA_EXTENSIONS = "disable_extra_extensions";
  private Boolean disableExtraExtensions = false;

  public static final String JSON_PROPERTY_LDSR_MODELS_PATH = "ldsr_models_path";
  private String ldsrModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\LDSR";

  public static final String JSON_PROPERTY_LORA_DIR = "lora_dir";
  private String loraDir = "D:\\stable diffusion\\stable-diffusion-webui\\models\\Lora";

  public static final String JSON_PROPERTY_LYCO_DIR_BACKCOMPAT = "lyco_dir_backcompat";
  private String lycoDirBackcompat = "D:\\stable diffusion\\stable-diffusion-webui\\models\\LyCORIS";

  public static final String JSON_PROPERTY_SCUNET_MODELS_PATH = "scunet_models_path";
  private String scunetModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\ScuNET";

  public static final String JSON_PROPERTY_SWINIR_MODELS_PATH = "swinir_models_path";
  private String swinirModelsPath = "D:\\stable diffusion\\stable-diffusion-webui\\models\\SwinIR";

  public Flags() {
  }

  public Flags f(Boolean f) {
    
    this.f = f;
    return this;
  }

   /**
   * &#x3D;&#x3D;SUPPRESS&#x3D;&#x3D;
   * @return f
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_F)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getF() {
    return f;
  }


  @JsonProperty(JSON_PROPERTY_F)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setF(Boolean f) {
    this.f = f;
  }


  public Flags updateAllExtensions(Boolean updateAllExtensions) {
    
    this.updateAllExtensions = updateAllExtensions;
    return this;
  }

   /**
   * launch.py argument: download updates for all extensions when starting the program
   * @return updateAllExtensions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_ALL_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUpdateAllExtensions() {
    return updateAllExtensions;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_ALL_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateAllExtensions(Boolean updateAllExtensions) {
    this.updateAllExtensions = updateAllExtensions;
  }


  public Flags skipPythonVersionCheck(Boolean skipPythonVersionCheck) {
    
    this.skipPythonVersionCheck = skipPythonVersionCheck;
    return this;
  }

   /**
   * launch.py argument: do not check python version
   * @return skipPythonVersionCheck
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP_PYTHON_VERSION_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipPythonVersionCheck() {
    return skipPythonVersionCheck;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_PYTHON_VERSION_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipPythonVersionCheck(Boolean skipPythonVersionCheck) {
    this.skipPythonVersionCheck = skipPythonVersionCheck;
  }


  public Flags skipTorchCudaTest(Boolean skipTorchCudaTest) {
    
    this.skipTorchCudaTest = skipTorchCudaTest;
    return this;
  }

   /**
   * launch.py argument: do not check if CUDA is able to work properly
   * @return skipTorchCudaTest
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP_TORCH_CUDA_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipTorchCudaTest() {
    return skipTorchCudaTest;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_TORCH_CUDA_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipTorchCudaTest(Boolean skipTorchCudaTest) {
    this.skipTorchCudaTest = skipTorchCudaTest;
  }


  public Flags reinstallXformers(Boolean reinstallXformers) {
    
    this.reinstallXformers = reinstallXformers;
    return this;
  }

   /**
   * launch.py argument: install the appropriate version of xformers even if you have some version already installed
   * @return reinstallXformers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REINSTALL_XFORMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReinstallXformers() {
    return reinstallXformers;
  }


  @JsonProperty(JSON_PROPERTY_REINSTALL_XFORMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReinstallXformers(Boolean reinstallXformers) {
    this.reinstallXformers = reinstallXformers;
  }


  public Flags reinstallTorch(Boolean reinstallTorch) {
    
    this.reinstallTorch = reinstallTorch;
    return this;
  }

   /**
   * launch.py argument: install the appropriate version of torch even if you have some version already installed
   * @return reinstallTorch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REINSTALL_TORCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReinstallTorch() {
    return reinstallTorch;
  }


  @JsonProperty(JSON_PROPERTY_REINSTALL_TORCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReinstallTorch(Boolean reinstallTorch) {
    this.reinstallTorch = reinstallTorch;
  }


  public Flags updateCheck(Boolean updateCheck) {
    
    this.updateCheck = updateCheck;
    return this;
  }

   /**
   * launch.py argument: check for updates at startup
   * @return updateCheck
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUpdateCheck() {
    return updateCheck;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateCheck(Boolean updateCheck) {
    this.updateCheck = updateCheck;
  }


  public Flags testServer(Boolean testServer) {
    
    this.testServer = testServer;
    return this;
  }

   /**
   * launch.py argument: configure server for testing
   * @return testServer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTestServer() {
    return testServer;
  }


  @JsonProperty(JSON_PROPERTY_TEST_SERVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestServer(Boolean testServer) {
    this.testServer = testServer;
  }


  public Flags logStartup(Boolean logStartup) {
    
    this.logStartup = logStartup;
    return this;
  }

   /**
   * launch.py argument: print a detailed log of what&#39;s happening at startup
   * @return logStartup
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOG_STARTUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLogStartup() {
    return logStartup;
  }


  @JsonProperty(JSON_PROPERTY_LOG_STARTUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogStartup(Boolean logStartup) {
    this.logStartup = logStartup;
  }


  public Flags skipPrepareEnvironment(Boolean skipPrepareEnvironment) {
    
    this.skipPrepareEnvironment = skipPrepareEnvironment;
    return this;
  }

   /**
   * launch.py argument: skip all environment preparation
   * @return skipPrepareEnvironment
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP_PREPARE_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipPrepareEnvironment() {
    return skipPrepareEnvironment;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_PREPARE_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipPrepareEnvironment(Boolean skipPrepareEnvironment) {
    this.skipPrepareEnvironment = skipPrepareEnvironment;
  }


  public Flags skipInstall(Boolean skipInstall) {
    
    this.skipInstall = skipInstall;
    return this;
  }

   /**
   * launch.py argument: skip installation of packages
   * @return skipInstall
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP_INSTALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipInstall() {
    return skipInstall;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_INSTALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipInstall(Boolean skipInstall) {
    this.skipInstall = skipInstall;
  }


  public Flags dumpSysinfo(Boolean dumpSysinfo) {
    
    this.dumpSysinfo = dumpSysinfo;
    return this;
  }

   /**
   * launch.py argument: dump limited sysinfo file (without information about extensions, options) to disk and quit
   * @return dumpSysinfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DUMP_SYSINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDumpSysinfo() {
    return dumpSysinfo;
  }


  @JsonProperty(JSON_PROPERTY_DUMP_SYSINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDumpSysinfo(Boolean dumpSysinfo) {
    this.dumpSysinfo = dumpSysinfo;
  }


  public Flags loglevel(String loglevel) {
    
    this.loglevel = loglevel;
    return this;
  }

   /**
   * log level; one of: CRITICAL, ERROR, WARNING, INFO, DEBUG
   * @return loglevel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGLEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoglevel() {
    return loglevel;
  }


  @JsonProperty(JSON_PROPERTY_LOGLEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoglevel(String loglevel) {
    this.loglevel = loglevel;
  }


  public Flags doNotDownloadClip(Boolean doNotDownloadClip) {
    
    this.doNotDownloadClip = doNotDownloadClip;
    return this;
  }

   /**
   * do not download CLIP model even if it&#39;s not included in the checkpoint
   * @return doNotDownloadClip
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DO_NOT_DOWNLOAD_CLIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDoNotDownloadClip() {
    return doNotDownloadClip;
  }


  @JsonProperty(JSON_PROPERTY_DO_NOT_DOWNLOAD_CLIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoNotDownloadClip(Boolean doNotDownloadClip) {
    this.doNotDownloadClip = doNotDownloadClip;
  }


  public Flags dataDir(String dataDir) {
    
    this.dataDir = dataDir;
    return this;
  }

   /**
   * base path where all user data is stored
   * @return dataDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataDir() {
    return dataDir;
  }


  @JsonProperty(JSON_PROPERTY_DATA_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataDir(String dataDir) {
    this.dataDir = dataDir;
  }


  public Flags config(String config) {
    
    this.config = config;
    return this;
  }

   /**
   * path to config which constructs model
   * @return config
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfig(String config) {
    this.config = config;
  }


  public Flags ckpt(String ckpt) {
    
    this.ckpt = ckpt;
    return this;
  }

   /**
   * path to checkpoint of stable diffusion model; if specified, this checkpoint will be added to the list of checkpoints and loaded
   * @return ckpt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CKPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCkpt() {
    return ckpt;
  }


  @JsonProperty(JSON_PROPERTY_CKPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCkpt(String ckpt) {
    this.ckpt = ckpt;
  }


  public Flags ckptDir(String ckptDir) {
    
    this.ckptDir = ckptDir;
    return this;
  }

   /**
   * Path to directory with stable diffusion checkpoints
   * @return ckptDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CKPT_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCkptDir() {
    return ckptDir;
  }


  @JsonProperty(JSON_PROPERTY_CKPT_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCkptDir(String ckptDir) {
    this.ckptDir = ckptDir;
  }


  public Flags vaeDir(String vaeDir) {
    
    this.vaeDir = vaeDir;
    return this;
  }

   /**
   * Path to directory with VAE files
   * @return vaeDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAE_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVaeDir() {
    return vaeDir;
  }


  @JsonProperty(JSON_PROPERTY_VAE_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVaeDir(String vaeDir) {
    this.vaeDir = vaeDir;
  }


  public Flags gfpganDir(String gfpganDir) {
    
    this.gfpganDir = gfpganDir;
    return this;
  }

   /**
   * GFPGAN directory
   * @return gfpganDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GFPGAN_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGfpganDir() {
    return gfpganDir;
  }


  @JsonProperty(JSON_PROPERTY_GFPGAN_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGfpganDir(String gfpganDir) {
    this.gfpganDir = gfpganDir;
  }


  public Flags gfpganModel(String gfpganModel) {
    
    this.gfpganModel = gfpganModel;
    return this;
  }

   /**
   * GFPGAN model file name
   * @return gfpganModel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GFPGAN_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGfpganModel() {
    return gfpganModel;
  }


  @JsonProperty(JSON_PROPERTY_GFPGAN_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGfpganModel(String gfpganModel) {
    this.gfpganModel = gfpganModel;
  }


  public Flags noHalf(Boolean noHalf) {
    
    this.noHalf = noHalf;
    return this;
  }

   /**
   * do not switch the model to 16-bit floats
   * @return noHalf
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_HALF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNoHalf() {
    return noHalf;
  }


  @JsonProperty(JSON_PROPERTY_NO_HALF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoHalf(Boolean noHalf) {
    this.noHalf = noHalf;
  }


  public Flags noHalfVae(Boolean noHalfVae) {
    
    this.noHalfVae = noHalfVae;
    return this;
  }

   /**
   * do not switch the VAE model to 16-bit floats
   * @return noHalfVae
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_HALF_VAE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNoHalfVae() {
    return noHalfVae;
  }


  @JsonProperty(JSON_PROPERTY_NO_HALF_VAE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoHalfVae(Boolean noHalfVae) {
    this.noHalfVae = noHalfVae;
  }


  public Flags noProgressbarHiding(Boolean noProgressbarHiding) {
    
    this.noProgressbarHiding = noProgressbarHiding;
    return this;
  }

   /**
   * do not hide progressbar in gradio UI (we hide it because it slows down ML if you have hardware acceleration in browser)
   * @return noProgressbarHiding
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_PROGRESSBAR_HIDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNoProgressbarHiding() {
    return noProgressbarHiding;
  }


  @JsonProperty(JSON_PROPERTY_NO_PROGRESSBAR_HIDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoProgressbarHiding(Boolean noProgressbarHiding) {
    this.noProgressbarHiding = noProgressbarHiding;
  }


  public Flags maxBatchCount(Integer maxBatchCount) {
    
    this.maxBatchCount = maxBatchCount;
    return this;
  }

   /**
   * maximum batch count value for the UI
   * @return maxBatchCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_BATCH_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxBatchCount() {
    return maxBatchCount;
  }


  @JsonProperty(JSON_PROPERTY_MAX_BATCH_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxBatchCount(Integer maxBatchCount) {
    this.maxBatchCount = maxBatchCount;
  }


  public Flags embeddingsDir(String embeddingsDir) {
    
    this.embeddingsDir = embeddingsDir;
    return this;
  }

   /**
   * embeddings directory for textual inversion (default: embeddings)
   * @return embeddingsDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMBEDDINGS_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmbeddingsDir() {
    return embeddingsDir;
  }


  @JsonProperty(JSON_PROPERTY_EMBEDDINGS_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmbeddingsDir(String embeddingsDir) {
    this.embeddingsDir = embeddingsDir;
  }


  public Flags textualInversionTemplatesDir(String textualInversionTemplatesDir) {
    
    this.textualInversionTemplatesDir = textualInversionTemplatesDir;
    return this;
  }

   /**
   * directory with textual inversion templates
   * @return textualInversionTemplatesDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXTUAL_INVERSION_TEMPLATES_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTextualInversionTemplatesDir() {
    return textualInversionTemplatesDir;
  }


  @JsonProperty(JSON_PROPERTY_TEXTUAL_INVERSION_TEMPLATES_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextualInversionTemplatesDir(String textualInversionTemplatesDir) {
    this.textualInversionTemplatesDir = textualInversionTemplatesDir;
  }


  public Flags hypernetworkDir(String hypernetworkDir) {
    
    this.hypernetworkDir = hypernetworkDir;
    return this;
  }

   /**
   * hypernetwork directory
   * @return hypernetworkDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HYPERNETWORK_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHypernetworkDir() {
    return hypernetworkDir;
  }


  @JsonProperty(JSON_PROPERTY_HYPERNETWORK_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHypernetworkDir(String hypernetworkDir) {
    this.hypernetworkDir = hypernetworkDir;
  }


  public Flags localizationsDir(String localizationsDir) {
    
    this.localizationsDir = localizationsDir;
    return this;
  }

   /**
   * localizations directory
   * @return localizationsDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALIZATIONS_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocalizationsDir() {
    return localizationsDir;
  }


  @JsonProperty(JSON_PROPERTY_LOCALIZATIONS_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalizationsDir(String localizationsDir) {
    this.localizationsDir = localizationsDir;
  }


  public Flags allowCode(Boolean allowCode) {
    
    this.allowCode = allowCode;
    return this;
  }

   /**
   * allow custom script execution from webui
   * @return allowCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowCode() {
    return allowCode;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowCode(Boolean allowCode) {
    this.allowCode = allowCode;
  }


  public Flags medvram(Boolean medvram) {
    
    this.medvram = medvram;
    return this;
  }

   /**
   * enable stable diffusion model optimizations for sacrificing a little speed for low VRM usage
   * @return medvram
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDVRAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMedvram() {
    return medvram;
  }


  @JsonProperty(JSON_PROPERTY_MEDVRAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedvram(Boolean medvram) {
    this.medvram = medvram;
  }


  public Flags medvramSdxl(Boolean medvramSdxl) {
    
    this.medvramSdxl = medvramSdxl;
    return this;
  }

   /**
   * enable --medvram optimization just for SDXL models
   * @return medvramSdxl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDVRAM_SDXL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMedvramSdxl() {
    return medvramSdxl;
  }


  @JsonProperty(JSON_PROPERTY_MEDVRAM_SDXL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedvramSdxl(Boolean medvramSdxl) {
    this.medvramSdxl = medvramSdxl;
  }


  public Flags lowvram(Boolean lowvram) {
    
    this.lowvram = lowvram;
    return this;
  }

   /**
   * enable stable diffusion model optimizations for sacrificing a lot of speed for very low VRM usage
   * @return lowvram
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOWVRAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLowvram() {
    return lowvram;
  }


  @JsonProperty(JSON_PROPERTY_LOWVRAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLowvram(Boolean lowvram) {
    this.lowvram = lowvram;
  }


  public Flags lowram(Boolean lowram) {
    
    this.lowram = lowram;
    return this;
  }

   /**
   * load stable diffusion checkpoint weights to VRAM instead of RAM
   * @return lowram
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOWRAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLowram() {
    return lowram;
  }


  @JsonProperty(JSON_PROPERTY_LOWRAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLowram(Boolean lowram) {
    this.lowram = lowram;
  }


  public Flags alwaysBatchCondUncond(Boolean alwaysBatchCondUncond) {
    
    this.alwaysBatchCondUncond = alwaysBatchCondUncond;
    return this;
  }

   /**
   * does not do anything
   * @return alwaysBatchCondUncond
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALWAYS_BATCH_COND_UNCOND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAlwaysBatchCondUncond() {
    return alwaysBatchCondUncond;
  }


  @JsonProperty(JSON_PROPERTY_ALWAYS_BATCH_COND_UNCOND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlwaysBatchCondUncond(Boolean alwaysBatchCondUncond) {
    this.alwaysBatchCondUncond = alwaysBatchCondUncond;
  }


  public Flags unloadGfpgan(Boolean unloadGfpgan) {
    
    this.unloadGfpgan = unloadGfpgan;
    return this;
  }

   /**
   * does not do anything.
   * @return unloadGfpgan
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNLOAD_GFPGAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUnloadGfpgan() {
    return unloadGfpgan;
  }


  @JsonProperty(JSON_PROPERTY_UNLOAD_GFPGAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnloadGfpgan(Boolean unloadGfpgan) {
    this.unloadGfpgan = unloadGfpgan;
  }


  public Flags precision(String precision) {
    
    this.precision = precision;
    return this;
  }

   /**
   * evaluate at this precision
   * @return precision
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrecision() {
    return precision;
  }


  @JsonProperty(JSON_PROPERTY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrecision(String precision) {
    this.precision = precision;
  }


  public Flags upcastSampling(Boolean upcastSampling) {
    
    this.upcastSampling = upcastSampling;
    return this;
  }

   /**
   * upcast sampling. No effect with --no-half. Usually produces similar results to --no-half with better performance while using less memory.
   * @return upcastSampling
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPCAST_SAMPLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUpcastSampling() {
    return upcastSampling;
  }


  @JsonProperty(JSON_PROPERTY_UPCAST_SAMPLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpcastSampling(Boolean upcastSampling) {
    this.upcastSampling = upcastSampling;
  }


  public Flags share(Boolean share) {
    
    this.share = share;
    return this;
  }

   /**
   * use share&#x3D;True for gradio and make the UI accessible through their site
   * @return share
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShare() {
    return share;
  }


  @JsonProperty(JSON_PROPERTY_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShare(Boolean share) {
    this.share = share;
  }


  public Flags ngrok(String ngrok) {
    
    this.ngrok = ngrok;
    return this;
  }

   /**
   * ngrok authtoken, alternative to gradio --share
   * @return ngrok
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NGROK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNgrok() {
    return ngrok;
  }


  @JsonProperty(JSON_PROPERTY_NGROK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNgrok(String ngrok) {
    this.ngrok = ngrok;
  }


  public Flags ngrokRegion(String ngrokRegion) {
    
    this.ngrokRegion = ngrokRegion;
    return this;
  }

   /**
   * does not do anything.
   * @return ngrokRegion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NGROK_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNgrokRegion() {
    return ngrokRegion;
  }


  @JsonProperty(JSON_PROPERTY_NGROK_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNgrokRegion(String ngrokRegion) {
    this.ngrokRegion = ngrokRegion;
  }


  public Flags ngrokOptions(Object ngrokOptions) {
    
    this.ngrokOptions = ngrokOptions;
    return this;
  }

   /**
   * The options to pass to ngrok in JSON format, e.g.: &#39;{\&quot;authtoken_from_env\&quot;:true, \&quot;basic_auth\&quot;:\&quot;user:password\&quot;, \&quot;oauth_provider\&quot;:\&quot;google\&quot;, \&quot;oauth_allow_emails\&quot;:\&quot;user@asdf.com\&quot;}&#39;
   * @return ngrokOptions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NGROK_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getNgrokOptions() {
    return ngrokOptions;
  }


  @JsonProperty(JSON_PROPERTY_NGROK_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNgrokOptions(Object ngrokOptions) {
    this.ngrokOptions = ngrokOptions;
  }


  public Flags enableInsecureExtensionAccess(Boolean enableInsecureExtensionAccess) {
    
    this.enableInsecureExtensionAccess = enableInsecureExtensionAccess;
    return this;
  }

   /**
   * enable extensions tab regardless of other options
   * @return enableInsecureExtensionAccess
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_INSECURE_EXTENSION_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableInsecureExtensionAccess() {
    return enableInsecureExtensionAccess;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_INSECURE_EXTENSION_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableInsecureExtensionAccess(Boolean enableInsecureExtensionAccess) {
    this.enableInsecureExtensionAccess = enableInsecureExtensionAccess;
  }


  public Flags codeformerModelsPath(String codeformerModelsPath) {
    
    this.codeformerModelsPath = codeformerModelsPath;
    return this;
  }

   /**
   * Path to directory with codeformer model file(s).
   * @return codeformerModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODEFORMER_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCodeformerModelsPath() {
    return codeformerModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_CODEFORMER_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeformerModelsPath(String codeformerModelsPath) {
    this.codeformerModelsPath = codeformerModelsPath;
  }


  public Flags gfpganModelsPath(String gfpganModelsPath) {
    
    this.gfpganModelsPath = gfpganModelsPath;
    return this;
  }

   /**
   * Path to directory with GFPGAN model file(s).
   * @return gfpganModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GFPGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGfpganModelsPath() {
    return gfpganModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_GFPGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGfpganModelsPath(String gfpganModelsPath) {
    this.gfpganModelsPath = gfpganModelsPath;
  }


  public Flags esrganModelsPath(String esrganModelsPath) {
    
    this.esrganModelsPath = esrganModelsPath;
    return this;
  }

   /**
   * Path to directory with ESRGAN model file(s).
   * @return esrganModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESRGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEsrganModelsPath() {
    return esrganModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_ESRGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEsrganModelsPath(String esrganModelsPath) {
    this.esrganModelsPath = esrganModelsPath;
  }


  public Flags bsrganModelsPath(String bsrganModelsPath) {
    
    this.bsrganModelsPath = bsrganModelsPath;
    return this;
  }

   /**
   * Path to directory with BSRGAN model file(s).
   * @return bsrganModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BSRGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBsrganModelsPath() {
    return bsrganModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_BSRGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBsrganModelsPath(String bsrganModelsPath) {
    this.bsrganModelsPath = bsrganModelsPath;
  }


  public Flags realesrganModelsPath(String realesrganModelsPath) {
    
    this.realesrganModelsPath = realesrganModelsPath;
    return this;
  }

   /**
   * Path to directory with RealESRGAN model file(s).
   * @return realesrganModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REALESRGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRealesrganModelsPath() {
    return realesrganModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_REALESRGAN_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealesrganModelsPath(String realesrganModelsPath) {
    this.realesrganModelsPath = realesrganModelsPath;
  }


  public Flags clipModelsPath(String clipModelsPath) {
    
    this.clipModelsPath = clipModelsPath;
    return this;
  }

   /**
   * Path to directory with CLIP model file(s).
   * @return clipModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIP_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClipModelsPath() {
    return clipModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_CLIP_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClipModelsPath(String clipModelsPath) {
    this.clipModelsPath = clipModelsPath;
  }


  public Flags xformers(Boolean xformers) {
    
    this.xformers = xformers;
    return this;
  }

   /**
   * enable xformers for cross attention layers
   * @return xformers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_XFORMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getXformers() {
    return xformers;
  }


  @JsonProperty(JSON_PROPERTY_XFORMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXformers(Boolean xformers) {
    this.xformers = xformers;
  }


  public Flags forceEnableXformers(Boolean forceEnableXformers) {
    
    this.forceEnableXformers = forceEnableXformers;
    return this;
  }

   /**
   * enable xformers for cross attention layers regardless of whether the checking code thinks you can run it; do not make bug reports if this fails to work
   * @return forceEnableXformers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORCE_ENABLE_XFORMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getForceEnableXformers() {
    return forceEnableXformers;
  }


  @JsonProperty(JSON_PROPERTY_FORCE_ENABLE_XFORMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForceEnableXformers(Boolean forceEnableXformers) {
    this.forceEnableXformers = forceEnableXformers;
  }


  public Flags xformersFlashAttention(Boolean xformersFlashAttention) {
    
    this.xformersFlashAttention = xformersFlashAttention;
    return this;
  }

   /**
   * enable xformers with Flash Attention to improve reproducibility (supported for SD2.x or variant only)
   * @return xformersFlashAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_XFORMERS_FLASH_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getXformersFlashAttention() {
    return xformersFlashAttention;
  }


  @JsonProperty(JSON_PROPERTY_XFORMERS_FLASH_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXformersFlashAttention(Boolean xformersFlashAttention) {
    this.xformersFlashAttention = xformersFlashAttention;
  }


  public Flags deepdanbooru(Boolean deepdanbooru) {
    
    this.deepdanbooru = deepdanbooru;
    return this;
  }

   /**
   * does not do anything
   * @return deepdanbooru
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEEPDANBOORU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeepdanbooru() {
    return deepdanbooru;
  }


  @JsonProperty(JSON_PROPERTY_DEEPDANBOORU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeepdanbooru(Boolean deepdanbooru) {
    this.deepdanbooru = deepdanbooru;
  }


  public Flags optSplitAttention(Boolean optSplitAttention) {
    
    this.optSplitAttention = optSplitAttention;
    return this;
  }

   /**
   * prefer Doggettx&#39;s cross-attention layer optimization for automatic choice of optimization
   * @return optSplitAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_SPLIT_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptSplitAttention() {
    return optSplitAttention;
  }


  @JsonProperty(JSON_PROPERTY_OPT_SPLIT_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptSplitAttention(Boolean optSplitAttention) {
    this.optSplitAttention = optSplitAttention;
  }


  public Flags optSubQuadAttention(Boolean optSubQuadAttention) {
    
    this.optSubQuadAttention = optSubQuadAttention;
    return this;
  }

   /**
   * prefer memory efficient sub-quadratic cross-attention layer optimization for automatic choice of optimization
   * @return optSubQuadAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_SUB_QUAD_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptSubQuadAttention() {
    return optSubQuadAttention;
  }


  @JsonProperty(JSON_PROPERTY_OPT_SUB_QUAD_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptSubQuadAttention(Boolean optSubQuadAttention) {
    this.optSubQuadAttention = optSubQuadAttention;
  }


  public Flags subQuadQChunkSize(Integer subQuadQChunkSize) {
    
    this.subQuadQChunkSize = subQuadQChunkSize;
    return this;
  }

   /**
   * query chunk size for the sub-quadratic cross-attention layer optimization to use
   * @return subQuadQChunkSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_QUAD_Q_CHUNK_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSubQuadQChunkSize() {
    return subQuadQChunkSize;
  }


  @JsonProperty(JSON_PROPERTY_SUB_QUAD_Q_CHUNK_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubQuadQChunkSize(Integer subQuadQChunkSize) {
    this.subQuadQChunkSize = subQuadQChunkSize;
  }


  public Flags subQuadKvChunkSize(String subQuadKvChunkSize) {
    
    this.subQuadKvChunkSize = subQuadKvChunkSize;
    return this;
  }

   /**
   * kv chunk size for the sub-quadratic cross-attention layer optimization to use
   * @return subQuadKvChunkSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_QUAD_KV_CHUNK_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubQuadKvChunkSize() {
    return subQuadKvChunkSize;
  }


  @JsonProperty(JSON_PROPERTY_SUB_QUAD_KV_CHUNK_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubQuadKvChunkSize(String subQuadKvChunkSize) {
    this.subQuadKvChunkSize = subQuadKvChunkSize;
  }


  public Flags subQuadChunkThreshold(String subQuadChunkThreshold) {
    
    this.subQuadChunkThreshold = subQuadChunkThreshold;
    return this;
  }

   /**
   * the percentage of VRAM threshold for the sub-quadratic cross-attention layer optimization to use chunking
   * @return subQuadChunkThreshold
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_QUAD_CHUNK_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubQuadChunkThreshold() {
    return subQuadChunkThreshold;
  }


  @JsonProperty(JSON_PROPERTY_SUB_QUAD_CHUNK_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubQuadChunkThreshold(String subQuadChunkThreshold) {
    this.subQuadChunkThreshold = subQuadChunkThreshold;
  }


  public Flags optSplitAttentionInvokeai(Boolean optSplitAttentionInvokeai) {
    
    this.optSplitAttentionInvokeai = optSplitAttentionInvokeai;
    return this;
  }

   /**
   * prefer InvokeAI&#39;s cross-attention layer optimization for automatic choice of optimization
   * @return optSplitAttentionInvokeai
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_SPLIT_ATTENTION_INVOKEAI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptSplitAttentionInvokeai() {
    return optSplitAttentionInvokeai;
  }


  @JsonProperty(JSON_PROPERTY_OPT_SPLIT_ATTENTION_INVOKEAI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptSplitAttentionInvokeai(Boolean optSplitAttentionInvokeai) {
    this.optSplitAttentionInvokeai = optSplitAttentionInvokeai;
  }


  public Flags optSplitAttentionV1(Boolean optSplitAttentionV1) {
    
    this.optSplitAttentionV1 = optSplitAttentionV1;
    return this;
  }

   /**
   * prefer older version of split attention optimization for automatic choice of optimization
   * @return optSplitAttentionV1
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_SPLIT_ATTENTION_V1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptSplitAttentionV1() {
    return optSplitAttentionV1;
  }


  @JsonProperty(JSON_PROPERTY_OPT_SPLIT_ATTENTION_V1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptSplitAttentionV1(Boolean optSplitAttentionV1) {
    this.optSplitAttentionV1 = optSplitAttentionV1;
  }


  public Flags optSdpAttention(Boolean optSdpAttention) {
    
    this.optSdpAttention = optSdpAttention;
    return this;
  }

   /**
   * prefer scaled dot product cross-attention layer optimization for automatic choice of optimization; requires PyTorch 2.*
   * @return optSdpAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_SDP_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptSdpAttention() {
    return optSdpAttention;
  }


  @JsonProperty(JSON_PROPERTY_OPT_SDP_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptSdpAttention(Boolean optSdpAttention) {
    this.optSdpAttention = optSdpAttention;
  }


  public Flags optSdpNoMemAttention(Boolean optSdpNoMemAttention) {
    
    this.optSdpNoMemAttention = optSdpNoMemAttention;
    return this;
  }

   /**
   * prefer scaled dot product cross-attention layer optimization without memory efficient attention for automatic choice of optimization, makes image generation deterministic; requires PyTorch 2.*
   * @return optSdpNoMemAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_SDP_NO_MEM_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptSdpNoMemAttention() {
    return optSdpNoMemAttention;
  }


  @JsonProperty(JSON_PROPERTY_OPT_SDP_NO_MEM_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptSdpNoMemAttention(Boolean optSdpNoMemAttention) {
    this.optSdpNoMemAttention = optSdpNoMemAttention;
  }


  public Flags disableOptSplitAttention(Boolean disableOptSplitAttention) {
    
    this.disableOptSplitAttention = disableOptSplitAttention;
    return this;
  }

   /**
   * prefer no cross-attention layer optimization for automatic choice of optimization
   * @return disableOptSplitAttention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_OPT_SPLIT_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableOptSplitAttention() {
    return disableOptSplitAttention;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_OPT_SPLIT_ATTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableOptSplitAttention(Boolean disableOptSplitAttention) {
    this.disableOptSplitAttention = disableOptSplitAttention;
  }


  public Flags disableNanCheck(Boolean disableNanCheck) {
    
    this.disableNanCheck = disableNanCheck;
    return this;
  }

   /**
   * do not check if produced images/latent spaces have nans; useful for running without a checkpoint in CI
   * @return disableNanCheck
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_NAN_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableNanCheck() {
    return disableNanCheck;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_NAN_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableNanCheck(Boolean disableNanCheck) {
    this.disableNanCheck = disableNanCheck;
  }


  public Flags useCpu(List<Object> useCpu) {
    
    this.useCpu = useCpu;
    return this;
  }

  public Flags addUseCpuItem(Object useCpuItem) {
    if (this.useCpu == null) {
      this.useCpu = new ArrayList<>();
    }
    this.useCpu.add(useCpuItem);
    return this;
  }

   /**
   * use CPU as torch device for specified modules
   * @return useCpu
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_CPU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getUseCpu() {
    return useCpu;
  }


  @JsonProperty(JSON_PROPERTY_USE_CPU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseCpu(List<Object> useCpu) {
    this.useCpu = useCpu;
  }


  public Flags disableModelLoadingRamOptimization(Boolean disableModelLoadingRamOptimization) {
    
    this.disableModelLoadingRamOptimization = disableModelLoadingRamOptimization;
    return this;
  }

   /**
   * disable an optimization that reduces RAM use when loading a model
   * @return disableModelLoadingRamOptimization
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_MODEL_LOADING_RAM_OPTIMIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableModelLoadingRamOptimization() {
    return disableModelLoadingRamOptimization;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_MODEL_LOADING_RAM_OPTIMIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableModelLoadingRamOptimization(Boolean disableModelLoadingRamOptimization) {
    this.disableModelLoadingRamOptimization = disableModelLoadingRamOptimization;
  }


  public Flags listen(Boolean listen) {
    
    this.listen = listen;
    return this;
  }

   /**
   * launch gradio with 0.0.0.0 as server name, allowing to respond to network requests
   * @return listen
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LISTEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getListen() {
    return listen;
  }


  @JsonProperty(JSON_PROPERTY_LISTEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListen(Boolean listen) {
    this.listen = listen;
  }


  public Flags port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * launch gradio with given server port, you need root/admin rights for ports &lt; 1024, defaults to 7860 if available
   * @return port
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPort(String port) {
    this.port = port;
  }


  public Flags showNegativePrompt(Boolean showNegativePrompt) {
    
    this.showNegativePrompt = showNegativePrompt;
    return this;
  }

   /**
   * does not do anything
   * @return showNegativePrompt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_NEGATIVE_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowNegativePrompt() {
    return showNegativePrompt;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_NEGATIVE_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowNegativePrompt(Boolean showNegativePrompt) {
    this.showNegativePrompt = showNegativePrompt;
  }


  public Flags uiConfigFile(String uiConfigFile) {
    
    this.uiConfigFile = uiConfigFile;
    return this;
  }

   /**
   * filename to use for ui configuration
   * @return uiConfigFile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UI_CONFIG_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUiConfigFile() {
    return uiConfigFile;
  }


  @JsonProperty(JSON_PROPERTY_UI_CONFIG_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUiConfigFile(String uiConfigFile) {
    this.uiConfigFile = uiConfigFile;
  }


  public Flags hideUiDirConfig(Boolean hideUiDirConfig) {
    
    this.hideUiDirConfig = hideUiDirConfig;
    return this;
  }

   /**
   * hide directory configuration from webui
   * @return hideUiDirConfig
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIDE_UI_DIR_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHideUiDirConfig() {
    return hideUiDirConfig;
  }


  @JsonProperty(JSON_PROPERTY_HIDE_UI_DIR_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHideUiDirConfig(Boolean hideUiDirConfig) {
    this.hideUiDirConfig = hideUiDirConfig;
  }


  public Flags freezeSettings(Boolean freezeSettings) {
    
    this.freezeSettings = freezeSettings;
    return this;
  }

   /**
   * disable editing settings
   * @return freezeSettings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FREEZE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFreezeSettings() {
    return freezeSettings;
  }


  @JsonProperty(JSON_PROPERTY_FREEZE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFreezeSettings(Boolean freezeSettings) {
    this.freezeSettings = freezeSettings;
  }


  public Flags uiSettingsFile(String uiSettingsFile) {
    
    this.uiSettingsFile = uiSettingsFile;
    return this;
  }

   /**
   * filename to use for ui settings
   * @return uiSettingsFile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UI_SETTINGS_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUiSettingsFile() {
    return uiSettingsFile;
  }


  @JsonProperty(JSON_PROPERTY_UI_SETTINGS_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUiSettingsFile(String uiSettingsFile) {
    this.uiSettingsFile = uiSettingsFile;
  }


  public Flags gradioDebug(Boolean gradioDebug) {
    
    this.gradioDebug = gradioDebug;
    return this;
  }

   /**
   * launch gradio with --debug option
   * @return gradioDebug
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_DEBUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGradioDebug() {
    return gradioDebug;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_DEBUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioDebug(Boolean gradioDebug) {
    this.gradioDebug = gradioDebug;
  }


  public Flags gradioAuth(String gradioAuth) {
    
    this.gradioAuth = gradioAuth;
    return this;
  }

   /**
   * set gradio authentication like \&quot;username:password\&quot;; or comma-delimit multiple like \&quot;u1:p1,u2:p2,u3:p3\&quot;
   * @return gradioAuth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGradioAuth() {
    return gradioAuth;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioAuth(String gradioAuth) {
    this.gradioAuth = gradioAuth;
  }


  public Flags gradioAuthPath(String gradioAuthPath) {
    
    this.gradioAuthPath = gradioAuthPath;
    return this;
  }

   /**
   * set gradio authentication file path ex. \&quot;/path/to/auth/file\&quot; same auth format as --gradio-auth
   * @return gradioAuthPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_AUTH_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGradioAuthPath() {
    return gradioAuthPath;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_AUTH_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioAuthPath(String gradioAuthPath) {
    this.gradioAuthPath = gradioAuthPath;
  }


  public Flags gradioImg2imgTool(String gradioImg2imgTool) {
    
    this.gradioImg2imgTool = gradioImg2imgTool;
    return this;
  }

   /**
   * does not do anything
   * @return gradioImg2imgTool
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_IMG2IMG_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGradioImg2imgTool() {
    return gradioImg2imgTool;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_IMG2IMG_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioImg2imgTool(String gradioImg2imgTool) {
    this.gradioImg2imgTool = gradioImg2imgTool;
  }


  public Flags gradioInpaintTool(String gradioInpaintTool) {
    
    this.gradioInpaintTool = gradioInpaintTool;
    return this;
  }

   /**
   * does not do anything
   * @return gradioInpaintTool
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_INPAINT_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGradioInpaintTool() {
    return gradioInpaintTool;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_INPAINT_TOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioInpaintTool(String gradioInpaintTool) {
    this.gradioInpaintTool = gradioInpaintTool;
  }


  public Flags gradioAllowedPath(List<Object> gradioAllowedPath) {
    
    this.gradioAllowedPath = gradioAllowedPath;
    return this;
  }

  public Flags addGradioAllowedPathItem(Object gradioAllowedPathItem) {
    if (this.gradioAllowedPath == null) {
      this.gradioAllowedPath = new ArrayList<>(Arrays.asList(D:\stable diffusion\stable-diffusion-webui));
    }
    this.gradioAllowedPath.add(gradioAllowedPathItem);
    return this;
  }

   /**
   * add path to gradio&#39;s allowed_paths, make it possible to serve files from it
   * @return gradioAllowedPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_ALLOWED_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getGradioAllowedPath() {
    return gradioAllowedPath;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_ALLOWED_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioAllowedPath(List<Object> gradioAllowedPath) {
    this.gradioAllowedPath = gradioAllowedPath;
  }


  public Flags optChannelslast(Boolean optChannelslast) {
    
    this.optChannelslast = optChannelslast;
    return this;
  }

   /**
   * change memory type for stable diffusion to channels last
   * @return optChannelslast
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPT_CHANNELSLAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptChannelslast() {
    return optChannelslast;
  }


  @JsonProperty(JSON_PROPERTY_OPT_CHANNELSLAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptChannelslast(Boolean optChannelslast) {
    this.optChannelslast = optChannelslast;
  }


  public Flags stylesFile(String stylesFile) {
    
    this.stylesFile = stylesFile;
    return this;
  }

   /**
   * filename to use for styles
   * @return stylesFile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STYLES_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStylesFile() {
    return stylesFile;
  }


  @JsonProperty(JSON_PROPERTY_STYLES_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStylesFile(String stylesFile) {
    this.stylesFile = stylesFile;
  }


  public Flags autolaunch(Boolean autolaunch) {
    
    this.autolaunch = autolaunch;
    return this;
  }

   /**
   * open the webui URL in the system&#39;s default browser upon launch
   * @return autolaunch
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTOLAUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutolaunch() {
    return autolaunch;
  }


  @JsonProperty(JSON_PROPERTY_AUTOLAUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutolaunch(Boolean autolaunch) {
    this.autolaunch = autolaunch;
  }


  public Flags theme(String theme) {
    
    this.theme = theme;
    return this;
  }

   /**
   * launches the UI with light or dark theme
   * @return theme
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTheme() {
    return theme;
  }


  @JsonProperty(JSON_PROPERTY_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTheme(String theme) {
    this.theme = theme;
  }


  public Flags useTextboxSeed(Boolean useTextboxSeed) {
    
    this.useTextboxSeed = useTextboxSeed;
    return this;
  }

   /**
   * use textbox for seeds in UI (no up/down, but possible to input long seeds)
   * @return useTextboxSeed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_TEXTBOX_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseTextboxSeed() {
    return useTextboxSeed;
  }


  @JsonProperty(JSON_PROPERTY_USE_TEXTBOX_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseTextboxSeed(Boolean useTextboxSeed) {
    this.useTextboxSeed = useTextboxSeed;
  }


  public Flags disableConsoleProgressbars(Boolean disableConsoleProgressbars) {
    
    this.disableConsoleProgressbars = disableConsoleProgressbars;
    return this;
  }

   /**
   * do not output progressbars to console
   * @return disableConsoleProgressbars
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_CONSOLE_PROGRESSBARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableConsoleProgressbars() {
    return disableConsoleProgressbars;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_CONSOLE_PROGRESSBARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableConsoleProgressbars(Boolean disableConsoleProgressbars) {
    this.disableConsoleProgressbars = disableConsoleProgressbars;
  }


  public Flags enableConsolePrompts(Boolean enableConsolePrompts) {
    
    this.enableConsolePrompts = enableConsolePrompts;
    return this;
  }

   /**
   * print prompts to console when generating with txt2img and img2img
   * @return enableConsolePrompts
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_CONSOLE_PROMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableConsolePrompts() {
    return enableConsolePrompts;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_CONSOLE_PROMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableConsolePrompts(Boolean enableConsolePrompts) {
    this.enableConsolePrompts = enableConsolePrompts;
  }


  public Flags vaePath(String vaePath) {
    
    this.vaePath = vaePath;
    return this;
  }

   /**
   * Checkpoint to use as VAE; setting this argument disables all settings related to VAE
   * @return vaePath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVaePath() {
    return vaePath;
  }


  @JsonProperty(JSON_PROPERTY_VAE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVaePath(String vaePath) {
    this.vaePath = vaePath;
  }


  public Flags disableSafeUnpickle(Boolean disableSafeUnpickle) {
    
    this.disableSafeUnpickle = disableSafeUnpickle;
    return this;
  }

   /**
   * disable checking pytorch models for malicious code
   * @return disableSafeUnpickle
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_SAFE_UNPICKLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableSafeUnpickle() {
    return disableSafeUnpickle;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_SAFE_UNPICKLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableSafeUnpickle(Boolean disableSafeUnpickle) {
    this.disableSafeUnpickle = disableSafeUnpickle;
  }


  public Flags api(Boolean api) {
    
    this.api = api;
    return this;
  }

   /**
   * use api&#x3D;True to launch the API together with the webui (use --nowebui instead for only the API)
   * @return api
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApi() {
    return api;
  }


  @JsonProperty(JSON_PROPERTY_API)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApi(Boolean api) {
    this.api = api;
  }


  public Flags apiAuth(String apiAuth) {
    
    this.apiAuth = apiAuth;
    return this;
  }

   /**
   * Set authentication for API like \&quot;username:password\&quot;; or comma-delimit multiple like \&quot;u1:p1,u2:p2,u3:p3\&quot;
   * @return apiAuth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApiAuth() {
    return apiAuth;
  }


  @JsonProperty(JSON_PROPERTY_API_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiAuth(String apiAuth) {
    this.apiAuth = apiAuth;
  }


  public Flags apiLog(Boolean apiLog) {
    
    this.apiLog = apiLog;
    return this;
  }

   /**
   * use api-log&#x3D;True to enable logging of all API requests
   * @return apiLog
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApiLog() {
    return apiLog;
  }


  @JsonProperty(JSON_PROPERTY_API_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiLog(Boolean apiLog) {
    this.apiLog = apiLog;
  }


  public Flags nowebui(Boolean nowebui) {
    
    this.nowebui = nowebui;
    return this;
  }

   /**
   * use api&#x3D;True to launch the API instead of the webui
   * @return nowebui
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOWEBUI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNowebui() {
    return nowebui;
  }


  @JsonProperty(JSON_PROPERTY_NOWEBUI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNowebui(Boolean nowebui) {
    this.nowebui = nowebui;
  }


  public Flags uiDebugMode(Boolean uiDebugMode) {
    
    this.uiDebugMode = uiDebugMode;
    return this;
  }

   /**
   * Don&#39;t load model to quickly launch UI
   * @return uiDebugMode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UI_DEBUG_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUiDebugMode() {
    return uiDebugMode;
  }


  @JsonProperty(JSON_PROPERTY_UI_DEBUG_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUiDebugMode(Boolean uiDebugMode) {
    this.uiDebugMode = uiDebugMode;
  }


  public Flags deviceId(String deviceId) {
    
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Select the default CUDA device to use (export CUDA_VISIBLE_DEVICES&#x3D;0,1,etc might be needed before)
   * @return deviceId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceId() {
    return deviceId;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public Flags administrator(Boolean administrator) {
    
    this.administrator = administrator;
    return this;
  }

   /**
   * Administrator rights
   * @return administrator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAdministrator() {
    return administrator;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrator(Boolean administrator) {
    this.administrator = administrator;
  }


  public Flags corsAllowOrigins(String corsAllowOrigins) {
    
    this.corsAllowOrigins = corsAllowOrigins;
    return this;
  }

   /**
   * Allowed CORS origin(s) in the form of a comma-separated list (no spaces)
   * @return corsAllowOrigins
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CORS_ALLOW_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCorsAllowOrigins() {
    return corsAllowOrigins;
  }


  @JsonProperty(JSON_PROPERTY_CORS_ALLOW_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorsAllowOrigins(String corsAllowOrigins) {
    this.corsAllowOrigins = corsAllowOrigins;
  }


  public Flags corsAllowOriginsRegex(String corsAllowOriginsRegex) {
    
    this.corsAllowOriginsRegex = corsAllowOriginsRegex;
    return this;
  }

   /**
   * Allowed CORS origin(s) in the form of a single regular expression
   * @return corsAllowOriginsRegex
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CORS_ALLOW_ORIGINS_REGEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCorsAllowOriginsRegex() {
    return corsAllowOriginsRegex;
  }


  @JsonProperty(JSON_PROPERTY_CORS_ALLOW_ORIGINS_REGEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorsAllowOriginsRegex(String corsAllowOriginsRegex) {
    this.corsAllowOriginsRegex = corsAllowOriginsRegex;
  }


  public Flags tlsKeyfile(String tlsKeyfile) {
    
    this.tlsKeyfile = tlsKeyfile;
    return this;
  }

   /**
   * Partially enables TLS, requires --tls-certfile to fully function
   * @return tlsKeyfile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TLS_KEYFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTlsKeyfile() {
    return tlsKeyfile;
  }


  @JsonProperty(JSON_PROPERTY_TLS_KEYFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTlsKeyfile(String tlsKeyfile) {
    this.tlsKeyfile = tlsKeyfile;
  }


  public Flags tlsCertfile(String tlsCertfile) {
    
    this.tlsCertfile = tlsCertfile;
    return this;
  }

   /**
   * Partially enables TLS, requires --tls-keyfile to fully function
   * @return tlsCertfile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TLS_CERTFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTlsCertfile() {
    return tlsCertfile;
  }


  @JsonProperty(JSON_PROPERTY_TLS_CERTFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTlsCertfile(String tlsCertfile) {
    this.tlsCertfile = tlsCertfile;
  }


  public Flags disableTlsVerify(String disableTlsVerify) {
    
    this.disableTlsVerify = disableTlsVerify;
    return this;
  }

   /**
   * When passed, enables the use of self-signed certificates.
   * @return disableTlsVerify
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_TLS_VERIFY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisableTlsVerify() {
    return disableTlsVerify;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_TLS_VERIFY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableTlsVerify(String disableTlsVerify) {
    this.disableTlsVerify = disableTlsVerify;
  }


  public Flags serverName(String serverName) {
    
    this.serverName = serverName;
    return this;
  }

   /**
   * Sets hostname of server
   * @return serverName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServerName() {
    return serverName;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerName(String serverName) {
    this.serverName = serverName;
  }


  public Flags gradioQueue(Boolean gradioQueue) {
    
    this.gradioQueue = gradioQueue;
    return this;
  }

   /**
   * does not do anything
   * @return gradioQueue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADIO_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGradioQueue() {
    return gradioQueue;
  }


  @JsonProperty(JSON_PROPERTY_GRADIO_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradioQueue(Boolean gradioQueue) {
    this.gradioQueue = gradioQueue;
  }


  public Flags noGradioQueue(Boolean noGradioQueue) {
    
    this.noGradioQueue = noGradioQueue;
    return this;
  }

   /**
   * Disables gradio queue; causes the webpage to use http requests instead of websockets; was the defaul in earlier versions
   * @return noGradioQueue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_GRADIO_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNoGradioQueue() {
    return noGradioQueue;
  }


  @JsonProperty(JSON_PROPERTY_NO_GRADIO_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoGradioQueue(Boolean noGradioQueue) {
    this.noGradioQueue = noGradioQueue;
  }


  public Flags skipVersionCheck(Boolean skipVersionCheck) {
    
    this.skipVersionCheck = skipVersionCheck;
    return this;
  }

   /**
   * Do not check versions of torch and xformers
   * @return skipVersionCheck
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP_VERSION_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipVersionCheck() {
    return skipVersionCheck;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_VERSION_CHECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipVersionCheck(Boolean skipVersionCheck) {
    this.skipVersionCheck = skipVersionCheck;
  }


  public Flags noHashing(Boolean noHashing) {
    
    this.noHashing = noHashing;
    return this;
  }

   /**
   * disable sha256 hashing of checkpoints to help loading performance
   * @return noHashing
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_HASHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNoHashing() {
    return noHashing;
  }


  @JsonProperty(JSON_PROPERTY_NO_HASHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoHashing(Boolean noHashing) {
    this.noHashing = noHashing;
  }


  public Flags noDownloadSdModel(Boolean noDownloadSdModel) {
    
    this.noDownloadSdModel = noDownloadSdModel;
    return this;
  }

   /**
   * don&#39;t download SD1.5 model even if no model is found in --ckpt-dir
   * @return noDownloadSdModel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_DOWNLOAD_SD_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNoDownloadSdModel() {
    return noDownloadSdModel;
  }


  @JsonProperty(JSON_PROPERTY_NO_DOWNLOAD_SD_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoDownloadSdModel(Boolean noDownloadSdModel) {
    this.noDownloadSdModel = noDownloadSdModel;
  }


  public Flags subpath(String subpath) {
    
    this.subpath = subpath;
    return this;
  }

   /**
   * customize the subpath for gradio, use with reverse proxy
   * @return subpath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubpath() {
    return subpath;
  }


  @JsonProperty(JSON_PROPERTY_SUBPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubpath(String subpath) {
    this.subpath = subpath;
  }


  public Flags addStopRoute(Boolean addStopRoute) {
    
    this.addStopRoute = addStopRoute;
    return this;
  }

   /**
   * add /_stop route to stop server
   * @return addStopRoute
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_STOP_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddStopRoute() {
    return addStopRoute;
  }


  @JsonProperty(JSON_PROPERTY_ADD_STOP_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddStopRoute(Boolean addStopRoute) {
    this.addStopRoute = addStopRoute;
  }


  public Flags apiServerStop(Boolean apiServerStop) {
    
    this.apiServerStop = apiServerStop;
    return this;
  }

   /**
   * enable server stop/restart/kill via api
   * @return apiServerStop
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_SERVER_STOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApiServerStop() {
    return apiServerStop;
  }


  @JsonProperty(JSON_PROPERTY_API_SERVER_STOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiServerStop(Boolean apiServerStop) {
    this.apiServerStop = apiServerStop;
  }


  public Flags timeoutKeepAlive(Integer timeoutKeepAlive) {
    
    this.timeoutKeepAlive = timeoutKeepAlive;
    return this;
  }

   /**
   * set timeout_keep_alive for uvicorn
   * @return timeoutKeepAlive
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMEOUT_KEEP_ALIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimeoutKeepAlive() {
    return timeoutKeepAlive;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT_KEEP_ALIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeoutKeepAlive(Integer timeoutKeepAlive) {
    this.timeoutKeepAlive = timeoutKeepAlive;
  }


  public Flags disableAllExtensions(Boolean disableAllExtensions) {
    
    this.disableAllExtensions = disableAllExtensions;
    return this;
  }

   /**
   * prevent all extensions from running regardless of any other settings
   * @return disableAllExtensions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_ALL_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableAllExtensions() {
    return disableAllExtensions;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_ALL_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableAllExtensions(Boolean disableAllExtensions) {
    this.disableAllExtensions = disableAllExtensions;
  }


  public Flags disableExtraExtensions(Boolean disableExtraExtensions) {
    
    this.disableExtraExtensions = disableExtraExtensions;
    return this;
  }

   /**
   *  prevent all extensions except built-in from running regardless of any other settings
   * @return disableExtraExtensions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_EXTRA_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableExtraExtensions() {
    return disableExtraExtensions;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_EXTRA_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableExtraExtensions(Boolean disableExtraExtensions) {
    this.disableExtraExtensions = disableExtraExtensions;
  }


  public Flags ldsrModelsPath(String ldsrModelsPath) {
    
    this.ldsrModelsPath = ldsrModelsPath;
    return this;
  }

   /**
   * Path to directory with LDSR model file(s).
   * @return ldsrModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LDSR_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLdsrModelsPath() {
    return ldsrModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_LDSR_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLdsrModelsPath(String ldsrModelsPath) {
    this.ldsrModelsPath = ldsrModelsPath;
  }


  public Flags loraDir(String loraDir) {
    
    this.loraDir = loraDir;
    return this;
  }

   /**
   * Path to directory with Lora networks.
   * @return loraDir
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LORA_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoraDir() {
    return loraDir;
  }


  @JsonProperty(JSON_PROPERTY_LORA_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoraDir(String loraDir) {
    this.loraDir = loraDir;
  }


  public Flags lycoDirBackcompat(String lycoDirBackcompat) {
    
    this.lycoDirBackcompat = lycoDirBackcompat;
    return this;
  }

   /**
   * Path to directory with LyCORIS networks (for backawards compatibility; can also use --lyco-dir).
   * @return lycoDirBackcompat
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LYCO_DIR_BACKCOMPAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLycoDirBackcompat() {
    return lycoDirBackcompat;
  }


  @JsonProperty(JSON_PROPERTY_LYCO_DIR_BACKCOMPAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLycoDirBackcompat(String lycoDirBackcompat) {
    this.lycoDirBackcompat = lycoDirBackcompat;
  }


  public Flags scunetModelsPath(String scunetModelsPath) {
    
    this.scunetModelsPath = scunetModelsPath;
    return this;
  }

   /**
   * Path to directory with ScuNET model file(s).
   * @return scunetModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCUNET_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScunetModelsPath() {
    return scunetModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_SCUNET_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScunetModelsPath(String scunetModelsPath) {
    this.scunetModelsPath = scunetModelsPath;
  }


  public Flags swinirModelsPath(String swinirModelsPath) {
    
    this.swinirModelsPath = swinirModelsPath;
    return this;
  }

   /**
   * Path to directory with SwinIR model file(s).
   * @return swinirModelsPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SWINIR_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSwinirModelsPath() {
    return swinirModelsPath;
  }


  @JsonProperty(JSON_PROPERTY_SWINIR_MODELS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSwinirModelsPath(String swinirModelsPath) {
    this.swinirModelsPath = swinirModelsPath;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Flags flags = (Flags) o;
    return Objects.equals(this.f, flags.f) &&
        Objects.equals(this.updateAllExtensions, flags.updateAllExtensions) &&
        Objects.equals(this.skipPythonVersionCheck, flags.skipPythonVersionCheck) &&
        Objects.equals(this.skipTorchCudaTest, flags.skipTorchCudaTest) &&
        Objects.equals(this.reinstallXformers, flags.reinstallXformers) &&
        Objects.equals(this.reinstallTorch, flags.reinstallTorch) &&
        Objects.equals(this.updateCheck, flags.updateCheck) &&
        Objects.equals(this.testServer, flags.testServer) &&
        Objects.equals(this.logStartup, flags.logStartup) &&
        Objects.equals(this.skipPrepareEnvironment, flags.skipPrepareEnvironment) &&
        Objects.equals(this.skipInstall, flags.skipInstall) &&
        Objects.equals(this.dumpSysinfo, flags.dumpSysinfo) &&
        Objects.equals(this.loglevel, flags.loglevel) &&
        Objects.equals(this.doNotDownloadClip, flags.doNotDownloadClip) &&
        Objects.equals(this.dataDir, flags.dataDir) &&
        Objects.equals(this.config, flags.config) &&
        Objects.equals(this.ckpt, flags.ckpt) &&
        Objects.equals(this.ckptDir, flags.ckptDir) &&
        Objects.equals(this.vaeDir, flags.vaeDir) &&
        Objects.equals(this.gfpganDir, flags.gfpganDir) &&
        Objects.equals(this.gfpganModel, flags.gfpganModel) &&
        Objects.equals(this.noHalf, flags.noHalf) &&
        Objects.equals(this.noHalfVae, flags.noHalfVae) &&
        Objects.equals(this.noProgressbarHiding, flags.noProgressbarHiding) &&
        Objects.equals(this.maxBatchCount, flags.maxBatchCount) &&
        Objects.equals(this.embeddingsDir, flags.embeddingsDir) &&
        Objects.equals(this.textualInversionTemplatesDir, flags.textualInversionTemplatesDir) &&
        Objects.equals(this.hypernetworkDir, flags.hypernetworkDir) &&
        Objects.equals(this.localizationsDir, flags.localizationsDir) &&
        Objects.equals(this.allowCode, flags.allowCode) &&
        Objects.equals(this.medvram, flags.medvram) &&
        Objects.equals(this.medvramSdxl, flags.medvramSdxl) &&
        Objects.equals(this.lowvram, flags.lowvram) &&
        Objects.equals(this.lowram, flags.lowram) &&
        Objects.equals(this.alwaysBatchCondUncond, flags.alwaysBatchCondUncond) &&
        Objects.equals(this.unloadGfpgan, flags.unloadGfpgan) &&
        Objects.equals(this.precision, flags.precision) &&
        Objects.equals(this.upcastSampling, flags.upcastSampling) &&
        Objects.equals(this.share, flags.share) &&
        Objects.equals(this.ngrok, flags.ngrok) &&
        Objects.equals(this.ngrokRegion, flags.ngrokRegion) &&
        Objects.equals(this.ngrokOptions, flags.ngrokOptions) &&
        Objects.equals(this.enableInsecureExtensionAccess, flags.enableInsecureExtensionAccess) &&
        Objects.equals(this.codeformerModelsPath, flags.codeformerModelsPath) &&
        Objects.equals(this.gfpganModelsPath, flags.gfpganModelsPath) &&
        Objects.equals(this.esrganModelsPath, flags.esrganModelsPath) &&
        Objects.equals(this.bsrganModelsPath, flags.bsrganModelsPath) &&
        Objects.equals(this.realesrganModelsPath, flags.realesrganModelsPath) &&
        Objects.equals(this.clipModelsPath, flags.clipModelsPath) &&
        Objects.equals(this.xformers, flags.xformers) &&
        Objects.equals(this.forceEnableXformers, flags.forceEnableXformers) &&
        Objects.equals(this.xformersFlashAttention, flags.xformersFlashAttention) &&
        Objects.equals(this.deepdanbooru, flags.deepdanbooru) &&
        Objects.equals(this.optSplitAttention, flags.optSplitAttention) &&
        Objects.equals(this.optSubQuadAttention, flags.optSubQuadAttention) &&
        Objects.equals(this.subQuadQChunkSize, flags.subQuadQChunkSize) &&
        Objects.equals(this.subQuadKvChunkSize, flags.subQuadKvChunkSize) &&
        Objects.equals(this.subQuadChunkThreshold, flags.subQuadChunkThreshold) &&
        Objects.equals(this.optSplitAttentionInvokeai, flags.optSplitAttentionInvokeai) &&
        Objects.equals(this.optSplitAttentionV1, flags.optSplitAttentionV1) &&
        Objects.equals(this.optSdpAttention, flags.optSdpAttention) &&
        Objects.equals(this.optSdpNoMemAttention, flags.optSdpNoMemAttention) &&
        Objects.equals(this.disableOptSplitAttention, flags.disableOptSplitAttention) &&
        Objects.equals(this.disableNanCheck, flags.disableNanCheck) &&
        Objects.equals(this.useCpu, flags.useCpu) &&
        Objects.equals(this.disableModelLoadingRamOptimization, flags.disableModelLoadingRamOptimization) &&
        Objects.equals(this.listen, flags.listen) &&
        Objects.equals(this.port, flags.port) &&
        Objects.equals(this.showNegativePrompt, flags.showNegativePrompt) &&
        Objects.equals(this.uiConfigFile, flags.uiConfigFile) &&
        Objects.equals(this.hideUiDirConfig, flags.hideUiDirConfig) &&
        Objects.equals(this.freezeSettings, flags.freezeSettings) &&
        Objects.equals(this.uiSettingsFile, flags.uiSettingsFile) &&
        Objects.equals(this.gradioDebug, flags.gradioDebug) &&
        Objects.equals(this.gradioAuth, flags.gradioAuth) &&
        Objects.equals(this.gradioAuthPath, flags.gradioAuthPath) &&
        Objects.equals(this.gradioImg2imgTool, flags.gradioImg2imgTool) &&
        Objects.equals(this.gradioInpaintTool, flags.gradioInpaintTool) &&
        Objects.equals(this.gradioAllowedPath, flags.gradioAllowedPath) &&
        Objects.equals(this.optChannelslast, flags.optChannelslast) &&
        Objects.equals(this.stylesFile, flags.stylesFile) &&
        Objects.equals(this.autolaunch, flags.autolaunch) &&
        Objects.equals(this.theme, flags.theme) &&
        Objects.equals(this.useTextboxSeed, flags.useTextboxSeed) &&
        Objects.equals(this.disableConsoleProgressbars, flags.disableConsoleProgressbars) &&
        Objects.equals(this.enableConsolePrompts, flags.enableConsolePrompts) &&
        Objects.equals(this.vaePath, flags.vaePath) &&
        Objects.equals(this.disableSafeUnpickle, flags.disableSafeUnpickle) &&
        Objects.equals(this.api, flags.api) &&
        Objects.equals(this.apiAuth, flags.apiAuth) &&
        Objects.equals(this.apiLog, flags.apiLog) &&
        Objects.equals(this.nowebui, flags.nowebui) &&
        Objects.equals(this.uiDebugMode, flags.uiDebugMode) &&
        Objects.equals(this.deviceId, flags.deviceId) &&
        Objects.equals(this.administrator, flags.administrator) &&
        Objects.equals(this.corsAllowOrigins, flags.corsAllowOrigins) &&
        Objects.equals(this.corsAllowOriginsRegex, flags.corsAllowOriginsRegex) &&
        Objects.equals(this.tlsKeyfile, flags.tlsKeyfile) &&
        Objects.equals(this.tlsCertfile, flags.tlsCertfile) &&
        Objects.equals(this.disableTlsVerify, flags.disableTlsVerify) &&
        Objects.equals(this.serverName, flags.serverName) &&
        Objects.equals(this.gradioQueue, flags.gradioQueue) &&
        Objects.equals(this.noGradioQueue, flags.noGradioQueue) &&
        Objects.equals(this.skipVersionCheck, flags.skipVersionCheck) &&
        Objects.equals(this.noHashing, flags.noHashing) &&
        Objects.equals(this.noDownloadSdModel, flags.noDownloadSdModel) &&
        Objects.equals(this.subpath, flags.subpath) &&
        Objects.equals(this.addStopRoute, flags.addStopRoute) &&
        Objects.equals(this.apiServerStop, flags.apiServerStop) &&
        Objects.equals(this.timeoutKeepAlive, flags.timeoutKeepAlive) &&
        Objects.equals(this.disableAllExtensions, flags.disableAllExtensions) &&
        Objects.equals(this.disableExtraExtensions, flags.disableExtraExtensions) &&
        Objects.equals(this.ldsrModelsPath, flags.ldsrModelsPath) &&
        Objects.equals(this.loraDir, flags.loraDir) &&
        Objects.equals(this.lycoDirBackcompat, flags.lycoDirBackcompat) &&
        Objects.equals(this.scunetModelsPath, flags.scunetModelsPath) &&
        Objects.equals(this.swinirModelsPath, flags.swinirModelsPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(f, updateAllExtensions, skipPythonVersionCheck, skipTorchCudaTest, reinstallXformers, reinstallTorch, updateCheck, testServer, logStartup, skipPrepareEnvironment, skipInstall, dumpSysinfo, loglevel, doNotDownloadClip, dataDir, config, ckpt, ckptDir, vaeDir, gfpganDir, gfpganModel, noHalf, noHalfVae, noProgressbarHiding, maxBatchCount, embeddingsDir, textualInversionTemplatesDir, hypernetworkDir, localizationsDir, allowCode, medvram, medvramSdxl, lowvram, lowram, alwaysBatchCondUncond, unloadGfpgan, precision, upcastSampling, share, ngrok, ngrokRegion, ngrokOptions, enableInsecureExtensionAccess, codeformerModelsPath, gfpganModelsPath, esrganModelsPath, bsrganModelsPath, realesrganModelsPath, clipModelsPath, xformers, forceEnableXformers, xformersFlashAttention, deepdanbooru, optSplitAttention, optSubQuadAttention, subQuadQChunkSize, subQuadKvChunkSize, subQuadChunkThreshold, optSplitAttentionInvokeai, optSplitAttentionV1, optSdpAttention, optSdpNoMemAttention, disableOptSplitAttention, disableNanCheck, useCpu, disableModelLoadingRamOptimization, listen, port, showNegativePrompt, uiConfigFile, hideUiDirConfig, freezeSettings, uiSettingsFile, gradioDebug, gradioAuth, gradioAuthPath, gradioImg2imgTool, gradioInpaintTool, gradioAllowedPath, optChannelslast, stylesFile, autolaunch, theme, useTextboxSeed, disableConsoleProgressbars, enableConsolePrompts, vaePath, disableSafeUnpickle, api, apiAuth, apiLog, nowebui, uiDebugMode, deviceId, administrator, corsAllowOrigins, corsAllowOriginsRegex, tlsKeyfile, tlsCertfile, disableTlsVerify, serverName, gradioQueue, noGradioQueue, skipVersionCheck, noHashing, noDownloadSdModel, subpath, addStopRoute, apiServerStop, timeoutKeepAlive, disableAllExtensions, disableExtraExtensions, ldsrModelsPath, loraDir, lycoDirBackcompat, scunetModelsPath, swinirModelsPath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Flags {\n");
    sb.append("    f: ").append(toIndentedString(f)).append("\n");
    sb.append("    updateAllExtensions: ").append(toIndentedString(updateAllExtensions)).append("\n");
    sb.append("    skipPythonVersionCheck: ").append(toIndentedString(skipPythonVersionCheck)).append("\n");
    sb.append("    skipTorchCudaTest: ").append(toIndentedString(skipTorchCudaTest)).append("\n");
    sb.append("    reinstallXformers: ").append(toIndentedString(reinstallXformers)).append("\n");
    sb.append("    reinstallTorch: ").append(toIndentedString(reinstallTorch)).append("\n");
    sb.append("    updateCheck: ").append(toIndentedString(updateCheck)).append("\n");
    sb.append("    testServer: ").append(toIndentedString(testServer)).append("\n");
    sb.append("    logStartup: ").append(toIndentedString(logStartup)).append("\n");
    sb.append("    skipPrepareEnvironment: ").append(toIndentedString(skipPrepareEnvironment)).append("\n");
    sb.append("    skipInstall: ").append(toIndentedString(skipInstall)).append("\n");
    sb.append("    dumpSysinfo: ").append(toIndentedString(dumpSysinfo)).append("\n");
    sb.append("    loglevel: ").append(toIndentedString(loglevel)).append("\n");
    sb.append("    doNotDownloadClip: ").append(toIndentedString(doNotDownloadClip)).append("\n");
    sb.append("    dataDir: ").append(toIndentedString(dataDir)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    ckpt: ").append(toIndentedString(ckpt)).append("\n");
    sb.append("    ckptDir: ").append(toIndentedString(ckptDir)).append("\n");
    sb.append("    vaeDir: ").append(toIndentedString(vaeDir)).append("\n");
    sb.append("    gfpganDir: ").append(toIndentedString(gfpganDir)).append("\n");
    sb.append("    gfpganModel: ").append(toIndentedString(gfpganModel)).append("\n");
    sb.append("    noHalf: ").append(toIndentedString(noHalf)).append("\n");
    sb.append("    noHalfVae: ").append(toIndentedString(noHalfVae)).append("\n");
    sb.append("    noProgressbarHiding: ").append(toIndentedString(noProgressbarHiding)).append("\n");
    sb.append("    maxBatchCount: ").append(toIndentedString(maxBatchCount)).append("\n");
    sb.append("    embeddingsDir: ").append(toIndentedString(embeddingsDir)).append("\n");
    sb.append("    textualInversionTemplatesDir: ").append(toIndentedString(textualInversionTemplatesDir)).append("\n");
    sb.append("    hypernetworkDir: ").append(toIndentedString(hypernetworkDir)).append("\n");
    sb.append("    localizationsDir: ").append(toIndentedString(localizationsDir)).append("\n");
    sb.append("    allowCode: ").append(toIndentedString(allowCode)).append("\n");
    sb.append("    medvram: ").append(toIndentedString(medvram)).append("\n");
    sb.append("    medvramSdxl: ").append(toIndentedString(medvramSdxl)).append("\n");
    sb.append("    lowvram: ").append(toIndentedString(lowvram)).append("\n");
    sb.append("    lowram: ").append(toIndentedString(lowram)).append("\n");
    sb.append("    alwaysBatchCondUncond: ").append(toIndentedString(alwaysBatchCondUncond)).append("\n");
    sb.append("    unloadGfpgan: ").append(toIndentedString(unloadGfpgan)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    upcastSampling: ").append(toIndentedString(upcastSampling)).append("\n");
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    ngrok: ").append(toIndentedString(ngrok)).append("\n");
    sb.append("    ngrokRegion: ").append(toIndentedString(ngrokRegion)).append("\n");
    sb.append("    ngrokOptions: ").append(toIndentedString(ngrokOptions)).append("\n");
    sb.append("    enableInsecureExtensionAccess: ").append(toIndentedString(enableInsecureExtensionAccess)).append("\n");
    sb.append("    codeformerModelsPath: ").append(toIndentedString(codeformerModelsPath)).append("\n");
    sb.append("    gfpganModelsPath: ").append(toIndentedString(gfpganModelsPath)).append("\n");
    sb.append("    esrganModelsPath: ").append(toIndentedString(esrganModelsPath)).append("\n");
    sb.append("    bsrganModelsPath: ").append(toIndentedString(bsrganModelsPath)).append("\n");
    sb.append("    realesrganModelsPath: ").append(toIndentedString(realesrganModelsPath)).append("\n");
    sb.append("    clipModelsPath: ").append(toIndentedString(clipModelsPath)).append("\n");
    sb.append("    xformers: ").append(toIndentedString(xformers)).append("\n");
    sb.append("    forceEnableXformers: ").append(toIndentedString(forceEnableXformers)).append("\n");
    sb.append("    xformersFlashAttention: ").append(toIndentedString(xformersFlashAttention)).append("\n");
    sb.append("    deepdanbooru: ").append(toIndentedString(deepdanbooru)).append("\n");
    sb.append("    optSplitAttention: ").append(toIndentedString(optSplitAttention)).append("\n");
    sb.append("    optSubQuadAttention: ").append(toIndentedString(optSubQuadAttention)).append("\n");
    sb.append("    subQuadQChunkSize: ").append(toIndentedString(subQuadQChunkSize)).append("\n");
    sb.append("    subQuadKvChunkSize: ").append(toIndentedString(subQuadKvChunkSize)).append("\n");
    sb.append("    subQuadChunkThreshold: ").append(toIndentedString(subQuadChunkThreshold)).append("\n");
    sb.append("    optSplitAttentionInvokeai: ").append(toIndentedString(optSplitAttentionInvokeai)).append("\n");
    sb.append("    optSplitAttentionV1: ").append(toIndentedString(optSplitAttentionV1)).append("\n");
    sb.append("    optSdpAttention: ").append(toIndentedString(optSdpAttention)).append("\n");
    sb.append("    optSdpNoMemAttention: ").append(toIndentedString(optSdpNoMemAttention)).append("\n");
    sb.append("    disableOptSplitAttention: ").append(toIndentedString(disableOptSplitAttention)).append("\n");
    sb.append("    disableNanCheck: ").append(toIndentedString(disableNanCheck)).append("\n");
    sb.append("    useCpu: ").append(toIndentedString(useCpu)).append("\n");
    sb.append("    disableModelLoadingRamOptimization: ").append(toIndentedString(disableModelLoadingRamOptimization)).append("\n");
    sb.append("    listen: ").append(toIndentedString(listen)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    showNegativePrompt: ").append(toIndentedString(showNegativePrompt)).append("\n");
    sb.append("    uiConfigFile: ").append(toIndentedString(uiConfigFile)).append("\n");
    sb.append("    hideUiDirConfig: ").append(toIndentedString(hideUiDirConfig)).append("\n");
    sb.append("    freezeSettings: ").append(toIndentedString(freezeSettings)).append("\n");
    sb.append("    uiSettingsFile: ").append(toIndentedString(uiSettingsFile)).append("\n");
    sb.append("    gradioDebug: ").append(toIndentedString(gradioDebug)).append("\n");
    sb.append("    gradioAuth: ").append(toIndentedString(gradioAuth)).append("\n");
    sb.append("    gradioAuthPath: ").append(toIndentedString(gradioAuthPath)).append("\n");
    sb.append("    gradioImg2imgTool: ").append(toIndentedString(gradioImg2imgTool)).append("\n");
    sb.append("    gradioInpaintTool: ").append(toIndentedString(gradioInpaintTool)).append("\n");
    sb.append("    gradioAllowedPath: ").append(toIndentedString(gradioAllowedPath)).append("\n");
    sb.append("    optChannelslast: ").append(toIndentedString(optChannelslast)).append("\n");
    sb.append("    stylesFile: ").append(toIndentedString(stylesFile)).append("\n");
    sb.append("    autolaunch: ").append(toIndentedString(autolaunch)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    useTextboxSeed: ").append(toIndentedString(useTextboxSeed)).append("\n");
    sb.append("    disableConsoleProgressbars: ").append(toIndentedString(disableConsoleProgressbars)).append("\n");
    sb.append("    enableConsolePrompts: ").append(toIndentedString(enableConsolePrompts)).append("\n");
    sb.append("    vaePath: ").append(toIndentedString(vaePath)).append("\n");
    sb.append("    disableSafeUnpickle: ").append(toIndentedString(disableSafeUnpickle)).append("\n");
    sb.append("    api: ").append(toIndentedString(api)).append("\n");
    sb.append("    apiAuth: ").append(toIndentedString(apiAuth)).append("\n");
    sb.append("    apiLog: ").append(toIndentedString(apiLog)).append("\n");
    sb.append("    nowebui: ").append(toIndentedString(nowebui)).append("\n");
    sb.append("    uiDebugMode: ").append(toIndentedString(uiDebugMode)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    administrator: ").append(toIndentedString(administrator)).append("\n");
    sb.append("    corsAllowOrigins: ").append(toIndentedString(corsAllowOrigins)).append("\n");
    sb.append("    corsAllowOriginsRegex: ").append(toIndentedString(corsAllowOriginsRegex)).append("\n");
    sb.append("    tlsKeyfile: ").append(toIndentedString(tlsKeyfile)).append("\n");
    sb.append("    tlsCertfile: ").append(toIndentedString(tlsCertfile)).append("\n");
    sb.append("    disableTlsVerify: ").append(toIndentedString(disableTlsVerify)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("    gradioQueue: ").append(toIndentedString(gradioQueue)).append("\n");
    sb.append("    noGradioQueue: ").append(toIndentedString(noGradioQueue)).append("\n");
    sb.append("    skipVersionCheck: ").append(toIndentedString(skipVersionCheck)).append("\n");
    sb.append("    noHashing: ").append(toIndentedString(noHashing)).append("\n");
    sb.append("    noDownloadSdModel: ").append(toIndentedString(noDownloadSdModel)).append("\n");
    sb.append("    subpath: ").append(toIndentedString(subpath)).append("\n");
    sb.append("    addStopRoute: ").append(toIndentedString(addStopRoute)).append("\n");
    sb.append("    apiServerStop: ").append(toIndentedString(apiServerStop)).append("\n");
    sb.append("    timeoutKeepAlive: ").append(toIndentedString(timeoutKeepAlive)).append("\n");
    sb.append("    disableAllExtensions: ").append(toIndentedString(disableAllExtensions)).append("\n");
    sb.append("    disableExtraExtensions: ").append(toIndentedString(disableExtraExtensions)).append("\n");
    sb.append("    ldsrModelsPath: ").append(toIndentedString(ldsrModelsPath)).append("\n");
    sb.append("    loraDir: ").append(toIndentedString(loraDir)).append("\n");
    sb.append("    lycoDirBackcompat: ").append(toIndentedString(lycoDirBackcompat)).append("\n");
    sb.append("    scunetModelsPath: ").append(toIndentedString(scunetModelsPath)).append("\n");
    sb.append("    swinirModelsPath: ").append(toIndentedString(swinirModelsPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

