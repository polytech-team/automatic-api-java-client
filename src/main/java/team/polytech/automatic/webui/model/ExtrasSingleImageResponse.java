/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExtrasSingleImageResponse
 */
@JsonPropertyOrder({
  ExtrasSingleImageResponse.JSON_PROPERTY_HTML_INFO,
  ExtrasSingleImageResponse.JSON_PROPERTY_IMAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-27T02:28:26.857180667+03:00[Europe/Moscow]")
public class ExtrasSingleImageResponse {
  public static final String JSON_PROPERTY_HTML_INFO = "html_info";
  private String htmlInfo;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private String image;

  public ExtrasSingleImageResponse() {
  }

  public ExtrasSingleImageResponse htmlInfo(String htmlInfo) {
    
    this.htmlInfo = htmlInfo;
    return this;
  }

   /**
   * A series of HTML tags containing the process info.
   * @return htmlInfo
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTML_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHtmlInfo() {
    return htmlInfo;
  }


  @JsonProperty(JSON_PROPERTY_HTML_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHtmlInfo(String htmlInfo) {
    this.htmlInfo = htmlInfo;
  }


  public ExtrasSingleImageResponse image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * The generated image in base64 format.
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(String image) {
    this.image = image;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtrasSingleImageResponse extrasSingleImageResponse = (ExtrasSingleImageResponse) o;
    return Objects.equals(this.htmlInfo, extrasSingleImageResponse.htmlInfo) &&
        Objects.equals(this.image, extrasSingleImageResponse.image);
  }

  @Override
  public int hashCode() {
    return Objects.hash(htmlInfo, image);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtrasSingleImageResponse {\n");
    sb.append("    htmlInfo: ").append(toIndentedString(htmlInfo)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

