/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for Flags
 */
public class FlagsTest {
    private final Flags model = new Flags(Path.of(""));

    /**
     * Model tests for Flags
     */
    @Test
    public void testFlags() {
        // TODO: test Flags
    }

    /**
     * Test the property 'f'
     */
    @Test
    public void fTest() {
        // TODO: test f
    }

    /**
     * Test the property 'updateAllExtensions'
     */
    @Test
    public void updateAllExtensionsTest() {
        // TODO: test updateAllExtensions
    }

    /**
     * Test the property 'skipPythonVersionCheck'
     */
    @Test
    public void skipPythonVersionCheckTest() {
        // TODO: test skipPythonVersionCheck
    }

    /**
     * Test the property 'skipTorchCudaTest'
     */
    @Test
    public void skipTorchCudaTestTest() {
        // TODO: test skipTorchCudaTest
    }

    /**
     * Test the property 'reinstallXformers'
     */
    @Test
    public void reinstallXformersTest() {
        // TODO: test reinstallXformers
    }

    /**
     * Test the property 'reinstallTorch'
     */
    @Test
    public void reinstallTorchTest() {
        // TODO: test reinstallTorch
    }

    /**
     * Test the property 'updateCheck'
     */
    @Test
    public void updateCheckTest() {
        // TODO: test updateCheck
    }

    /**
     * Test the property 'testServer'
     */
    @Test
    public void testServerTest() {
        // TODO: test testServer
    }

    /**
     * Test the property 'logStartup'
     */
    @Test
    public void logStartupTest() {
        // TODO: test logStartup
    }

    /**
     * Test the property 'skipPrepareEnvironment'
     */
    @Test
    public void skipPrepareEnvironmentTest() {
        // TODO: test skipPrepareEnvironment
    }

    /**
     * Test the property 'skipInstall'
     */
    @Test
    public void skipInstallTest() {
        // TODO: test skipInstall
    }

    /**
     * Test the property 'dumpSysinfo'
     */
    @Test
    public void dumpSysinfoTest() {
        // TODO: test dumpSysinfo
    }

    /**
     * Test the property 'loglevel'
     */
    @Test
    public void loglevelTest() {
        // TODO: test loglevel
    }

    /**
     * Test the property 'doNotDownloadClip'
     */
    @Test
    public void doNotDownloadClipTest() {
        // TODO: test doNotDownloadClip
    }

    /**
     * Test the property 'dataDir'
     */
    @Test
    public void dataDirTest() {
        // TODO: test dataDir
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'ckpt'
     */
    @Test
    public void ckptTest() {
        // TODO: test ckpt
    }

    /**
     * Test the property 'ckptDir'
     */
    @Test
    public void ckptDirTest() {
        // TODO: test ckptDir
    }

    /**
     * Test the property 'vaeDir'
     */
    @Test
    public void vaeDirTest() {
        // TODO: test vaeDir
    }

    /**
     * Test the property 'gfpganDir'
     */
    @Test
    public void gfpganDirTest() {
        // TODO: test gfpganDir
    }

    /**
     * Test the property 'gfpganModel'
     */
    @Test
    public void gfpganModelTest() {
        // TODO: test gfpganModel
    }

    /**
     * Test the property 'noHalf'
     */
    @Test
    public void noHalfTest() {
        // TODO: test noHalf
    }

    /**
     * Test the property 'noHalfVae'
     */
    @Test
    public void noHalfVaeTest() {
        // TODO: test noHalfVae
    }

    /**
     * Test the property 'noProgressbarHiding'
     */
    @Test
    public void noProgressbarHidingTest() {
        // TODO: test noProgressbarHiding
    }

    /**
     * Test the property 'maxBatchCount'
     */
    @Test
    public void maxBatchCountTest() {
        // TODO: test maxBatchCount
    }

    /**
     * Test the property 'embeddingsDir'
     */
    @Test
    public void embeddingsDirTest() {
        // TODO: test embeddingsDir
    }

    /**
     * Test the property 'textualInversionTemplatesDir'
     */
    @Test
    public void textualInversionTemplatesDirTest() {
        // TODO: test textualInversionTemplatesDir
    }

    /**
     * Test the property 'hypernetworkDir'
     */
    @Test
    public void hypernetworkDirTest() {
        // TODO: test hypernetworkDir
    }

    /**
     * Test the property 'localizationsDir'
     */
    @Test
    public void localizationsDirTest() {
        // TODO: test localizationsDir
    }

    /**
     * Test the property 'allowCode'
     */
    @Test
    public void allowCodeTest() {
        // TODO: test allowCode
    }

    /**
     * Test the property 'medvram'
     */
    @Test
    public void medvramTest() {
        // TODO: test medvram
    }

    /**
     * Test the property 'medvramSdxl'
     */
    @Test
    public void medvramSdxlTest() {
        // TODO: test medvramSdxl
    }

    /**
     * Test the property 'lowvram'
     */
    @Test
    public void lowvramTest() {
        // TODO: test lowvram
    }

    /**
     * Test the property 'lowram'
     */
    @Test
    public void lowramTest() {
        // TODO: test lowram
    }

    /**
     * Test the property 'alwaysBatchCondUncond'
     */
    @Test
    public void alwaysBatchCondUncondTest() {
        // TODO: test alwaysBatchCondUncond
    }

    /**
     * Test the property 'unloadGfpgan'
     */
    @Test
    public void unloadGfpganTest() {
        // TODO: test unloadGfpgan
    }

    /**
     * Test the property 'precision'
     */
    @Test
    public void precisionTest() {
        // TODO: test precision
    }

    /**
     * Test the property 'upcastSampling'
     */
    @Test
    public void upcastSamplingTest() {
        // TODO: test upcastSampling
    }

    /**
     * Test the property 'share'
     */
    @Test
    public void shareTest() {
        // TODO: test share
    }

    /**
     * Test the property 'ngrok'
     */
    @Test
    public void ngrokTest() {
        // TODO: test ngrok
    }

    /**
     * Test the property 'ngrokRegion'
     */
    @Test
    public void ngrokRegionTest() {
        // TODO: test ngrokRegion
    }

    /**
     * Test the property 'ngrokOptions'
     */
    @Test
    public void ngrokOptionsTest() {
        // TODO: test ngrokOptions
    }

    /**
     * Test the property 'enableInsecureExtensionAccess'
     */
    @Test
    public void enableInsecureExtensionAccessTest() {
        // TODO: test enableInsecureExtensionAccess
    }

    /**
     * Test the property 'codeformerModelsPath'
     */
    @Test
    public void codeformerModelsPathTest() {
        // TODO: test codeformerModelsPath
    }

    /**
     * Test the property 'gfpganModelsPath'
     */
    @Test
    public void gfpganModelsPathTest() {
        // TODO: test gfpganModelsPath
    }

    /**
     * Test the property 'esrganModelsPath'
     */
    @Test
    public void esrganModelsPathTest() {
        // TODO: test esrganModelsPath
    }

    /**
     * Test the property 'bsrganModelsPath'
     */
    @Test
    public void bsrganModelsPathTest() {
        // TODO: test bsrganModelsPath
    }

    /**
     * Test the property 'realesrganModelsPath'
     */
    @Test
    public void realesrganModelsPathTest() {
        // TODO: test realesrganModelsPath
    }

    /**
     * Test the property 'clipModelsPath'
     */
    @Test
    public void clipModelsPathTest() {
        // TODO: test clipModelsPath
    }

    /**
     * Test the property 'xformers'
     */
    @Test
    public void xformersTest() {
        // TODO: test xformers
    }

    /**
     * Test the property 'forceEnableXformers'
     */
    @Test
    public void forceEnableXformersTest() {
        // TODO: test forceEnableXformers
    }

    /**
     * Test the property 'xformersFlashAttention'
     */
    @Test
    public void xformersFlashAttentionTest() {
        // TODO: test xformersFlashAttention
    }

    /**
     * Test the property 'deepdanbooru'
     */
    @Test
    public void deepdanbooruTest() {
        // TODO: test deepdanbooru
    }

    /**
     * Test the property 'optSplitAttention'
     */
    @Test
    public void optSplitAttentionTest() {
        // TODO: test optSplitAttention
    }

    /**
     * Test the property 'optSubQuadAttention'
     */
    @Test
    public void optSubQuadAttentionTest() {
        // TODO: test optSubQuadAttention
    }

    /**
     * Test the property 'subQuadQChunkSize'
     */
    @Test
    public void subQuadQChunkSizeTest() {
        // TODO: test subQuadQChunkSize
    }

    /**
     * Test the property 'subQuadKvChunkSize'
     */
    @Test
    public void subQuadKvChunkSizeTest() {
        // TODO: test subQuadKvChunkSize
    }

    /**
     * Test the property 'subQuadChunkThreshold'
     */
    @Test
    public void subQuadChunkThresholdTest() {
        // TODO: test subQuadChunkThreshold
    }

    /**
     * Test the property 'optSplitAttentionInvokeai'
     */
    @Test
    public void optSplitAttentionInvokeaiTest() {
        // TODO: test optSplitAttentionInvokeai
    }

    /**
     * Test the property 'optSplitAttentionV1'
     */
    @Test
    public void optSplitAttentionV1Test() {
        // TODO: test optSplitAttentionV1
    }

    /**
     * Test the property 'optSdpAttention'
     */
    @Test
    public void optSdpAttentionTest() {
        // TODO: test optSdpAttention
    }

    /**
     * Test the property 'optSdpNoMemAttention'
     */
    @Test
    public void optSdpNoMemAttentionTest() {
        // TODO: test optSdpNoMemAttention
    }

    /**
     * Test the property 'disableOptSplitAttention'
     */
    @Test
    public void disableOptSplitAttentionTest() {
        // TODO: test disableOptSplitAttention
    }

    /**
     * Test the property 'disableNanCheck'
     */
    @Test
    public void disableNanCheckTest() {
        // TODO: test disableNanCheck
    }

    /**
     * Test the property 'useCpu'
     */
    @Test
    public void useCpuTest() {
        // TODO: test useCpu
    }

    /**
     * Test the property 'disableModelLoadingRamOptimization'
     */
    @Test
    public void disableModelLoadingRamOptimizationTest() {
        // TODO: test disableModelLoadingRamOptimization
    }

    /**
     * Test the property 'listen'
     */
    @Test
    public void listenTest() {
        // TODO: test listen
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'showNegativePrompt'
     */
    @Test
    public void showNegativePromptTest() {
        // TODO: test showNegativePrompt
    }

    /**
     * Test the property 'uiConfigFile'
     */
    @Test
    public void uiConfigFileTest() {
        // TODO: test uiConfigFile
    }

    /**
     * Test the property 'hideUiDirConfig'
     */
    @Test
    public void hideUiDirConfigTest() {
        // TODO: test hideUiDirConfig
    }

    /**
     * Test the property 'freezeSettings'
     */
    @Test
    public void freezeSettingsTest() {
        // TODO: test freezeSettings
    }

    /**
     * Test the property 'uiSettingsFile'
     */
    @Test
    public void uiSettingsFileTest() {
        // TODO: test uiSettingsFile
    }

    /**
     * Test the property 'gradioDebug'
     */
    @Test
    public void gradioDebugTest() {
        // TODO: test gradioDebug
    }

    /**
     * Test the property 'gradioAuth'
     */
    @Test
    public void gradioAuthTest() {
        // TODO: test gradioAuth
    }

    /**
     * Test the property 'gradioAuthPath'
     */
    @Test
    public void gradioAuthPathTest() {
        // TODO: test gradioAuthPath
    }

    /**
     * Test the property 'gradioImg2imgTool'
     */
    @Test
    public void gradioImg2imgToolTest() {
        // TODO: test gradioImg2imgTool
    }

    /**
     * Test the property 'gradioInpaintTool'
     */
    @Test
    public void gradioInpaintToolTest() {
        // TODO: test gradioInpaintTool
    }

    /**
     * Test the property 'gradioAllowedPath'
     */
    @Test
    public void gradioAllowedPathTest() {
        // TODO: test gradioAllowedPath
    }

    /**
     * Test the property 'optChannelslast'
     */
    @Test
    public void optChannelslastTest() {
        // TODO: test optChannelslast
    }

    /**
     * Test the property 'stylesFile'
     */
    @Test
    public void stylesFileTest() {
        // TODO: test stylesFile
    }

    /**
     * Test the property 'autolaunch'
     */
    @Test
    public void autolaunchTest() {
        // TODO: test autolaunch
    }

    /**
     * Test the property 'theme'
     */
    @Test
    public void themeTest() {
        // TODO: test theme
    }

    /**
     * Test the property 'useTextboxSeed'
     */
    @Test
    public void useTextboxSeedTest() {
        // TODO: test useTextboxSeed
    }

    /**
     * Test the property 'disableConsoleProgressbars'
     */
    @Test
    public void disableConsoleProgressbarsTest() {
        // TODO: test disableConsoleProgressbars
    }

    /**
     * Test the property 'enableConsolePrompts'
     */
    @Test
    public void enableConsolePromptsTest() {
        // TODO: test enableConsolePrompts
    }

    /**
     * Test the property 'vaePath'
     */
    @Test
    public void vaePathTest() {
        // TODO: test vaePath
    }

    /**
     * Test the property 'disableSafeUnpickle'
     */
    @Test
    public void disableSafeUnpickleTest() {
        // TODO: test disableSafeUnpickle
    }

    /**
     * Test the property 'api'
     */
    @Test
    public void apiTest() {
        // TODO: test api
    }

    /**
     * Test the property 'apiAuth'
     */
    @Test
    public void apiAuthTest() {
        // TODO: test apiAuth
    }

    /**
     * Test the property 'apiLog'
     */
    @Test
    public void apiLogTest() {
        // TODO: test apiLog
    }

    /**
     * Test the property 'nowebui'
     */
    @Test
    public void nowebuiTest() {
        // TODO: test nowebui
    }

    /**
     * Test the property 'uiDebugMode'
     */
    @Test
    public void uiDebugModeTest() {
        // TODO: test uiDebugMode
    }

    /**
     * Test the property 'deviceId'
     */
    @Test
    public void deviceIdTest() {
        // TODO: test deviceId
    }

    /**
     * Test the property 'administrator'
     */
    @Test
    public void administratorTest() {
        // TODO: test administrator
    }

    /**
     * Test the property 'corsAllowOrigins'
     */
    @Test
    public void corsAllowOriginsTest() {
        // TODO: test corsAllowOrigins
    }

    /**
     * Test the property 'corsAllowOriginsRegex'
     */
    @Test
    public void corsAllowOriginsRegexTest() {
        // TODO: test corsAllowOriginsRegex
    }

    /**
     * Test the property 'tlsKeyfile'
     */
    @Test
    public void tlsKeyfileTest() {
        // TODO: test tlsKeyfile
    }

    /**
     * Test the property 'tlsCertfile'
     */
    @Test
    public void tlsCertfileTest() {
        // TODO: test tlsCertfile
    }

    /**
     * Test the property 'disableTlsVerify'
     */
    @Test
    public void disableTlsVerifyTest() {
        // TODO: test disableTlsVerify
    }

    /**
     * Test the property 'serverName'
     */
    @Test
    public void serverNameTest() {
        // TODO: test serverName
    }

    /**
     * Test the property 'gradioQueue'
     */
    @Test
    public void gradioQueueTest() {
        // TODO: test gradioQueue
    }

    /**
     * Test the property 'noGradioQueue'
     */
    @Test
    public void noGradioQueueTest() {
        // TODO: test noGradioQueue
    }

    /**
     * Test the property 'skipVersionCheck'
     */
    @Test
    public void skipVersionCheckTest() {
        // TODO: test skipVersionCheck
    }

    /**
     * Test the property 'noHashing'
     */
    @Test
    public void noHashingTest() {
        // TODO: test noHashing
    }

    /**
     * Test the property 'noDownloadSdModel'
     */
    @Test
    public void noDownloadSdModelTest() {
        // TODO: test noDownloadSdModel
    }

    /**
     * Test the property 'subpath'
     */
    @Test
    public void subpathTest() {
        // TODO: test subpath
    }

    /**
     * Test the property 'addStopRoute'
     */
    @Test
    public void addStopRouteTest() {
        // TODO: test addStopRoute
    }

    /**
     * Test the property 'apiServerStop'
     */
    @Test
    public void apiServerStopTest() {
        // TODO: test apiServerStop
    }

    /**
     * Test the property 'timeoutKeepAlive'
     */
    @Test
    public void timeoutKeepAliveTest() {
        // TODO: test timeoutKeepAlive
    }

    /**
     * Test the property 'disableAllExtensions'
     */
    @Test
    public void disableAllExtensionsTest() {
        // TODO: test disableAllExtensions
    }

    /**
     * Test the property 'disableExtraExtensions'
     */
    @Test
    public void disableExtraExtensionsTest() {
        // TODO: test disableExtraExtensions
    }

    /**
     * Test the property 'ldsrModelsPath'
     */
    @Test
    public void ldsrModelsPathTest() {
        // TODO: test ldsrModelsPath
    }

    /**
     * Test the property 'loraDir'
     */
    @Test
    public void loraDirTest() {
        // TODO: test loraDir
    }

    /**
     * Test the property 'lycoDirBackcompat'
     */
    @Test
    public void lycoDirBackcompatTest() {
        // TODO: test lycoDirBackcompat
    }

    /**
     * Test the property 'scunetModelsPath'
     */
    @Test
    public void scunetModelsPathTest() {
        // TODO: test scunetModelsPath
    }

    /**
     * Test the property 'swinirModelsPath'
     */
    @Test
    public void swinirModelsPathTest() {
        // TODO: test swinirModelsPath
    }

}
