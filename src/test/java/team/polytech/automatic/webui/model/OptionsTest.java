/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for Options
 */
public class OptionsTest {
    private final Options model = new Options();

    /**
     * Model tests for Options
     */
    @Test
    public void testOptions() {
        // TODO: test Options
    }

    /**
     * Test the property 'samplesSave'
     */
    @Test
    public void samplesSaveTest() {
        // TODO: test samplesSave
    }

    /**
     * Test the property 'samplesFormat'
     */
    @Test
    public void samplesFormatTest() {
        // TODO: test samplesFormat
    }

    /**
     * Test the property 'samplesFilenamePattern'
     */
    @Test
    public void samplesFilenamePatternTest() {
        // TODO: test samplesFilenamePattern
    }

    /**
     * Test the property 'saveImagesAddNumber'
     */
    @Test
    public void saveImagesAddNumberTest() {
        // TODO: test saveImagesAddNumber
    }

    /**
     * Test the property 'gridSave'
     */
    @Test
    public void gridSaveTest() {
        // TODO: test gridSave
    }

    /**
     * Test the property 'gridFormat'
     */
    @Test
    public void gridFormatTest() {
        // TODO: test gridFormat
    }

    /**
     * Test the property 'gridExtendedFilename'
     */
    @Test
    public void gridExtendedFilenameTest() {
        // TODO: test gridExtendedFilename
    }

    /**
     * Test the property 'gridOnlyIfMultiple'
     */
    @Test
    public void gridOnlyIfMultipleTest() {
        // TODO: test gridOnlyIfMultiple
    }

    /**
     * Test the property 'gridPreventEmptySpots'
     */
    @Test
    public void gridPreventEmptySpotsTest() {
        // TODO: test gridPreventEmptySpots
    }

    /**
     * Test the property 'gridZipFilenamePattern'
     */
    @Test
    public void gridZipFilenamePatternTest() {
        // TODO: test gridZipFilenamePattern
    }

    /**
     * Test the property 'nRows'
     */
    @Test
    public void nRowsTest() {
        // TODO: test nRows
    }

    /**
     * Test the property 'font'
     */
    @Test
    public void fontTest() {
        // TODO: test font
    }

    /**
     * Test the property 'gridTextActiveColor'
     */
    @Test
    public void gridTextActiveColorTest() {
        // TODO: test gridTextActiveColor
    }

    /**
     * Test the property 'gridTextInactiveColor'
     */
    @Test
    public void gridTextInactiveColorTest() {
        // TODO: test gridTextInactiveColor
    }

    /**
     * Test the property 'gridBackgroundColor'
     */
    @Test
    public void gridBackgroundColorTest() {
        // TODO: test gridBackgroundColor
    }

    /**
     * Test the property 'enablePnginfo'
     */
    @Test
    public void enablePnginfoTest() {
        // TODO: test enablePnginfo
    }

    /**
     * Test the property 'saveTxt'
     */
    @Test
    public void saveTxtTest() {
        // TODO: test saveTxt
    }

    /**
     * Test the property 'saveImagesBeforeFaceRestoration'
     */
    @Test
    public void saveImagesBeforeFaceRestorationTest() {
        // TODO: test saveImagesBeforeFaceRestoration
    }

    /**
     * Test the property 'saveImagesBeforeHighresFix'
     */
    @Test
    public void saveImagesBeforeHighresFixTest() {
        // TODO: test saveImagesBeforeHighresFix
    }

    /**
     * Test the property 'saveImagesBeforeColorCorrection'
     */
    @Test
    public void saveImagesBeforeColorCorrectionTest() {
        // TODO: test saveImagesBeforeColorCorrection
    }

    /**
     * Test the property 'saveMask'
     */
    @Test
    public void saveMaskTest() {
        // TODO: test saveMask
    }

    /**
     * Test the property 'saveMaskComposite'
     */
    @Test
    public void saveMaskCompositeTest() {
        // TODO: test saveMaskComposite
    }

    /**
     * Test the property 'jpegQuality'
     */
    @Test
    public void jpegQualityTest() {
        // TODO: test jpegQuality
    }

    /**
     * Test the property 'webpLossless'
     */
    @Test
    public void webpLosslessTest() {
        // TODO: test webpLossless
    }

    /**
     * Test the property 'exportFor4chan'
     */
    @Test
    public void exportFor4chanTest() {
        // TODO: test exportFor4chan
    }

    /**
     * Test the property 'imgDownscaleThreshold'
     */
    @Test
    public void imgDownscaleThresholdTest() {
        // TODO: test imgDownscaleThreshold
    }

    /**
     * Test the property 'targetSideLength'
     */
    @Test
    public void targetSideLengthTest() {
        // TODO: test targetSideLength
    }

    /**
     * Test the property 'imgMaxSizeMp'
     */
    @Test
    public void imgMaxSizeMpTest() {
        // TODO: test imgMaxSizeMp
    }

    /**
     * Test the property 'useOriginalNameBatch'
     */
    @Test
    public void useOriginalNameBatchTest() {
        // TODO: test useOriginalNameBatch
    }

    /**
     * Test the property 'useUpscalerNameAsSuffix'
     */
    @Test
    public void useUpscalerNameAsSuffixTest() {
        // TODO: test useUpscalerNameAsSuffix
    }

    /**
     * Test the property 'saveSelectedOnly'
     */
    @Test
    public void saveSelectedOnlyTest() {
        // TODO: test saveSelectedOnly
    }

    /**
     * Test the property 'saveInitImg'
     */
    @Test
    public void saveInitImgTest() {
        // TODO: test saveInitImg
    }

    /**
     * Test the property 'tempDir'
     */
    @Test
    public void tempDirTest() {
        // TODO: test tempDir
    }

    /**
     * Test the property 'cleanTempDirAtStart'
     */
    @Test
    public void cleanTempDirAtStartTest() {
        // TODO: test cleanTempDirAtStart
    }

    /**
     * Test the property 'saveIncompleteImages'
     */
    @Test
    public void saveIncompleteImagesTest() {
        // TODO: test saveIncompleteImages
    }

    /**
     * Test the property 'outdirSamples'
     */
    @Test
    public void outdirSamplesTest() {
        // TODO: test outdirSamples
    }

    /**
     * Test the property 'outdirTxt2imgSamples'
     */
    @Test
    public void outdirTxt2imgSamplesTest() {
        // TODO: test outdirTxt2imgSamples
    }

    /**
     * Test the property 'outdirImg2imgSamples'
     */
    @Test
    public void outdirImg2imgSamplesTest() {
        // TODO: test outdirImg2imgSamples
    }

    /**
     * Test the property 'outdirExtrasSamples'
     */
    @Test
    public void outdirExtrasSamplesTest() {
        // TODO: test outdirExtrasSamples
    }

    /**
     * Test the property 'outdirGrids'
     */
    @Test
    public void outdirGridsTest() {
        // TODO: test outdirGrids
    }

    /**
     * Test the property 'outdirTxt2imgGrids'
     */
    @Test
    public void outdirTxt2imgGridsTest() {
        // TODO: test outdirTxt2imgGrids
    }

    /**
     * Test the property 'outdirImg2imgGrids'
     */
    @Test
    public void outdirImg2imgGridsTest() {
        // TODO: test outdirImg2imgGrids
    }

    /**
     * Test the property 'outdirSave'
     */
    @Test
    public void outdirSaveTest() {
        // TODO: test outdirSave
    }

    /**
     * Test the property 'outdirInitImages'
     */
    @Test
    public void outdirInitImagesTest() {
        // TODO: test outdirInitImages
    }

    /**
     * Test the property 'saveToDirs'
     */
    @Test
    public void saveToDirsTest() {
        // TODO: test saveToDirs
    }

    /**
     * Test the property 'gridSaveToDirs'
     */
    @Test
    public void gridSaveToDirsTest() {
        // TODO: test gridSaveToDirs
    }

    /**
     * Test the property 'useSaveToDirsForUi'
     */
    @Test
    public void useSaveToDirsForUiTest() {
        // TODO: test useSaveToDirsForUi
    }

    /**
     * Test the property 'directoriesFilenamePattern'
     */
    @Test
    public void directoriesFilenamePatternTest() {
        // TODO: test directoriesFilenamePattern
    }

    /**
     * Test the property 'directoriesMaxPromptWords'
     */
    @Test
    public void directoriesMaxPromptWordsTest() {
        // TODO: test directoriesMaxPromptWords
    }

    /**
     * Test the property 'esRGANTile'
     */
    @Test
    public void esRGANTileTest() {
        // TODO: test esRGANTile
    }

    /**
     * Test the property 'esRGANTileOverlap'
     */
    @Test
    public void esRGANTileOverlapTest() {
        // TODO: test esRGANTileOverlap
    }

    /**
     * Test the property 'realesrganEnabledModels'
     */
    @Test
    public void realesrganEnabledModelsTest() {
        // TODO: test realesrganEnabledModels
    }

    /**
     * Test the property 'upscalerForImg2img'
     */
    @Test
    public void upscalerForImg2imgTest() {
        // TODO: test upscalerForImg2img
    }

    /**
     * Test the property 'faceRestoration'
     */
    @Test
    public void faceRestorationTest() {
        // TODO: test faceRestoration
    }

    /**
     * Test the property 'faceRestorationModel'
     */
    @Test
    public void faceRestorationModelTest() {
        // TODO: test faceRestorationModel
    }

    /**
     * Test the property 'codeFormerWeight'
     */
    @Test
    public void codeFormerWeightTest() {
        // TODO: test codeFormerWeight
    }

    /**
     * Test the property 'faceRestorationUnload'
     */
    @Test
    public void faceRestorationUnloadTest() {
        // TODO: test faceRestorationUnload
    }

    /**
     * Test the property 'autoLaunchBrowser'
     */
    @Test
    public void autoLaunchBrowserTest() {
        // TODO: test autoLaunchBrowser
    }

    /**
     * Test the property 'showWarnings'
     */
    @Test
    public void showWarningsTest() {
        // TODO: test showWarnings
    }

    /**
     * Test the property 'showGradioDeprecationWarnings'
     */
    @Test
    public void showGradioDeprecationWarningsTest() {
        // TODO: test showGradioDeprecationWarnings
    }

    /**
     * Test the property 'memmonPollRate'
     */
    @Test
    public void memmonPollRateTest() {
        // TODO: test memmonPollRate
    }

    /**
     * Test the property 'samplesLogStdout'
     */
    @Test
    public void samplesLogStdoutTest() {
        // TODO: test samplesLogStdout
    }

    /**
     * Test the property 'multipleTqdm'
     */
    @Test
    public void multipleTqdmTest() {
        // TODO: test multipleTqdm
    }

    /**
     * Test the property 'printHypernetExtra'
     */
    @Test
    public void printHypernetExtraTest() {
        // TODO: test printHypernetExtra
    }

    /**
     * Test the property 'listHiddenFiles'
     */
    @Test
    public void listHiddenFilesTest() {
        // TODO: test listHiddenFiles
    }

    /**
     * Test the property 'disableMmapLoadSafetensors'
     */
    @Test
    public void disableMmapLoadSafetensorsTest() {
        // TODO: test disableMmapLoadSafetensors
    }

    /**
     * Test the property 'hideLdmPrints'
     */
    @Test
    public void hideLdmPrintsTest() {
        // TODO: test hideLdmPrints
    }

    /**
     * Test the property 'apiEnableRequests'
     */
    @Test
    public void apiEnableRequestsTest() {
        // TODO: test apiEnableRequests
    }

    /**
     * Test the property 'apiForbidLocalRequests'
     */
    @Test
    public void apiForbidLocalRequestsTest() {
        // TODO: test apiForbidLocalRequests
    }

    /**
     * Test the property 'apiUseragent'
     */
    @Test
    public void apiUseragentTest() {
        // TODO: test apiUseragent
    }

    /**
     * Test the property 'unloadModelsWhenTraining'
     */
    @Test
    public void unloadModelsWhenTrainingTest() {
        // TODO: test unloadModelsWhenTraining
    }

    /**
     * Test the property 'pinMemory'
     */
    @Test
    public void pinMemoryTest() {
        // TODO: test pinMemory
    }

    /**
     * Test the property 'saveOptimizerState'
     */
    @Test
    public void saveOptimizerStateTest() {
        // TODO: test saveOptimizerState
    }

    /**
     * Test the property 'saveTrainingSettingsToTxt'
     */
    @Test
    public void saveTrainingSettingsToTxtTest() {
        // TODO: test saveTrainingSettingsToTxt
    }

    /**
     * Test the property 'datasetFilenameWordRegex'
     */
    @Test
    public void datasetFilenameWordRegexTest() {
        // TODO: test datasetFilenameWordRegex
    }

    /**
     * Test the property 'datasetFilenameJoinString'
     */
    @Test
    public void datasetFilenameJoinStringTest() {
        // TODO: test datasetFilenameJoinString
    }

    /**
     * Test the property 'trainingImageRepeatsPerEpoch'
     */
    @Test
    public void trainingImageRepeatsPerEpochTest() {
        // TODO: test trainingImageRepeatsPerEpoch
    }

    /**
     * Test the property 'trainingWriteCsvEvery'
     */
    @Test
    public void trainingWriteCsvEveryTest() {
        // TODO: test trainingWriteCsvEvery
    }

    /**
     * Test the property 'trainingXattentionOptimizations'
     */
    @Test
    public void trainingXattentionOptimizationsTest() {
        // TODO: test trainingXattentionOptimizations
    }

    /**
     * Test the property 'trainingEnableTensorboard'
     */
    @Test
    public void trainingEnableTensorboardTest() {
        // TODO: test trainingEnableTensorboard
    }

    /**
     * Test the property 'trainingTensorboardSaveImages'
     */
    @Test
    public void trainingTensorboardSaveImagesTest() {
        // TODO: test trainingTensorboardSaveImages
    }

    /**
     * Test the property 'trainingTensorboardFlushEvery'
     */
    @Test
    public void trainingTensorboardFlushEveryTest() {
        // TODO: test trainingTensorboardFlushEvery
    }

    /**
     * Test the property 'sdModelCheckpoint'
     */
    @Test
    public void sdModelCheckpointTest() {
        // TODO: test sdModelCheckpoint
    }

    /**
     * Test the property 'sdCheckpointsLimit'
     */
    @Test
    public void sdCheckpointsLimitTest() {
        // TODO: test sdCheckpointsLimit
    }

    /**
     * Test the property 'sdCheckpointsKeepInCpu'
     */
    @Test
    public void sdCheckpointsKeepInCpuTest() {
        // TODO: test sdCheckpointsKeepInCpu
    }

    /**
     * Test the property 'sdCheckpointCache'
     */
    @Test
    public void sdCheckpointCacheTest() {
        // TODO: test sdCheckpointCache
    }

    /**
     * Test the property 'sdUnet'
     */
    @Test
    public void sdUnetTest() {
        // TODO: test sdUnet
    }

    /**
     * Test the property 'enableQuantization'
     */
    @Test
    public void enableQuantizationTest() {
        // TODO: test enableQuantization
    }

    /**
     * Test the property 'enableEmphasis'
     */
    @Test
    public void enableEmphasisTest() {
        // TODO: test enableEmphasis
    }

    /**
     * Test the property 'enableBatchSeeds'
     */
    @Test
    public void enableBatchSeedsTest() {
        // TODO: test enableBatchSeeds
    }

    /**
     * Test the property 'commaPaddingBacktrack'
     */
    @Test
    public void commaPaddingBacktrackTest() {
        // TODO: test commaPaddingBacktrack
    }

    /**
     * Test the property 'clIPStopAtLastLayers'
     */
    @Test
    public void clIPStopAtLastLayersTest() {
        // TODO: test clIPStopAtLastLayers
    }

    /**
     * Test the property 'upcastAttn'
     */
    @Test
    public void upcastAttnTest() {
        // TODO: test upcastAttn
    }

    /**
     * Test the property 'randnSource'
     */
    @Test
    public void randnSourceTest() {
        // TODO: test randnSource
    }

    /**
     * Test the property 'tiling'
     */
    @Test
    public void tilingTest() {
        // TODO: test tiling
    }

    /**
     * Test the property 'hiresFixRefinerPass'
     */
    @Test
    public void hiresFixRefinerPassTest() {
        // TODO: test hiresFixRefinerPass
    }

    /**
     * Test the property 'sdxlCropTop'
     */
    @Test
    public void sdxlCropTopTest() {
        // TODO: test sdxlCropTop
    }

    /**
     * Test the property 'sdxlCropLeft'
     */
    @Test
    public void sdxlCropLeftTest() {
        // TODO: test sdxlCropLeft
    }

    /**
     * Test the property 'sdxlRefinerLowAestheticScore'
     */
    @Test
    public void sdxlRefinerLowAestheticScoreTest() {
        // TODO: test sdxlRefinerLowAestheticScore
    }

    /**
     * Test the property 'sdxlRefinerHighAestheticScore'
     */
    @Test
    public void sdxlRefinerHighAestheticScoreTest() {
        // TODO: test sdxlRefinerHighAestheticScore
    }

    /**
     * Test the property 'sdVaeExplanation'
     */
    @Test
    public void sdVaeExplanationTest() {
        // TODO: test sdVaeExplanation
    }

    /**
     * Test the property 'sdVaeCheckpointCache'
     */
    @Test
    public void sdVaeCheckpointCacheTest() {
        // TODO: test sdVaeCheckpointCache
    }

    /**
     * Test the property 'sdVae'
     */
    @Test
    public void sdVaeTest() {
        // TODO: test sdVae
    }

    /**
     * Test the property 'sdVaeOverridesPerModelPreferences'
     */
    @Test
    public void sdVaeOverridesPerModelPreferencesTest() {
        // TODO: test sdVaeOverridesPerModelPreferences
    }

    /**
     * Test the property 'autoVaePrecision'
     */
    @Test
    public void autoVaePrecisionTest() {
        // TODO: test autoVaePrecision
    }

    /**
     * Test the property 'sdVaeEncodeMethod'
     */
    @Test
    public void sdVaeEncodeMethodTest() {
        // TODO: test sdVaeEncodeMethod
    }

    /**
     * Test the property 'sdVaeDecodeMethod'
     */
    @Test
    public void sdVaeDecodeMethodTest() {
        // TODO: test sdVaeDecodeMethod
    }

    /**
     * Test the property 'inpaintingMaskWeight'
     */
    @Test
    public void inpaintingMaskWeightTest() {
        // TODO: test inpaintingMaskWeight
    }

    /**
     * Test the property 'initialNoiseMultiplier'
     */
    @Test
    public void initialNoiseMultiplierTest() {
        // TODO: test initialNoiseMultiplier
    }

    /**
     * Test the property 'img2imgExtraNoise'
     */
    @Test
    public void img2imgExtraNoiseTest() {
        // TODO: test img2imgExtraNoise
    }

    /**
     * Test the property 'img2imgColorCorrection'
     */
    @Test
    public void img2imgColorCorrectionTest() {
        // TODO: test img2imgColorCorrection
    }

    /**
     * Test the property 'img2imgFixSteps'
     */
    @Test
    public void img2imgFixStepsTest() {
        // TODO: test img2imgFixSteps
    }

    /**
     * Test the property 'img2imgBackgroundColor'
     */
    @Test
    public void img2imgBackgroundColorTest() {
        // TODO: test img2imgBackgroundColor
    }

    /**
     * Test the property 'img2imgEditorHeight'
     */
    @Test
    public void img2imgEditorHeightTest() {
        // TODO: test img2imgEditorHeight
    }

    /**
     * Test the property 'img2imgSketchDefaultBrushColor'
     */
    @Test
    public void img2imgSketchDefaultBrushColorTest() {
        // TODO: test img2imgSketchDefaultBrushColor
    }

    /**
     * Test the property 'img2imgInpaintMaskBrushColor'
     */
    @Test
    public void img2imgInpaintMaskBrushColorTest() {
        // TODO: test img2imgInpaintMaskBrushColor
    }

    /**
     * Test the property 'img2imgInpaintSketchDefaultBrushColor'
     */
    @Test
    public void img2imgInpaintSketchDefaultBrushColorTest() {
        // TODO: test img2imgInpaintSketchDefaultBrushColor
    }

    /**
     * Test the property 'returnMask'
     */
    @Test
    public void returnMaskTest() {
        // TODO: test returnMask
    }

    /**
     * Test the property 'returnMaskComposite'
     */
    @Test
    public void returnMaskCompositeTest() {
        // TODO: test returnMaskComposite
    }

    /**
     * Test the property 'crossAttentionOptimization'
     */
    @Test
    public void crossAttentionOptimizationTest() {
        // TODO: test crossAttentionOptimization
    }

    /**
     * Test the property 'sMinUncond'
     */
    @Test
    public void sMinUncondTest() {
        // TODO: test sMinUncond
    }

    /**
     * Test the property 'tokenMergingRatio'
     */
    @Test
    public void tokenMergingRatioTest() {
        // TODO: test tokenMergingRatio
    }

    /**
     * Test the property 'tokenMergingRatioImg2img'
     */
    @Test
    public void tokenMergingRatioImg2imgTest() {
        // TODO: test tokenMergingRatioImg2img
    }

    /**
     * Test the property 'tokenMergingRatioHr'
     */
    @Test
    public void tokenMergingRatioHrTest() {
        // TODO: test tokenMergingRatioHr
    }

    /**
     * Test the property 'padCondUncond'
     */
    @Test
    public void padCondUncondTest() {
        // TODO: test padCondUncond
    }

    /**
     * Test the property 'persistentCondCache'
     */
    @Test
    public void persistentCondCacheTest() {
        // TODO: test persistentCondCache
    }

    /**
     * Test the property 'batchCondUncond'
     */
    @Test
    public void batchCondUncondTest() {
        // TODO: test batchCondUncond
    }

    /**
     * Test the property 'useOldEmphasisImplementation'
     */
    @Test
    public void useOldEmphasisImplementationTest() {
        // TODO: test useOldEmphasisImplementation
    }

    /**
     * Test the property 'useOldKarrasSchedulerSigmas'
     */
    @Test
    public void useOldKarrasSchedulerSigmasTest() {
        // TODO: test useOldKarrasSchedulerSigmas
    }

    /**
     * Test the property 'noDpmppSdeBatchDeterminism'
     */
    @Test
    public void noDpmppSdeBatchDeterminismTest() {
        // TODO: test noDpmppSdeBatchDeterminism
    }

    /**
     * Test the property 'useOldHiresFixWidthHeight'
     */
    @Test
    public void useOldHiresFixWidthHeightTest() {
        // TODO: test useOldHiresFixWidthHeight
    }

    /**
     * Test the property 'dontFixSecondOrderSamplersSchedule'
     */
    @Test
    public void dontFixSecondOrderSamplersScheduleTest() {
        // TODO: test dontFixSecondOrderSamplersSchedule
    }

    /**
     * Test the property 'hiresFixUseFirstpassConds'
     */
    @Test
    public void hiresFixUseFirstpassCondsTest() {
        // TODO: test hiresFixUseFirstpassConds
    }

    /**
     * Test the property 'useOldScheduling'
     */
    @Test
    public void useOldSchedulingTest() {
        // TODO: test useOldScheduling
    }

    /**
     * Test the property 'interrogateKeepModelsInMemory'
     */
    @Test
    public void interrogateKeepModelsInMemoryTest() {
        // TODO: test interrogateKeepModelsInMemory
    }

    /**
     * Test the property 'interrogateReturnRanks'
     */
    @Test
    public void interrogateReturnRanksTest() {
        // TODO: test interrogateReturnRanks
    }

    /**
     * Test the property 'interrogateClipNumBeams'
     */
    @Test
    public void interrogateClipNumBeamsTest() {
        // TODO: test interrogateClipNumBeams
    }

    /**
     * Test the property 'interrogateClipMinLength'
     */
    @Test
    public void interrogateClipMinLengthTest() {
        // TODO: test interrogateClipMinLength
    }

    /**
     * Test the property 'interrogateClipMaxLength'
     */
    @Test
    public void interrogateClipMaxLengthTest() {
        // TODO: test interrogateClipMaxLength
    }

    /**
     * Test the property 'interrogateClipDictLimit'
     */
    @Test
    public void interrogateClipDictLimitTest() {
        // TODO: test interrogateClipDictLimit
    }

    /**
     * Test the property 'interrogateClipSkipCategories'
     */
    @Test
    public void interrogateClipSkipCategoriesTest() {
        // TODO: test interrogateClipSkipCategories
    }

    /**
     * Test the property 'interrogateDeepbooruScoreThreshold'
     */
    @Test
    public void interrogateDeepbooruScoreThresholdTest() {
        // TODO: test interrogateDeepbooruScoreThreshold
    }

    /**
     * Test the property 'deepbooruSortAlpha'
     */
    @Test
    public void deepbooruSortAlphaTest() {
        // TODO: test deepbooruSortAlpha
    }

    /**
     * Test the property 'deepbooruUseSpaces'
     */
    @Test
    public void deepbooruUseSpacesTest() {
        // TODO: test deepbooruUseSpaces
    }

    /**
     * Test the property 'deepbooruEscape'
     */
    @Test
    public void deepbooruEscapeTest() {
        // TODO: test deepbooruEscape
    }

    /**
     * Test the property 'deepbooruFilterTags'
     */
    @Test
    public void deepbooruFilterTagsTest() {
        // TODO: test deepbooruFilterTags
    }

    /**
     * Test the property 'extraNetworksShowHiddenDirectories'
     */
    @Test
    public void extraNetworksShowHiddenDirectoriesTest() {
        // TODO: test extraNetworksShowHiddenDirectories
    }

    /**
     * Test the property 'extraNetworksHiddenModels'
     */
    @Test
    public void extraNetworksHiddenModelsTest() {
        // TODO: test extraNetworksHiddenModels
    }

    /**
     * Test the property 'extraNetworksDefaultMultiplier'
     */
    @Test
    public void extraNetworksDefaultMultiplierTest() {
        // TODO: test extraNetworksDefaultMultiplier
    }

    /**
     * Test the property 'extraNetworksCardWidth'
     */
    @Test
    public void extraNetworksCardWidthTest() {
        // TODO: test extraNetworksCardWidth
    }

    /**
     * Test the property 'extraNetworksCardHeight'
     */
    @Test
    public void extraNetworksCardHeightTest() {
        // TODO: test extraNetworksCardHeight
    }

    /**
     * Test the property 'extraNetworksCardTextScale'
     */
    @Test
    public void extraNetworksCardTextScaleTest() {
        // TODO: test extraNetworksCardTextScale
    }

    /**
     * Test the property 'extraNetworksCardShowDesc'
     */
    @Test
    public void extraNetworksCardShowDescTest() {
        // TODO: test extraNetworksCardShowDesc
    }

    /**
     * Test the property 'extraNetworksAddTextSeparator'
     */
    @Test
    public void extraNetworksAddTextSeparatorTest() {
        // TODO: test extraNetworksAddTextSeparator
    }

    /**
     * Test the property 'uiExtraNetworksTabReorder'
     */
    @Test
    public void uiExtraNetworksTabReorderTest() {
        // TODO: test uiExtraNetworksTabReorder
    }

    /**
     * Test the property 'textualInversionPrintAtLoad'
     */
    @Test
    public void textualInversionPrintAtLoadTest() {
        // TODO: test textualInversionPrintAtLoad
    }

    /**
     * Test the property 'textualInversionAddHashesToInfotext'
     */
    @Test
    public void textualInversionAddHashesToInfotextTest() {
        // TODO: test textualInversionAddHashesToInfotext
    }

    /**
     * Test the property 'sdHypernetwork'
     */
    @Test
    public void sdHypernetworkTest() {
        // TODO: test sdHypernetwork
    }

    /**
     * Test the property 'localization'
     */
    @Test
    public void localizationTest() {
        // TODO: test localization
    }

    /**
     * Test the property 'gradioTheme'
     */
    @Test
    public void gradioThemeTest() {
        // TODO: test gradioTheme
    }

    /**
     * Test the property 'gradioThemesCache'
     */
    @Test
    public void gradioThemesCacheTest() {
        // TODO: test gradioThemesCache
    }

    /**
     * Test the property 'galleryHeight'
     */
    @Test
    public void galleryHeightTest() {
        // TODO: test galleryHeight
    }

    /**
     * Test the property 'returnGrid'
     */
    @Test
    public void returnGridTest() {
        // TODO: test returnGrid
    }

    /**
     * Test the property 'doNotShowImages'
     */
    @Test
    public void doNotShowImagesTest() {
        // TODO: test doNotShowImages
    }

    /**
     * Test the property 'sendSeed'
     */
    @Test
    public void sendSeedTest() {
        // TODO: test sendSeed
    }

    /**
     * Test the property 'sendSize'
     */
    @Test
    public void sendSizeTest() {
        // TODO: test sendSize
    }

    /**
     * Test the property 'jsModalLightbox'
     */
    @Test
    public void jsModalLightboxTest() {
        // TODO: test jsModalLightbox
    }

    /**
     * Test the property 'jsModalLightboxInitiallyZoomed'
     */
    @Test
    public void jsModalLightboxInitiallyZoomedTest() {
        // TODO: test jsModalLightboxInitiallyZoomed
    }

    /**
     * Test the property 'jsModalLightboxGamepad'
     */
    @Test
    public void jsModalLightboxGamepadTest() {
        // TODO: test jsModalLightboxGamepad
    }

    /**
     * Test the property 'jsModalLightboxGamepadRepeat'
     */
    @Test
    public void jsModalLightboxGamepadRepeatTest() {
        // TODO: test jsModalLightboxGamepadRepeat
    }

    /**
     * Test the property 'showProgressInTitle'
     */
    @Test
    public void showProgressInTitleTest() {
        // TODO: test showProgressInTitle
    }

    /**
     * Test the property 'samplersInDropdown'
     */
    @Test
    public void samplersInDropdownTest() {
        // TODO: test samplersInDropdown
    }

    /**
     * Test the property 'dimensionsAndBatchTogether'
     */
    @Test
    public void dimensionsAndBatchTogetherTest() {
        // TODO: test dimensionsAndBatchTogether
    }

    /**
     * Test the property 'keyeditPrecisionAttention'
     */
    @Test
    public void keyeditPrecisionAttentionTest() {
        // TODO: test keyeditPrecisionAttention
    }

    /**
     * Test the property 'keyeditPrecisionExtra'
     */
    @Test
    public void keyeditPrecisionExtraTest() {
        // TODO: test keyeditPrecisionExtra
    }

    /**
     * Test the property 'keyeditDelimiters'
     */
    @Test
    public void keyeditDelimitersTest() {
        // TODO: test keyeditDelimiters
    }

    /**
     * Test the property 'keyeditMove'
     */
    @Test
    public void keyeditMoveTest() {
        // TODO: test keyeditMove
    }

    /**
     * Test the property 'quicksettingsList'
     */
    @Test
    public void quicksettingsListTest() {
        // TODO: test quicksettingsList
    }

    /**
     * Test the property 'uiTabOrder'
     */
    @Test
    public void uiTabOrderTest() {
        // TODO: test uiTabOrder
    }

    /**
     * Test the property 'hiddenTabs'
     */
    @Test
    public void hiddenTabsTest() {
        // TODO: test hiddenTabs
    }

    /**
     * Test the property 'uiReorderList'
     */
    @Test
    public void uiReorderListTest() {
        // TODO: test uiReorderList
    }

    /**
     * Test the property 'hiresFixShowSampler'
     */
    @Test
    public void hiresFixShowSamplerTest() {
        // TODO: test hiresFixShowSampler
    }

    /**
     * Test the property 'hiresFixShowPrompts'
     */
    @Test
    public void hiresFixShowPromptsTest() {
        // TODO: test hiresFixShowPrompts
    }

    /**
     * Test the property 'disableTokenCounters'
     */
    @Test
    public void disableTokenCountersTest() {
        // TODO: test disableTokenCounters
    }

    /**
     * Test the property 'addModelHashToInfo'
     */
    @Test
    public void addModelHashToInfoTest() {
        // TODO: test addModelHashToInfo
    }

    /**
     * Test the property 'addModelNameToInfo'
     */
    @Test
    public void addModelNameToInfoTest() {
        // TODO: test addModelNameToInfo
    }

    /**
     * Test the property 'addUserNameToInfo'
     */
    @Test
    public void addUserNameToInfoTest() {
        // TODO: test addUserNameToInfo
    }

    /**
     * Test the property 'addVersionToInfotext'
     */
    @Test
    public void addVersionToInfotextTest() {
        // TODO: test addVersionToInfotext
    }

    /**
     * Test the property 'disableWeightsAutoSwap'
     */
    @Test
    public void disableWeightsAutoSwapTest() {
        // TODO: test disableWeightsAutoSwap
    }

    /**
     * Test the property 'infotextStyles'
     */
    @Test
    public void infotextStylesTest() {
        // TODO: test infotextStyles
    }

    /**
     * Test the property 'showProgressbar'
     */
    @Test
    public void showProgressbarTest() {
        // TODO: test showProgressbar
    }

    /**
     * Test the property 'livePreviewsEnable'
     */
    @Test
    public void livePreviewsEnableTest() {
        // TODO: test livePreviewsEnable
    }

    /**
     * Test the property 'livePreviewsImageFormat'
     */
    @Test
    public void livePreviewsImageFormatTest() {
        // TODO: test livePreviewsImageFormat
    }

    /**
     * Test the property 'showProgressGrid'
     */
    @Test
    public void showProgressGridTest() {
        // TODO: test showProgressGrid
    }

    /**
     * Test the property 'showProgressEveryNSteps'
     */
    @Test
    public void showProgressEveryNStepsTest() {
        // TODO: test showProgressEveryNSteps
    }

    /**
     * Test the property 'showProgressType'
     */
    @Test
    public void showProgressTypeTest() {
        // TODO: test showProgressType
    }

    /**
     * Test the property 'livePreviewAllowLowvramFull'
     */
    @Test
    public void livePreviewAllowLowvramFullTest() {
        // TODO: test livePreviewAllowLowvramFull
    }

    /**
     * Test the property 'livePreviewContent'
     */
    @Test
    public void livePreviewContentTest() {
        // TODO: test livePreviewContent
    }

    /**
     * Test the property 'livePreviewRefreshPeriod'
     */
    @Test
    public void livePreviewRefreshPeriodTest() {
        // TODO: test livePreviewRefreshPeriod
    }

    /**
     * Test the property 'livePreviewFastInterrupt'
     */
    @Test
    public void livePreviewFastInterruptTest() {
        // TODO: test livePreviewFastInterrupt
    }

    /**
     * Test the property 'hideSamplers'
     */
    @Test
    public void hideSamplersTest() {
        // TODO: test hideSamplers
    }

    /**
     * Test the property 'etaDdim'
     */
    @Test
    public void etaDdimTest() {
        // TODO: test etaDdim
    }

    /**
     * Test the property 'etaAncestral'
     */
    @Test
    public void etaAncestralTest() {
        // TODO: test etaAncestral
    }

    /**
     * Test the property 'ddimDiscretize'
     */
    @Test
    public void ddimDiscretizeTest() {
        // TODO: test ddimDiscretize
    }

    /**
     * Test the property 'sChurn'
     */
    @Test
    public void sChurnTest() {
        // TODO: test sChurn
    }

    /**
     * Test the property 'sTmin'
     */
    @Test
    public void sTminTest() {
        // TODO: test sTmin
    }

    /**
     * Test the property 'sTmax'
     */
    @Test
    public void sTmaxTest() {
        // TODO: test sTmax
    }

    /**
     * Test the property 'sNoise'
     */
    @Test
    public void sNoiseTest() {
        // TODO: test sNoise
    }

    /**
     * Test the property 'kSchedType'
     */
    @Test
    public void kSchedTypeTest() {
        // TODO: test kSchedType
    }

    /**
     * Test the property 'sigmaMin'
     */
    @Test
    public void sigmaMinTest() {
        // TODO: test sigmaMin
    }

    /**
     * Test the property 'sigmaMax'
     */
    @Test
    public void sigmaMaxTest() {
        // TODO: test sigmaMax
    }

    /**
     * Test the property 'rho'
     */
    @Test
    public void rhoTest() {
        // TODO: test rho
    }

    /**
     * Test the property 'etaNoiseSeedDelta'
     */
    @Test
    public void etaNoiseSeedDeltaTest() {
        // TODO: test etaNoiseSeedDelta
    }

    /**
     * Test the property 'alwaysDiscardNextToLastSigma'
     */
    @Test
    public void alwaysDiscardNextToLastSigmaTest() {
        // TODO: test alwaysDiscardNextToLastSigma
    }

    /**
     * Test the property 'sgmNoiseMultiplier'
     */
    @Test
    public void sgmNoiseMultiplierTest() {
        // TODO: test sgmNoiseMultiplier
    }

    /**
     * Test the property 'uniPcVariant'
     */
    @Test
    public void uniPcVariantTest() {
        // TODO: test uniPcVariant
    }

    /**
     * Test the property 'uniPcSkipType'
     */
    @Test
    public void uniPcSkipTypeTest() {
        // TODO: test uniPcSkipType
    }

    /**
     * Test the property 'uniPcOrder'
     */
    @Test
    public void uniPcOrderTest() {
        // TODO: test uniPcOrder
    }

    /**
     * Test the property 'uniPcLowerOrderFinal'
     */
    @Test
    public void uniPcLowerOrderFinalTest() {
        // TODO: test uniPcLowerOrderFinal
    }

    /**
     * Test the property 'postprocessingEnableInMainUi'
     */
    @Test
    public void postprocessingEnableInMainUiTest() {
        // TODO: test postprocessingEnableInMainUi
    }

    /**
     * Test the property 'postprocessingOperationOrder'
     */
    @Test
    public void postprocessingOperationOrderTest() {
        // TODO: test postprocessingOperationOrder
    }

    /**
     * Test the property 'upscalingMaxImagesInCache'
     */
    @Test
    public void upscalingMaxImagesInCacheTest() {
        // TODO: test upscalingMaxImagesInCache
    }

    /**
     * Test the property 'disabledExtensions'
     */
    @Test
    public void disabledExtensionsTest() {
        // TODO: test disabledExtensions
    }

    /**
     * Test the property 'disableAllExtensions'
     */
    @Test
    public void disableAllExtensionsTest() {
        // TODO: test disableAllExtensions
    }

    /**
     * Test the property 'restoreConfigStateFile'
     */
    @Test
    public void restoreConfigStateFileTest() {
        // TODO: test restoreConfigStateFile
    }

    /**
     * Test the property 'sdCheckpointHash'
     */
    @Test
    public void sdCheckpointHashTest() {
        // TODO: test sdCheckpointHash
    }

    /**
     * Test the property 'sdLora'
     */
    @Test
    public void sdLoraTest() {
        // TODO: test sdLora
    }

    /**
     * Test the property 'loraPreferredName'
     */
    @Test
    public void loraPreferredNameTest() {
        // TODO: test loraPreferredName
    }

    /**
     * Test the property 'loraAddHashesToInfotext'
     */
    @Test
    public void loraAddHashesToInfotextTest() {
        // TODO: test loraAddHashesToInfotext
    }

    /**
     * Test the property 'loraShowAll'
     */
    @Test
    public void loraShowAllTest() {
        // TODO: test loraShowAll
    }

    /**
     * Test the property 'loraHideUnknownForVersions'
     */
    @Test
    public void loraHideUnknownForVersionsTest() {
        // TODO: test loraHideUnknownForVersions
    }

    /**
     * Test the property 'loraInMemoryLimit'
     */
    @Test
    public void loraInMemoryLimitTest() {
        // TODO: test loraInMemoryLimit
    }

    /**
     * Test the property 'loraFunctional'
     */
    @Test
    public void loraFunctionalTest() {
        // TODO: test loraFunctional
    }

    /**
     * Test the property 'canvasHotkeyZoom'
     */
    @Test
    public void canvasHotkeyZoomTest() {
        // TODO: test canvasHotkeyZoom
    }

    /**
     * Test the property 'canvasHotkeyAdjust'
     */
    @Test
    public void canvasHotkeyAdjustTest() {
        // TODO: test canvasHotkeyAdjust
    }

    /**
     * Test the property 'canvasHotkeyMove'
     */
    @Test
    public void canvasHotkeyMoveTest() {
        // TODO: test canvasHotkeyMove
    }

    /**
     * Test the property 'canvasHotkeyFullscreen'
     */
    @Test
    public void canvasHotkeyFullscreenTest() {
        // TODO: test canvasHotkeyFullscreen
    }

    /**
     * Test the property 'canvasHotkeyReset'
     */
    @Test
    public void canvasHotkeyResetTest() {
        // TODO: test canvasHotkeyReset
    }

    /**
     * Test the property 'canvasHotkeyOverlap'
     */
    @Test
    public void canvasHotkeyOverlapTest() {
        // TODO: test canvasHotkeyOverlap
    }

    /**
     * Test the property 'canvasShowTooltip'
     */
    @Test
    public void canvasShowTooltipTest() {
        // TODO: test canvasShowTooltip
    }

    /**
     * Test the property 'canvasAutoExpand'
     */
    @Test
    public void canvasAutoExpandTest() {
        // TODO: test canvasAutoExpand
    }

    /**
     * Test the property 'canvasBlurPrompt'
     */
    @Test
    public void canvasBlurPromptTest() {
        // TODO: test canvasBlurPrompt
    }

    /**
     * Test the property 'canvasDisabledFunctions'
     */
    @Test
    public void canvasDisabledFunctionsTest() {
        // TODO: test canvasDisabledFunctions
    }

    /**
     * Test the property 'extraOptionsTxt2img'
     */
    @Test
    public void extraOptionsTxt2imgTest() {
        // TODO: test extraOptionsTxt2img
    }

    /**
     * Test the property 'extraOptionsImg2img'
     */
    @Test
    public void extraOptionsImg2imgTest() {
        // TODO: test extraOptionsImg2img
    }

    /**
     * Test the property 'extraOptionsCols'
     */
    @Test
    public void extraOptionsColsTest() {
        // TODO: test extraOptionsCols
    }

    /**
     * Test the property 'extraOptionsAccordion'
     */
    @Test
    public void extraOptionsAccordionTest() {
        // TODO: test extraOptionsAccordion
    }

}
