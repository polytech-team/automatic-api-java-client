/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package team.polytech.automatic.webui.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for StableDiffusionProcessingTxt2Img
 */
public class StableDiffusionProcessingTxt2ImgTest {
    private final StableDiffusionProcessingTxt2Img model = new StableDiffusionProcessingTxt2Img();

    /**
     * Model tests for StableDiffusionProcessingTxt2Img
     */
    @Test
    public void testStableDiffusionProcessingTxt2Img() {
        // TODO: test StableDiffusionProcessingTxt2Img
    }

    /**
     * Test the property 'prompt'
     */
    @Test
    public void promptTest() {
        // TODO: test prompt
    }

    /**
     * Test the property 'negativePrompt'
     */
    @Test
    public void negativePromptTest() {
        // TODO: test negativePrompt
    }

    /**
     * Test the property 'styles'
     */
    @Test
    public void stylesTest() {
        // TODO: test styles
    }

    /**
     * Test the property 'seed'
     */
    @Test
    public void seedTest() {
        // TODO: test seed
    }

    /**
     * Test the property 'subseed'
     */
    @Test
    public void subseedTest() {
        // TODO: test subseed
    }

    /**
     * Test the property 'subseedStrength'
     */
    @Test
    public void subseedStrengthTest() {
        // TODO: test subseedStrength
    }

    /**
     * Test the property 'seedResizeFromH'
     */
    @Test
    public void seedResizeFromHTest() {
        // TODO: test seedResizeFromH
    }

    /**
     * Test the property 'seedResizeFromW'
     */
    @Test
    public void seedResizeFromWTest() {
        // TODO: test seedResizeFromW
    }

    /**
     * Test the property 'samplerName'
     */
    @Test
    public void samplerNameTest() {
        // TODO: test samplerName
    }

    /**
     * Test the property 'batchSize'
     */
    @Test
    public void batchSizeTest() {
        // TODO: test batchSize
    }

    /**
     * Test the property 'nIter'
     */
    @Test
    public void nIterTest() {
        // TODO: test nIter
    }

    /**
     * Test the property 'steps'
     */
    @Test
    public void stepsTest() {
        // TODO: test steps
    }

    /**
     * Test the property 'cfgScale'
     */
    @Test
    public void cfgScaleTest() {
        // TODO: test cfgScale
    }

    /**
     * Test the property 'width'
     */
    @Test
    public void widthTest() {
        // TODO: test width
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'restoreFaces'
     */
    @Test
    public void restoreFacesTest() {
        // TODO: test restoreFaces
    }

    /**
     * Test the property 'tiling'
     */
    @Test
    public void tilingTest() {
        // TODO: test tiling
    }

    /**
     * Test the property 'doNotSaveSamples'
     */
    @Test
    public void doNotSaveSamplesTest() {
        // TODO: test doNotSaveSamples
    }

    /**
     * Test the property 'doNotSaveGrid'
     */
    @Test
    public void doNotSaveGridTest() {
        // TODO: test doNotSaveGrid
    }

    /**
     * Test the property 'eta'
     */
    @Test
    public void etaTest() {
        // TODO: test eta
    }

    /**
     * Test the property 'denoisingStrength'
     */
    @Test
    public void denoisingStrengthTest() {
        // TODO: test denoisingStrength
    }

    /**
     * Test the property 'sMinUncond'
     */
    @Test
    public void sMinUncondTest() {
        // TODO: test sMinUncond
    }

    /**
     * Test the property 'sChurn'
     */
    @Test
    public void sChurnTest() {
        // TODO: test sChurn
    }

    /**
     * Test the property 'sTmax'
     */
    @Test
    public void sTmaxTest() {
        // TODO: test sTmax
    }

    /**
     * Test the property 'sTmin'
     */
    @Test
    public void sTminTest() {
        // TODO: test sTmin
    }

    /**
     * Test the property 'sNoise'
     */
    @Test
    public void sNoiseTest() {
        // TODO: test sNoise
    }

    /**
     * Test the property 'overrideSettings'
     */
    @Test
    public void overrideSettingsTest() {
        // TODO: test overrideSettings
    }

    /**
     * Test the property 'overrideSettingsRestoreAfterwards'
     */
    @Test
    public void overrideSettingsRestoreAfterwardsTest() {
        // TODO: test overrideSettingsRestoreAfterwards
    }

    /**
     * Test the property 'refinerCheckpoint'
     */
    @Test
    public void refinerCheckpointTest() {
        // TODO: test refinerCheckpoint
    }

    /**
     * Test the property 'refinerSwitchAt'
     */
    @Test
    public void refinerSwitchAtTest() {
        // TODO: test refinerSwitchAt
    }

    /**
     * Test the property 'disableExtraNetworks'
     */
    @Test
    public void disableExtraNetworksTest() {
        // TODO: test disableExtraNetworks
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'enableHr'
     */
    @Test
    public void enableHrTest() {
        // TODO: test enableHr
    }

    /**
     * Test the property 'firstphaseWidth'
     */
    @Test
    public void firstphaseWidthTest() {
        // TODO: test firstphaseWidth
    }

    /**
     * Test the property 'firstphaseHeight'
     */
    @Test
    public void firstphaseHeightTest() {
        // TODO: test firstphaseHeight
    }

    /**
     * Test the property 'hrScale'
     */
    @Test
    public void hrScaleTest() {
        // TODO: test hrScale
    }

    /**
     * Test the property 'hrUpscaler'
     */
    @Test
    public void hrUpscalerTest() {
        // TODO: test hrUpscaler
    }

    /**
     * Test the property 'hrSecondPassSteps'
     */
    @Test
    public void hrSecondPassStepsTest() {
        // TODO: test hrSecondPassSteps
    }

    /**
     * Test the property 'hrResizeX'
     */
    @Test
    public void hrResizeXTest() {
        // TODO: test hrResizeX
    }

    /**
     * Test the property 'hrResizeY'
     */
    @Test
    public void hrResizeYTest() {
        // TODO: test hrResizeY
    }

    /**
     * Test the property 'hrCheckpointName'
     */
    @Test
    public void hrCheckpointNameTest() {
        // TODO: test hrCheckpointName
    }

    /**
     * Test the property 'hrSamplerName'
     */
    @Test
    public void hrSamplerNameTest() {
        // TODO: test hrSamplerName
    }

    /**
     * Test the property 'hrPrompt'
     */
    @Test
    public void hrPromptTest() {
        // TODO: test hrPrompt
    }

    /**
     * Test the property 'hrNegativePrompt'
     */
    @Test
    public void hrNegativePromptTest() {
        // TODO: test hrNegativePrompt
    }

    /**
     * Test the property 'samplerIndex'
     */
    @Test
    public void samplerIndexTest() {
        // TODO: test samplerIndex
    }

    /**
     * Test the property 'scriptName'
     */
    @Test
    public void scriptNameTest() {
        // TODO: test scriptName
    }

    /**
     * Test the property 'scriptArgs'
     */
    @Test
    public void scriptArgsTest() {
        // TODO: test scriptArgs
    }

    /**
     * Test the property 'sendImages'
     */
    @Test
    public void sendImagesTest() {
        // TODO: test sendImages
    }

    /**
     * Test the property 'saveImages'
     */
    @Test
    public void saveImagesTest() {
        // TODO: test saveImages
    }

    /**
     * Test the property 'alwaysonScripts'
     */
    @Test
    public void alwaysonScriptsTest() {
        // TODO: test alwaysonScripts
    }

}
